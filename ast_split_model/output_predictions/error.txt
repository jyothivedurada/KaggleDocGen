
Code: submit_confirmed=[]
submit_fatal=[]
for i in df1:

unexpected EOF while parsing (<unknown>, line 3)

=============================================================================================

Code: def feature_importance(forest, X_train, display_results=True):
    ranked_list = []
    zero_features = []
    importances = forest.feature_importances_
    indices = np.argsort(importances)[::-1]
    if display_results:

unexpected EOF while parsing (<unknown>, line 6)

=============================================================================================

Code: SELECT
  *
FROM
  ML.TRAINING_INFO(MODEL `bqml_example.distance_p20`)
ORDER BY iteration 

unexpected indent (<unknown>, line 2)

=============================================================================================

Code: cat_1 = CatBoostRegressor(iterations=2300,
                          learning_rate=0.020,
                          depth=5,
                          loss_function='RMSE',
                          eval_metric='RMSE',
                          od_type='Iter',
                          od_wait=50,
                         )
def assess_cat(X, y_list, model_num):

unexpected EOF while parsing (<unknown>, line 9)

=============================================================================================

Code: from sklearn  import preprocessing
for col in train.columns:
    if train[col].dtype=='object' :

unexpected EOF while parsing (<unknown>, line 3)

=============================================================================================

Code: from sklearn  import preprocessing
for col in train.columns:
    if train[col].dtype=='object' :

unexpected EOF while parsing (<unknown>, line 3)

=============================================================================================

Code: cur_vocabulary = set()
for text in tqdm(train_df['question_text'].values.tolist() + test_df['question_text'].values.tolist()):
    words = text.split(' ')
    cur_vocabulary.update(set(words))
bug_punc_spacing_words_mapping = {}
for vocab in cur_vocabulary:
    if '-' in vocab:

unexpected EOF while parsing (<unknown>, line 7)

=============================================================================================

Code: p_valid = []
p_test = []
print('Performance of individual classifiers (1st layer) on X_test')   
print('------------------------------------------------------------')
for nm, clf in clfs.items():

unexpected EOF while parsing (<unknown>, line 5)

=============================================================================================

Code: import torch
import torch.nn as nn
import torch.nn.functional as F
class PixelCNN(nn.Module):

unexpected EOF while parsing (<unknown>, line 4)

=============================================================================================

Code: import torch
import torch.nn as nn
import torch.nn.functional as F
def make_vae():

unexpected EOF while parsing (<unknown>, line 4)

=============================================================================================

Code: vals = train[train['benign_malignant']=='malignant']['image_name'].index.values
fig=plt.figure(figsize=(15, 10))
columns = 4; rows = 5
for i in range(1, columns*rows +1):

unexpected EOF while parsing (<unknown>, line 4)

=============================================================================================

Code: filenames = glob.glob('/kaggle/input/deepfake-detection-challenge/test_videos/*.mp4')
X = []
start = time.time()
n_processed = 0
with torch.no_grad():
    for i, filename in tqdm(enumerate(filenames), total=len(filenames)):
        try:

unexpected EOF while parsing (<unknown>, line 7)

=============================================================================================

Code: edge=get_edge(nb,data,500)
num_of_adjacencies=get_numbers_of_adjcs(edge,nb)
text=[]
for i in range(len(nb)):
    t='neighborhood:'+'<b>'+str(nb['neighborhood_name'][i])+'</b>'+'<br>'+'boro:'+ '<b>'+str(nb['boro'][i])+'</b>'+'<br>'+'
    text.append(t)
fig=prep(edge,num_of_adjacencies,text,nb)
pyo.iplot(fig)

EOL while scanning string literal (<unknown>, line 5)

=============================================================================================

Code: text=[]
for i in range(len(nb)):
    t='neighborhood:'+'<b>'+str(nb['neighborhood_name'][i])+'</b>'+'<br>'+'boro:'+ '<b>'+str(nb['boro'][i])+'</b>'+'<br>'+'
    text.append(t)
fig=prep(edge,num_of_adjacencies,text,nb)
pyo.iplot(fig)

EOL while scanning string literal (<unknown>, line 3)

=============================================================================================

Code: edge=get_edge(nb,data,2000)
num_of_adjacencies=get_numbers_of_adjcs(edge,nb)
text=[]
for i in range(len(nb)):
    t='neighborhood:'+'<b>'+str(nb['neighborhood_name'][i])+'</b>'+'<br>'+'boro:'+ '<b>'+str(nb['boro'][i])+'</b>'+'<br>'+'
    text.append(t)
fig=prep(edge,num_of_adjacencies,text,nb)
pyo.iplot(fig)

EOL while scanning string literal (<unknown>, line 5)

=============================================================================================

Code: plt.figure(figsize=(14, 10))
plt_num = 1
for column in text_cols:

unexpected EOF while parsing (<unknown>, line 3)

=============================================================================================
