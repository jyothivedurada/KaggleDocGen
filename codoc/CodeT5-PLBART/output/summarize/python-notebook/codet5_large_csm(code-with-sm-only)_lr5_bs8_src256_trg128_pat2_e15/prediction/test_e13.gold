345	Split into training and validation groups
180	Checking the Correlation Between The Features for Application Train Dataset
26	Ability to Detect Face
449	They are very similar to each other
577	Getting Prime Cities
243	Bookings by month
38	Predict submission dates
60	We can now print the results
541	Difference varialbes were created to describe the difference beween maximum and minimum value
150	Meter Reading and Meter Type
489	Compare timing for CutMix
279	Per Capita Features
128	Manager function to call the create features functions in multiple processes
267	Affected Surface Object
360	Initialize train and test DataFrames to access IDs and depth information
197	Correlation Between Price and Other Features
508	Show influence of economical factors on housing prices
219	China scenario since first entry
482	These have their kitchen area larger than the total area of the house
512	Data preparation for test
262	Ordinal features mapping
6	Read data set
475	process submission images
565	LOAD DATASET FROM DISK
268	All Zero Features
352	Define helper functions
1	Imputations and Data Transformation
295	Rides on Map of NYC
221	Iran since first case
108	Initialize the generators
356	and batch aggregations examples for the rest of the tables ..
173	Document Vectors with hashing trick
590	RF for feature selection
118	FS with SelectFromModel and RandomForestRegressor
292	Submitting our Predictions
369	load mapping dictionaries
461	TPU Strategy and other configs
354	Train the LGBM model
424	Build the original and translated test data
293	Data Exploration and Data Cleaning
285	Machine Learning Modeling
522	Feature selection using shap
331	Remove Low Importance Features
127	Thanks for the example of ensemling different models from
156	Square feet size is positively Skewed
576	We can see above the counts of higher damageDealt smoothly decrease
551	Import libraries and data , reduce memory usage
158	Encoding Categorical Variable
368	Gaussian Approximation of Active Cases
51	Make a simple restart of runtime at this point
101	Balance the target distribution
584	Save some memory
397	Create fast tokenizer
530	Target , prediction process
436	Fast data loading
450	Importing Library Files
429	Pick some frames to display
61	Dealing with color
423	Creating submission file
257	y的异常值 drop samples which have exception value in y
226	Lets gets started
126	Its also builds on kernel functions but is appropriate for unsupervised learning
179	Analysis based Averages values
102	Train Test Split
223	Getting population for each country
314	Identify Correlated Variables
445	make hour column from transactionDT
261	High cardinality features
230	Most important or common negative words
131	Code from here and below is commented out because the kernel dies
123	Basic skin detection
265	Use Ad Image to Identify Item Category
234	Load and Explore Data
503	Get labels and their countings
417	Comparing various kappa scoring
527	Find Null data
563	LOAD PROCESSED TRAINING DATA FROM DISK
298	Train with Simple Features
210	Let us read the masks
206	Composition of Augmentations
258	y hist with defferent timestamps are similar
458	targets in labels.csv
33	FVC Progression by Sex
477	Split into train and test sets
497	Run on test dataset
515	Check the dataset
44	Prepare Testing Data
444	what already is known
305	Evaluate Best Model from Random Search
303	Try with All Time Variables
139	Using RandomForest Classifier
326	Distribution of Search Values
181	Merging the bureau dataset along with application train dataset to do more analysis
217	Now a look at Italy
493	Make TF record file for test dataset
529	Onehot encoding for categorical data
408	Will need those folders later for storing our jpegs
146	Featurization of Training Data
505	Check oversampled dataset
282	For example , we can divide the years of schooling by the age
579	Feature primitives Basically which functions are we going to use to create features
415	Load Test dataframe
18	Unfreeze all layers and find best learning rate
296	The test distribution seems to be similar to the training distribution
411	Create test generator
239	Feature Agglomeration Results
558	If you like the content of this notebook , please consider upvoting it
347	Train and validate
105	Its also builds on kernel functions but is appropriate for unsupervised learning
68	Can we get some informations out of the item description
65	Prices of the first level of categories
427	Ensemble with my historical best
405	Unhide below to see all trials results
575	Explore distribution of single variable
185	Apply reduction on some samples and visualize the results
47	Create and set up the model
531	Null data check
140	Confusion Matrix for Train Data Predictions
374	Outlier Analysis and Feature Scaling
454	Rolling monthly and yearly store means
523	Load and preprocess data
29	Preparing the training data
233	Import Packages and Functions
220	Spain since first recorded case
373	Load Packages and Data
88	My upgrade of parameters
500	Get variables to apply weight decay in AdamW optimizer
147	Fitting Logistic Regression with OneVsRest Classifier
49	Saving the model
377	OSIC training data Example
434	evaluation solved tasks
381	Create fake filepaths dataframe
80	Ensembling the solutions and submission
36	All contraction are known
471	Create Image Augmentation Generator
379	TPU Strategy and other configs
90	How many images are in each folder
187	Interpreting ROC Plot
524	Check null data
511	Test data preparation
453	Most of the dates overlap
216	Replacing Mainland china with just China
20	Data is still small enough for memory so read to memory using pandas
542	Here is a base model without parameter tuning .
327	Testing Results on Full Data
504	Define the number of repetitions for each class
329	DFS with Selected Aggregation Primitives
553	Disable fastai randomness
478	Convert an array of values into a dataset matrix
50	You can state below link to your copy of this MMDetection repo
55	Zoom on this IP
380	Load Model into TPU
343	Monthly Cash Data
407	Load Model into TPU
74	Apply Logistic Regression
378	Predict Test Set and Submit Result
64	So , some categories are expensive , but most are cheap
291	Filling missing and infinite data by zeroes
525	Check the dataset
581	NaN imputation will be skipped in this tutorial
214	For the same window we superimpose the masks above the image
254	Non physical data augmentation
472	Get Tabular Data
135	The number of samples in each cluster is the following
124	Apply skin segmentation on all training data and visualize the result
43	See how our generator work
357	load mapping dictionaries
428	This is a simple modify from
413	Save results as CSV files
24	The data is not balanced
433	train solved tasks
455	Train Our Linear Regression Model
403	Evaluate training history
336	Properly Representing Variable Types
52	Hist Graph of scores
348	Granted applications per number of children
340	Putting the Functions Together
447	There is a gap between them
112	Create the submission csv file
588	Read and Explore
439	Leak Data loading and concat
485	CNN Model for multiclass classification
30	Training on the complete Dataset now
251	filtering out outliers
278	Creating Ordinal Variables
160	Variable Description , Identification , and Correction
148	Importing Packages and Collecting Data
238	Random Forest Regressor
399	Build datasets objects
474	process test images
174	Keras Tokenizer API
183	Paths to data and metadata
487	Define dataset and model
312	Standard imports for data science work
520	Mix region and education
9	And now we embed each chunk individually
554	Load train and test dataframes and add length columns for Description and Name
571	Loading libraries and data
67	Does shipping depends of price
84	Parameters and LB score visualization
498	Hugging Face pretrained Bert model names
492	Hugging Face pretrained Bert model names
119	Load data files
481	Using all features for model training
359	Prepare for training
232	and target vector that correspond to the test data size
46	Split the data into train and validation parts
526	Moving average is so simple
98	Make a prediction on the test images
209	Text Processing of text data easily
172	Document Vectors with HashingVectorizer
532	It seems Goblins are a little similar to Ghouls
463	Loading and Visualization of Data
151	Weekday and Meter Reading
218	Comparison between Brazil and Italy
315	Drop Correlated Variables
443	Leak Data loading and concat
325	First , we need to put our data into a long format dataframe
21	And finally lets look at the class distribution
276	Families without Heads of Household
555	What Does a Normal Image Look Like
297	Create Training and Validation Set
466	Count game trainsition
313	Now we want to combine the data without creating any duplicate rows
66	What are their top categories
572	You can choose many palettes , which makes the graphs visually nice
387	Padding process and resizing with OpenCV
189	Bounded region of parameter space
323	Learning Rate Domain
301	We can make the same plot by day of the week
63	Convert each labeled object to Run Line Encoding
334	Plots of Hyperparameters vs Score
144	CatBoost is RAM expensive so I prefer to utilize GPU
111	Process the Predictions
513	Convert DCM to PNG
113	What is a python generator
164	Loading the data
384	Load and freeze DenseNet
287	Comparing Model Performance
207	Loading and preprocessing data
96	MAKE A TEST SET PREDICTION
215	Prediction on test set
465	Making Feature Matrices
517	Make new features using continuous feature
22	The data is not balanced
365	SHAP Interaction Values
392	Plotting some random images to check how cleaning works
75	Comparison of the all feature importance diagrams
506	Random Forest model
528	Predict null data based on statistical method
162	Encoding Cordinal Direction
190	Lets Read In Data Files
332	Align Train and Test Sets
109	Plot the Loss Curves
564	SAVE DATASET TO DISK
16	Seed everything for reproducibility
149	Variable Description and Identification
152	Time of Day and Meter Reading
393	Load and process data
546	Use machine learning model
244	Interactive booking , click , and percentage of booking trends with Bokeh
41	Prepare Traning Data
550	Plot the obtained tour
587	Applying it on text
307	Example of Sampling from the Domain
25	Take a look at predictions
284	Next we can rename the columns to make it easier to keep track
510	Set Model for prediction
414	Training the model
14	The Shape of the Data
376	Add the actors to the renderer , set the background and size
557	Opacities That Are Not Related to Pneumonia
79	Parameters and LB score visualization
389	Group and Reduce
78	FS with SelectFromModel and LinearSVR
264	Remove Extreme Prices
177	Function for find out Numerical and categeical Variables
561	Solve the task
457	Sampling the train data since too much data
321	Aggregate Credit previous loans
228	Seperating the data into different data frame based on the labels
304	Visualize Validation Predicted Target
521	Remove feature with only one value
212	Let us load one image and its masks
442	Fast data loading
540	Age distribution of male and female patients
306	Now we can evaluate the baseline model on the testing data
167	Loading the data
473	process training images
320	Aggregate Cash previous loans
77	FS with the Pearson correlation
188	Load data and fit some models
344	Monthly Credit Data
390	Adding mode as feature
231	Most important or common words in neutral data
568	Add train leak
17	Defining DataBunch for FastAI
35	Count occurance of words
355	Loading the data
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
259	Save objects for next step
339	Function to Handle Categorical Variables
224	Select the models to run setting bool variables below
85	Prepare Training Data
484	Create dataset for training and Validation
514	Predictions class distribution
419	Import the modules
432	Plotting errors for one sample
416	Infer using trained model
448	Model Evaluation and Validation
204	No Of Storeys Vs Log Error
363	Create DFs imitating public and private test subsets
507	Data transformation and helper functions
366	Get important features according to SHAP
559	Composition of functions
383	Create real file paths dataframe
456	Next , we will make prediction with our LR Model
302	Test Time Features
509	Best parameters are searched by GridSearchCV on my Laptop
459	targets in train.csv
195	Visuallizing Interest Level Vs Bathroom
89	Using my notebook
426	Predict with mixed language models
191	When Do People Generally Order
182	analyzing the numerical features disturbion in previous application dataset
548	For neutral samples , use original texts as they are
404	Load and preprocess data
7	Text preprosesing source
117	FS with SelectFromModel and LinearSVR
169	Loading the data
153	Primary Use and Meter Reading
196	Visualizing Interest Level Vs Bedrooms
11	Maybe if we used the log plot things would be better
241	Bookings per day of week
364	Distribution of months in train and test
227	Full data Analysis
32	Unique value counts
199	Create final submission DF
273	Combinations of TTA
13	Getting to Know the Data
318	Aggregate previous loans at Home Credit
229	most important or common positive words
222	USA since first case
361	Set data loading parameters
0	Seems like a very wide range of values , relatively spaking
582	Let us split the variables one more time
567	The method for training is borrowed from
351	Check the typical length of a comment
250	Join all dataframes
270	Start by pivoting the DataFrame to explore the label distribution over slices
591	Evaluate the Model
483	Make a Baseline model
420	Other columns are the digital value of pixels of kannada mnist
549	Write a problem file
200	No Of Storey Over The Years
543	Explore ip counts
430	Split Trian and Valid
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
116	FS with the Pearson correlation
201	Bedroom Count Vs Log Error
294	Empirical Cumulative Distribution Function Plot
163	Seting X and Y
464	Making Vocabulary and Text Conversion
583	That is the size of one test example that we ought to predict
395	Build datasets objects
240	Predict on test set
469	Number of Patients and Images in Training Images Folder
141	Confusion Matrix for Test Data Predictions
176	Importing The Dataset
106	Thanks for the example of ensemling different models from
208	Preprocessing of features
346	Prediction for one image
99	Create a submission file
593	We can safely store the two types into separate dataframes
533	Logistic Regression seems to be a good classification algorithm for this dataset
386	Save model and weights
95	Create a Classification Report
310	Random Search on the Full Dataset
120	Set up the folds for cross validation
225	Calculating the day when the number of infected individuals is max
114	How to make a generator run infinitely
205	Gaussian Noise on Target
470	Number of Patients and Images in Test Images Folder
402	Load and preprocess data
143	Data load and process functions
246	a quick check if demand distribution changes week to week
539	Predict all province greater than
375	and background color definition
249	Transpose the dataframes
435	All train tasks predictions
446	At first , I made Europe future
28	Show and save column comparision matrix and save row sets
31	Data loading and checking
573	The competition metric relies only on the order of recods ignoring IDs
277	Redundant Household Variables
53	I updated importation for a faster version
412	Reducing Image Size
370	inspect datagen output
59	Importation of a entire day data
19	Predicting for test data
578	NOTE Even tough it is automatic , we can incorporate some manual features
248	Read the csv files on the Johns Hopkins CSSE database on github
372	Process test data in parallel
501	Check saved checkpoints
100	Create Binary Targets
73	Import Required Libraries
40	Using embedding in NN we can change dimensionality of categorical features
255	Check if valid data looks all right
192	At What Day Of The Week People Order
400	Load model into the TPU
479	Create dataset with look back
2	Impute any values will significantly affect the RMSE score for test set
184	Group signals metadata accroding to target
333	Distribution of Scores
42	See sample image
165	Librairies and data
97	Set up the generator
86	Divide features into groups
159	Prediction and Submission
566	The mean of the two is used as the final embedding matrix
476	we add some squared features for some model flexability
72	Graph Representation of RNA structure
198	Main Config Variables
94	What is the AUC Score
23	Apply Underbalancing Techinique
441	Find Best Weight
480	Make prediction and apply invert scaling
406	Save model and best hyperparams
324	Grid Search Implementation
62	Deriving individual masks for each object
281	Redundant Individual Variables
256	missing value statistics
15	Importing all Libraries
495	Run on validation dataset
12	Look at the data types and some basic info about the different columns
462	Get Model into TPU
54	How many different values does our categorial variables take
574	Lib and Load data
115	Thanks to Automatic FE The main code for basic FE
580	Label encoding Making it machine readable
121	Genetic program model , main code loop
545	Preparing the data
154	Meter Readings over time
69	What words do people use
538	Predict all country greater than
585	What should good EDA be capable of
83	Thanks for the example of ensemling different models from
421	Drop the blurry image
170	Create Document Vectors
437	Leak Data loading and concat
418	Relevant attributes of identified objects are stored
71	Is there a correlation between description length and price
536	Predict by Specify Province
237	Imputing missing values
341	Aggregated Stats of Bureau Balance by Client
145	Word map for most frequent Tags
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
319	Aggregate Installments Data
260	Import necessary libraries
502	An example usage
544	Conversions by Device
4	No surprises , since this is all presumably artificial data
132	Lets validate the test files
552	At the scale of stores
308	Learning Rate Distribution
283	Feature Engineering through Aggregations
311	Bayesian Optimization on the Full Dataset
385	Creating and Training the Model
317	Merge with the main dataframe
371	This images from validation data seem to be really strange labeled ...
330	Visualize Distribution of Correlated Variables
396	Load model into the TPU
5	Now there appears to be one feature that is not gaussian
468	View Single Image
499	Choose the model to use
92	Balance the target distribution
589	Replace infs and imputing missing values by mean
58	Download rate by hour
263	Predict test set and make submission
45	Create Testing Generator
518	Ratio feature can have infinite values
394	Load text data into memory
494	Choose the model to use
235	Create the embedding layer
138	Confusion Matrix for Test Data Predictions
338	Correlations of Aggregated Values with Target
388	Pad and resize all the images
178	Types Of Features
467	Visualize by heatmap
342	Calculate Information for Testing Data
350	Read the data
136	Using DecisionTree Classifier
166	MERGE , MISSING VALUE , FILL NA
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
70	Can the length of the description give us some informations
367	Exponential Growth Curves
440	Fast data loading
491	Compare timing for GridMask
82	Its also builds on kernel functions but is appropriate for unsupervised learning
272	Demonstration how it works
194	How many orders users generally made
535	Add active column
110	Make a Prediction
516	Check null data
452	Then transform to a datetime object supposing that it is an ordinal datetime
168	MERGE , MISSING VALUE , FILL NA
142	Converting the Input images to plot using plt
337	Putting it all Together
161	Encoding Street Names
247	Read the csv files from kaggle
137	Confusion Matrix for Train Data Predictions
242	Bookings by year
309	Applied to Full Dataset
537	Predict by Specify Country
496	Get metrics for validation dataset
562	Ensure determinism in the results
300	Explore Time Variables
586	Reading in the data , as usual
335	First we need to format the data and extract the labels
193	When Do People Generally Reorder
155	Meter Readings over time And Primary Use
213	Now we can read the masks for the specific image
290	Lets first check the Train Target Distribution
451	OUTPUT OF AUGMENTATED IMAGES
203	Room Count Vs Log Error
328	DFS with Default Primitives
488	Prediction for test
76	Thanks to Automatic FE The main code for basic FE
266	Price Variance Within Identified Items
103	Set Up the Generators
81	Implementing the SIR model
570	Function which creates final video from list of images
556	What are Lung Opacities
27	Loading data etc
490	Compare timing for MixUp
274	Read in Data and Look at Summary Information
382	First downsize all the images
252	using outliers column as labels instead of target column
534	You only have two areas to work on
569	Add leak to test
398	Load text data into memory
157	Imputing Missing variable
3	Detect and Correct Outliers
202	Bathroom Count Vs Log Error
592	Load CSV files
289	Visualize Tree with No Maximum Depth
401	Inference on Test Set
56	Does bots download the app
48	Counting the metric score
409	Create new labels
134	Test on the data that is not seen by the network during training
422	Display the dropped images
129	How many different cars in train dataset
316	Combined Aggregation Function
425	Predict with pure text models
519	combination using three features
91	Create a Dataframe containing all images
122	Get the dupplicate clicks with different target values
104	Define X and y
130	Define some constants for data location
560	The evaluation method
362	Perform check on randomly chosen mask and prediction
438	Fast data loading
93	Set Up the Generators
288	Recursive Feature Elimination with Random Forest
133	Idea is to use clustering on images of one type to group data
269	Show Original Image
8	Model Validation on train data set
107	Load the pre processed data
236	Build the Model
431	This plot shows summarized information about feature impact against shap output
299	Use More Features
286	The data has no missing values and is scaled between zero and one
34	FVC Progression by SmokingStatus
358	extract different column types
39	Using LabelEncoding we just change string values to numbers
175	Creating the Model
171	Document Vectors with TfidfVectorizer
322	Hyperparameter Tuning Implementation
275	Addressing Wrong Labels
410	Pad and resize all the images
353	Predict validation and test set masks
125	Some stats using jpg exif
391	Refit and Submit
57	Attributed time analysis
547	This notebook will deal with positive , negative and neutral samples independently
87	Code from notebook
253	Check Unique Label
280	In most cases , the values are very similar
486	Create Inference Dataset
211	So a unique operator will give us the unique filenames that contain ships
349	Income distribution and target value
460	These labels are not in train
245	expanding the aggregate
