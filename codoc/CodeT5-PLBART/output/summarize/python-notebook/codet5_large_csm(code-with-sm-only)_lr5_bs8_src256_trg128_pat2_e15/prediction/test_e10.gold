586	Reading in the data , as usual
280	In most cases , the values are very similar
173	Document Vectors with hashing trick
1	Imputations and Data Transformation
342	Calculate Information for Testing Data
279	Per Capita Features
334	Plots of Hyperparameters vs Score
400	Load model into the TPU
154	Meter Readings over time
305	Evaluate Best Model from Random Search
120	Set up the folds for cross validation
128	Manager function to call the create features functions in multiple processes
344	Monthly Credit Data
227	Full data Analysis
399	Build datasets objects
72	Graph Representation of RNA structure
470	Number of Patients and Images in Test Images Folder
558	If you like the content of this notebook , please consider upvoting it
139	Using RandomForest Classifier
538	Predict all country greater than
49	Saving the model
267	Affected Surface Object
517	Make new features using continuous feature
182	analyzing the numerical features disturbion in previous application dataset
474	process test images
453	Most of the dates overlap
65	Prices of the first level of categories
559	Composition of functions
63	Convert each labeled object to Run Line Encoding
255	Check if valid data looks all right
419	Import the modules
283	Feature Engineering through Aggregations
488	Prediction for test
504	Define the number of repetitions for each class
466	Count game trainsition
445	make hour column from transactionDT
478	Convert an array of values into a dataset matrix
428	This is a simple modify from
23	Apply Underbalancing Techinique
361	Set data loading parameters
12	Look at the data types and some basic info about the different columns
420	Other columns are the digital value of pixels of kannada mnist
174	Keras Tokenizer API
231	Most important or common words in neutral data
29	Preparing the training data
196	Visualizing Interest Level Vs Bedrooms
102	Train Test Split
464	Making Vocabulary and Text Conversion
499	Choose the model to use
312	Standard imports for data science work
189	Bounded region of parameter space
314	Identify Correlated Variables
415	Load Test dataframe
199	Create final submission DF
506	Random Forest model
175	Creating the Model
179	Analysis based Averages values
223	Getting population for each country
416	Infer using trained model
109	Plot the Loss Curves
66	What are their top categories
297	Create Training and Validation Set
218	Comparison between Brazil and Italy
462	Get Model into TPU
172	Document Vectors with HashingVectorizer
543	Explore ip counts
300	Explore Time Variables
91	Create a Dataframe containing all images
167	Loading the data
435	All train tasks predictions
536	Predict by Specify Province
362	Perform check on randomly chosen mask and prediction
411	Create test generator
582	Let us split the variables one more time
289	Visualize Tree with No Maximum Depth
392	Plotting some random images to check how cleaning works
107	Load the pre processed data
561	Solve the task
125	Some stats using jpg exif
292	Submitting our Predictions
254	Non physical data augmentation
527	Find Null data
452	Then transform to a datetime object supposing that it is an ordinal datetime
370	inspect datagen output
313	Now we want to combine the data without creating any duplicate rows
311	Bayesian Optimization on the Full Dataset
303	Try with All Time Variables
190	Lets Read In Data Files
476	we add some squared features for some model flexability
455	Train Our Linear Regression Model
248	Read the csv files on the Johns Hopkins CSSE database on github
265	Use Ad Image to Identify Item Category
145	Word map for most frequent Tags
401	Inference on Test Set
448	Model Evaluation and Validation
557	Opacities That Are Not Related to Pneumonia
200	No Of Storey Over The Years
171	Document Vectors with TfidfVectorizer
440	Fast data loading
38	Predict submission dates
195	Visuallizing Interest Level Vs Bathroom
298	Train with Simple Features
511	Test data preparation
69	What words do people use
244	Interactive booking , click , and percentage of booking trends with Bokeh
210	Let us read the masks
135	The number of samples in each cluster is the following
51	Make a simple restart of runtime at this point
389	Group and Reduce
427	Ensemble with my historical best
17	Defining DataBunch for FastAI
76	Thanks to Automatic FE The main code for basic FE
395	Build datasets objects
295	Rides on Map of NYC
164	Loading the data
185	Apply reduction on some samples and visualize the results
28	Show and save column comparision matrix and save row sets
261	High cardinality features
316	Combined Aggregation Function
142	Converting the Input images to plot using plt
100	Create Binary Targets
99	Create a submission file
480	Make prediction and apply invert scaling
385	Creating and Training the Model
169	Loading the data
358	extract different column types
81	Implementing the SIR model
92	Balance the target distribution
243	Bookings by month
547	This notebook will deal with positive , negative and neutral samples independently
75	Comparison of the all feature importance diagrams
247	Read the csv files from kaggle
211	So a unique operator will give us the unique filenames that contain ships
121	Genetic program model , main code loop
458	targets in labels.csv
143	Data load and process functions
412	Reducing Image Size
209	Text Processing of text data easily
59	Importation of a entire day data
347	Train and validate
496	Get metrics for validation dataset
34	FVC Progression by SmokingStatus
7	Text preprosesing source
46	Split the data into train and validation parts
80	Ensembling the solutions and submission
187	Interpreting ROC Plot
147	Fitting Logistic Regression with OneVsRest Classifier
406	Save model and best hyperparams
73	Import Required Libraries
591	Evaluate the Model
430	Split Trian and Valid
507	Data transformation and helper functions
371	This images from validation data seem to be really strange labeled ...
181	Merging the bureau dataset along with application train dataset to do more analysis
219	China scenario since first entry
450	Importing Library Files
44	Prepare Testing Data
262	Ordinal features mapping
304	Visualize Validation Predicted Target
284	Next we can rename the columns to make it easier to keep track
495	Run on validation dataset
2	Impute any values will significantly affect the RMSE score for test set
118	FS with SelectFromModel and RandomForestRegressor
246	a quick check if demand distribution changes week to week
526	Moving average is so simple
584	Save some memory
341	Aggregated Stats of Bureau Balance by Client
500	Get variables to apply weight decay in AdamW optimizer
274	Read in Data and Look at Summary Information
273	Combinations of TTA
97	Set up the generator
126	Its also builds on kernel functions but is appropriate for unsupervised learning
87	Code from notebook
161	Encoding Street Names
32	Unique value counts
236	Build the Model
421	Drop the blurry image
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
456	Next , we will make prediction with our LR Model
268	All Zero Features
352	Define helper functions
493	Make TF record file for test dataset
9	And now we embed each chunk individually
386	Save model and weights
296	The test distribution seems to be similar to the training distribution
203	Room Count Vs Log Error
402	Load and preprocess data
58	Download rate by hour
240	Predict on test set
64	So , some categories are expensive , but most are cheap
434	evaluation solved tasks
16	Seed everything for reproducibility
208	Preprocessing of features
315	Drop Correlated Variables
529	Onehot encoding for categorical data
132	Lets validate the test files
509	Best parameters are searched by GridSearchCV on my Laptop
576	We can see above the counts of higher damageDealt smoothly decrease
165	Librairies and data
134	Test on the data that is not seen by the network during training
482	These have their kitchen area larger than the total area of the house
258	y hist with defferent timestamps are similar
366	Get important features according to SHAP
360	Initialize train and test DataFrames to access IDs and depth information
307	Example of Sampling from the Domain
98	Make a prediction on the test images
578	NOTE Even tough it is automatic , we can incorporate some manual features
27	Loading data etc
565	LOAD DATASET FROM DISK
318	Aggregate previous loans at Home Credit
444	what already is known
438	Fast data loading
242	Bookings by year
508	Show influence of economical factors on housing prices
229	most important or common positive words
259	Save objects for next step
310	Random Search on the Full Dataset
19	Predicting for test data
583	That is the size of one test example that we ought to predict
60	We can now print the results
26	Ability to Detect Face
592	Load CSV files
202	Bathroom Count Vs Log Error
523	Load and preprocess data
48	Counting the metric score
449	They are very similar to each other
286	The data has no missing values and is scaled between zero and one
141	Confusion Matrix for Test Data Predictions
36	All contraction are known
454	Rolling monthly and yearly store means
31	Data loading and checking
184	Group signals metadata accroding to target
338	Correlations of Aggregated Values with Target
278	Creating Ordinal Variables
216	Replacing Mainland china with just China
33	FVC Progression by Sex
163	Seting X and Y
224	Select the models to run setting bool variables below
573	The competition metric relies only on the order of recods ignoring IDs
532	It seems Goblins are a little similar to Ghouls
544	Conversions by Device
287	Comparing Model Performance
539	Predict all province greater than
359	Prepare for training
567	The method for training is borrowed from
57	Attributed time analysis
146	Featurization of Training Data
15	Importing all Libraries
534	You only have two areas to work on
542	Here is a base model without parameter tuning .
343	Monthly Cash Data
554	Load train and test dataframes and add length columns for Description and Name
354	Train the LGBM model
555	What Does a Normal Image Look Like
43	See how our generator work
552	At the scale of stores
398	Load text data into memory
144	CatBoost is RAM expensive so I prefer to utilize GPU
112	Create the submission csv file
405	Unhide below to see all trials results
228	Seperating the data into different data frame based on the labels
409	Create new labels
79	Parameters and LB score visualization
96	MAKE A TEST SET PREDICTION
414	Training the model
375	and background color definition
153	Primary Use and Meter Reading
575	Explore distribution of single variable
122	Get the dupplicate clicks with different target values
472	Get Tabular Data
459	targets in train.csv
560	The evaluation method
241	Bookings per day of week
264	Remove Extreme Prices
101	Balance the target distribution
442	Fast data loading
40	Using embedding in NN we can change dimensionality of categorical features
572	You can choose many palettes , which makes the graphs visually nice
84	Parameters and LB score visualization
463	Loading and Visualization of Data
320	Aggregate Cash previous loans
105	Its also builds on kernel functions but is appropriate for unsupervised learning
340	Putting the Functions Together
322	Hyperparameter Tuning Implementation
425	Predict with pure text models
520	Mix region and education
130	Define some constants for data location
116	FS with the Pearson correlation
39	Using LabelEncoding we just change string values to numbers
350	Read the data
553	Disable fastai randomness
233	Import Packages and Functions
137	Confusion Matrix for Train Data Predictions
461	TPU Strategy and other configs
56	Does bots download the app
41	Prepare Traning Data
524	Check null data
24	The data is not balanced
337	Putting it all Together
487	Define dataset and model
204	No Of Storeys Vs Log Error
290	Lets first check the Train Target Distribution
467	Visualize by heatmap
512	Data preparation for test
473	process training images
447	There is a gap between them
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
379	TPU Strategy and other configs
422	Display the dropped images
260	Import necessary libraries
50	You can state below link to your copy of this MMDetection repo
22	The data is not balanced
86	Divide features into groups
364	Distribution of months in train and test
330	Visualize Distribution of Correlated Variables
326	Distribution of Search Values
250	Join all dataframes
252	using outliers column as labels instead of target column
194	How many orders users generally made
510	Set Model for prediction
491	Compare timing for GridMask
481	Using all features for model training
159	Prediction and Submission
253	Check Unique Label
382	First downsize all the images
158	Encoding Categorical Variable
497	Run on test dataset
140	Confusion Matrix for Train Data Predictions
432	Plotting errors for one sample
377	OSIC training data Example
367	Exponential Growth Curves
519	combination using three features
580	Label encoding Making it machine readable
437	Leak Data loading and concat
306	Now we can evaluate the baseline model on the testing data
115	Thanks to Automatic FE The main code for basic FE
332	Align Train and Test Sets
535	Add active column
346	Prediction for one image
381	Create fake filepaths dataframe
45	Create Testing Generator
226	Lets gets started
294	Empirical Cumulative Distribution Function Plot
393	Load and process data
68	Can we get some informations out of the item description
327	Testing Results on Full Data
431	This plot shows summarized information about feature impact against shap output
451	OUTPUT OF AUGMENTATED IMAGES
124	Apply skin segmentation on all training data and visualize the result
288	Recursive Feature Elimination with Random Forest
484	Create dataset for training and Validation
549	Write a problem file
119	Load data files
545	Preparing the data
426	Predict with mixed language models
514	Predictions class distribution
133	Idea is to use clustering on images of one type to group data
30	Training on the complete Dataset now
55	Zoom on this IP
106	Thanks for the example of ensemling different models from
70	Can the length of the description give us some informations
407	Load Model into TPU
281	Redundant Individual Variables
183	Paths to data and metadata
396	Load model into the TPU
384	Load and freeze DenseNet
276	Families without Heads of Household
439	Leak Data loading and concat
483	Make a Baseline model
61	Dealing with color
566	The mean of the two is used as the final embedding matrix
136	Using DecisionTree Classifier
220	Spain since first recorded case
490	Compare timing for MixUp
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
394	Load text data into memory
574	Lib and Load data
67	Does shipping depends of price
74	Apply Logistic Regression
465	Making Feature Matrices
333	Distribution of Scores
388	Pad and resize all the images
62	Deriving individual masks for each object
14	The Shape of the Data
82	Its also builds on kernel functions but is appropriate for unsupervised learning
277	Redundant Household Variables
528	Predict null data based on statistical method
88	My upgrade of parameters
42	See sample image
156	Square feet size is positively Skewed
471	Create Image Augmentation Generator
363	Create DFs imitating public and private test subsets
291	Filling missing and infinite data by zeroes
397	Create fast tokenizer
391	Refit and Submit
556	What are Lung Opacities
571	Loading libraries and data
5	Now there appears to be one feature that is not gaussian
275	Addressing Wrong Labels
355	Loading the data
518	Ratio feature can have infinite values
150	Meter Reading and Meter Type
263	Predict test set and make submission
374	Outlier Analysis and Feature Scaling
180	Checking the Correlation Between The Features for Application Train Dataset
230	Most important or common negative words
206	Composition of Augmentations
404	Load and preprocess data
548	For neutral samples , use original texts as they are
234	Load and Explore Data
257	y的异常值 drop samples which have exception value in y
302	Test Time Features
212	Let us load one image and its masks
577	Getting Prime Cities
525	Check the dataset
123	Basic skin detection
516	Check null data
533	Logistic Regression seems to be a good classification algorithm for this dataset
293	Data Exploration and Data Cleaning
188	Load data and fit some models
376	Add the actors to the renderer , set the background and size
494	Choose the model to use
113	What is a python generator
225	Calculating the day when the number of infected individuals is max
475	process submission images
21	And finally lets look at the class distribution
8	Model Validation on train data set
221	Iran since first case
486	Create Inference Dataset
581	NaN imputation will be skipped in this tutorial
498	Hugging Face pretrained Bert model names
323	Learning Rate Domain
328	DFS with Default Primitives
301	We can make the same plot by day of the week
588	Read and Explore
319	Aggregate Installments Data
108	Initialize the generators
521	Remove feature with only one value
433	train solved tasks
505	Check oversampled dataset
129	How many different cars in train dataset
238	Random Forest Regressor
417	Comparing various kappa scoring
235	Create the embedding layer
78	FS with SelectFromModel and LinearSVR
155	Meter Readings over time And Primary Use
522	Feature selection using shap
114	How to make a generator run infinitely
383	Create real file paths dataframe
441	Find Best Weight
540	Age distribution of male and female patients
368	Gaussian Approximation of Active Cases
564	SAVE DATASET TO DISK
52	Hist Graph of scores
373	Load Packages and Data
485	CNN Model for multiclass classification
0	Seems like a very wide range of values , relatively spaking
197	Correlation Between Price and Other Features
569	Add leak to test
436	Fast data loading
348	Granted applications per number of children
309	Applied to Full Dataset
317	Merge with the main dataframe
201	Bedroom Count Vs Log Error
54	How many different values does our categorial variables take
357	load mapping dictionaries
152	Time of Day and Meter Reading
217	Now a look at Italy
168	MERGE , MISSING VALUE , FILL NA
3	Detect and Correct Outliers
321	Aggregate Credit previous loans
501	Check saved checkpoints
477	Split into train and test sets
245	expanding the aggregate
110	Make a Prediction
443	Leak Data loading and concat
232	and target vector that correspond to the test data size
94	What is the AUC Score
103	Set Up the Generators
193	When Do People Generally Reorder
329	DFS with Selected Aggregation Primitives
563	LOAD PROCESSED TRAINING DATA FROM DISK
537	Predict by Specify Country
77	FS with the Pearson correlation
515	Check the dataset
160	Variable Description , Identification , and Correction
237	Imputing missing values
349	Income distribution and target value
282	For example , we can divide the years of schooling by the age
408	Will need those folders later for storing our jpegs
468	View Single Image
351	Check the typical length of a comment
104	Define X and y
192	At What Day Of The Week People Order
4	No surprises , since this is all presumably artificial data
479	Create dataset with look back
331	Remove Low Importance Features
35	Count occurance of words
492	Hugging Face pretrained Bert model names
157	Imputing Missing variable
356	and batch aggregations examples for the rest of the tables ..
339	Function to Handle Categorical Variables
18	Unfreeze all layers and find best learning rate
530	Target , prediction process
269	Show Original Image
131	Code from here and below is commented out because the kernel dies
270	Start by pivoting the DataFrame to explore the label distribution over slices
568	Add train leak
324	Grid Search Implementation
413	Save results as CSV files
429	Pick some frames to display
13	Getting to Know the Data
489	Compare timing for CutMix
11	Maybe if we used the log plot things would be better
251	filtering out outliers
249	Transpose the dataframes
446	At first , I made Europe future
335	First we need to format the data and extract the labels
222	USA since first case
266	Price Variance Within Identified Items
378	Predict Test Set and Submit Result
353	Predict validation and test set masks
590	RF for feature selection
423	Creating submission file
387	Padding process and resizing with OpenCV
579	Feature primitives Basically which functions are we going to use to create features
6	Read data set
162	Encoding Cordinal Direction
47	Create and set up the model
503	Get labels and their countings
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
369	load mapping dictionaries
215	Prediction on test set
390	Adding mode as feature
198	Main Config Variables
53	I updated importation for a faster version
25	Take a look at predictions
469	Number of Patients and Images in Training Images Folder
191	When Do People Generally Order
285	Machine Learning Modeling
457	Sampling the train data since too much data
410	Pad and resize all the images
308	Learning Rate Distribution
178	Types Of Features
585	What should good EDA be capable of
418	Relevant attributes of identified objects are stored
213	Now we can read the masks for the specific image
365	SHAP Interaction Values
127	Thanks for the example of ensemling different models from
93	Set Up the Generators
336	Properly Representing Variable Types
177	Function for find out Numerical and categeical Variables
214	For the same window we superimpose the masks above the image
117	FS with SelectFromModel and LinearSVR
460	These labels are not in train
502	An example usage
20	Data is still small enough for memory so read to memory using pandas
272	Demonstration how it works
205	Gaussian Noise on Target
550	Plot the obtained tour
148	Importing Packages and Collecting Data
589	Replace infs and imputing missing values by mean
372	Process test data in parallel
166	MERGE , MISSING VALUE , FILL NA
170	Create Document Vectors
587	Applying it on text
546	Use machine learning model
138	Confusion Matrix for Test Data Predictions
380	Load Model into TPU
325	First , we need to put our data into a long format dataframe
570	Function which creates final video from list of images
151	Weekday and Meter Reading
551	Import libraries and data , reduce memory usage
95	Create a Classification Report
345	Split into training and validation groups
90	How many images are in each folder
149	Variable Description and Identification
562	Ensure determinism in the results
207	Loading and preprocessing data
593	We can safely store the two types into separate dataframes
403	Evaluate training history
71	Is there a correlation between description length and price
513	Convert DCM to PNG
299	Use More Features
239	Feature Agglomeration Results
424	Build the original and translated test data
85	Prepare Training Data
531	Null data check
256	missing value statistics
111	Process the Predictions
89	Using my notebook
541	Difference varialbes were created to describe the difference beween maximum and minimum value
176	Importing The Dataset
83	Thanks for the example of ensemling different models from
