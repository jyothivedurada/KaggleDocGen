499	Choose the model to use
539	Predict all province greater than
339	Function to Handle Categorical Variables
162	Encoding Cordinal Direction
228	Seperating the data into different data frame based on the labels
568	Add train leak
337	Putting it all Together
23	Apply Underbalancing Techinique
295	Rides on Map of NYC
266	Price Variance Within Identified Items
103	Set Up the Generators
29	Preparing the training data
222	USA since first case
99	Create a submission file
324	Grid Search Implementation
515	Check the dataset
498	Hugging Face pretrained Bert model names
306	Now we can evaluate the baseline model on the testing data
11	Maybe if we used the log plot things would be better
473	process training images
159	Prediction and Submission
535	Add active column
79	Parameters and LB score visualization
444	what already is known
486	Create Inference Dataset
562	Ensure determinism in the results
487	Define dataset and model
13	Getting to Know the Data
334	Plots of Hyperparameters vs Score
368	Gaussian Approximation of Active Cases
251	filtering out outliers
469	Number of Patients and Images in Training Images Folder
580	Label encoding Making it machine readable
250	Join all dataframes
411	Create test generator
359	Prepare for training
476	we add some squared features for some model flexability
57	Attributed time analysis
137	Confusion Matrix for Train Data Predictions
408	Will need those folders later for storing our jpegs
305	Evaluate Best Model from Random Search
65	Prices of the first level of categories
149	Variable Description and Identification
109	Plot the Loss Curves
320	Aggregate Cash previous loans
46	Split the data into train and validation parts
479	Create dataset with look back
385	Creating and Training the Model
558	If you like the content of this notebook , please consider upvoting it
2	Impute any values will significantly affect the RMSE score for test set
106	Thanks for the example of ensemling different models from
263	Predict test set and make submission
307	Example of Sampling from the Domain
25	Take a look at predictions
575	Explore distribution of single variable
227	Full data Analysis
279	Per Capita Features
538	Predict all country greater than
51	Make a simple restart of runtime at this point
121	Genetic program model , main code loop
556	What are Lung Opacities
247	Read the csv files from kaggle
85	Prepare Training Data
17	Defining DataBunch for FastAI
188	Load data and fit some models
513	Convert DCM to PNG
425	Predict with pure text models
549	Write a problem file
163	Seting X and Y
256	missing value statistics
531	Null data check
585	What should good EDA be capable of
114	How to make a generator run infinitely
325	First , we need to put our data into a long format dataframe
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
511	Test data preparation
282	For example , we can divide the years of schooling by the age
221	Iran since first case
589	Replace infs and imputing missing values by mean
58	Download rate by hour
389	Group and Reduce
391	Refit and Submit
168	MERGE , MISSING VALUE , FILL NA
514	Predictions class distribution
376	Add the actors to the renderer , set the background and size
205	Gaussian Noise on Target
73	Import Required Libraries
301	We can make the same plot by day of the week
278	Creating Ordinal Variables
483	Make a Baseline model
152	Time of Day and Meter Reading
399	Build datasets objects
155	Meter Readings over time And Primary Use
71	Is there a correlation between description length and price
423	Creating submission file
140	Confusion Matrix for Train Data Predictions
372	Process test data in parallel
20	Data is still small enough for memory so read to memory using pandas
67	Does shipping depends of price
179	Analysis based Averages values
552	At the scale of stores
494	Choose the model to use
574	Lib and Load data
130	Define some constants for data location
510	Set Model for prediction
365	SHAP Interaction Values
47	Create and set up the model
434	evaluation solved tasks
202	Bathroom Count Vs Log Error
480	Make prediction and apply invert scaling
126	Its also builds on kernel functions but is appropriate for unsupervised learning
236	Build the Model
374	Outlier Analysis and Feature Scaling
492	Hugging Face pretrained Bert model names
289	Visualize Tree with No Maximum Depth
201	Bedroom Count Vs Log Error
116	FS with the Pearson correlation
299	Use More Features
319	Aggregate Installments Data
338	Correlations of Aggregated Values with Target
56	Does bots download the app
129	How many different cars in train dataset
445	make hour column from transactionDT
400	Load model into the TPU
28	Show and save column comparision matrix and save row sets
214	For the same window we superimpose the masks above the image
554	Load train and test dataframes and add length columns for Description and Name
283	Feature Engineering through Aggregations
410	Pad and resize all the images
529	Onehot encoding for categorical data
181	Merging the bureau dataset along with application train dataset to do more analysis
297	Create Training and Validation Set
200	No Of Storey Over The Years
373	Load Packages and Data
24	The data is not balanced
545	Preparing the data
355	Loading the data
235	Create the embedding layer
516	Check null data
53	I updated importation for a faster version
213	Now we can read the masks for the specific image
192	At What Day Of The Week People Order
268	All Zero Features
401	Inference on Test Set
61	Dealing with color
507	Data transformation and helper functions
210	Let us read the masks
472	Get Tabular Data
403	Evaluate training history
239	Feature Agglomeration Results
394	Load text data into memory
508	Show influence of economical factors on housing prices
430	Split Trian and Valid
141	Confusion Matrix for Test Data Predictions
272	Demonstration how it works
8	Model Validation on train data set
113	What is a python generator
240	Predict on test set
220	Spain since first recorded case
16	Seed everything for reproducibility
124	Apply skin segmentation on all training data and visualize the result
95	Create a Classification Report
3	Detect and Correct Outliers
323	Learning Rate Domain
409	Create new labels
12	Look at the data types and some basic info about the different columns
265	Use Ad Image to Identify Item Category
550	Plot the obtained tour
170	Create Document Vectors
502	An example usage
390	Adding mode as feature
281	Redundant Individual Variables
142	Converting the Input images to plot using plt
467	Visualize by heatmap
33	FVC Progression by Sex
275	Addressing Wrong Labels
420	Other columns are the digital value of pixels of kannada mnist
143	Data load and process functions
164	Loading the data
348	Granted applications per number of children
551	Import libraries and data , reduce memory usage
364	Distribution of months in train and test
326	Distribution of Search Values
485	CNN Model for multiclass classification
182	analyzing the numerical features disturbion in previous application dataset
496	Get metrics for validation dataset
357	load mapping dictionaries
165	Librairies and data
312	Standard imports for data science work
262	Ordinal features mapping
495	Run on validation dataset
258	y hist with defferent timestamps are similar
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
14	The Shape of the Data
553	Disable fastai randomness
541	Difference varialbes were created to describe the difference beween maximum and minimum value
369	load mapping dictionaries
59	Importation of a entire day data
454	Rolling monthly and yearly store means
314	Identify Correlated Variables
178	Types Of Features
474	process test images
590	RF for feature selection
591	Evaluate the Model
579	Feature primitives Basically which functions are we going to use to create features
160	Variable Description , Identification , and Correction
104	Define X and y
404	Load and preprocess data
177	Function for find out Numerical and categeical Variables
555	What Does a Normal Image Look Like
27	Loading data etc
449	They are very similar to each other
471	Create Image Augmentation Generator
315	Drop Correlated Variables
288	Recursive Feature Elimination with Random Forest
280	In most cases , the values are very similar
224	Select the models to run setting bool variables below
475	process submission images
438	Fast data loading
219	China scenario since first entry
111	Process the Predictions
127	Thanks for the example of ensemling different models from
536	Predict by Specify Province
543	Explore ip counts
417	Comparing various kappa scoring
87	Code from notebook
398	Load text data into memory
560	The evaluation method
428	This is a simple modify from
260	Import necessary libraries
244	Interactive booking , click , and percentage of booking trends with Bokeh
185	Apply reduction on some samples and visualize the results
77	FS with the Pearson correlation
232	and target vector that correspond to the test data size
138	Confusion Matrix for Test Data Predictions
34	FVC Progression by SmokingStatus
308	Learning Rate Distribution
49	Saving the model
448	Model Evaluation and Validation
39	Using LabelEncoding we just change string values to numbers
563	LOAD PROCESSED TRAINING DATA FROM DISK
231	Most important or common words in neutral data
457	Sampling the train data since too much data
360	Initialize train and test DataFrames to access IDs and depth information
36	All contraction are known
362	Perform check on randomly chosen mask and prediction
26	Ability to Detect Face
31	Data loading and checking
86	Divide features into groups
62	Deriving individual masks for each object
52	Hist Graph of scores
459	targets in train.csv
91	Create a Dataframe containing all images
465	Making Feature Matrices
528	Predict null data based on statistical method
396	Load model into the TPU
414	Training the model
145	Word map for most frequent Tags
161	Encoding Street Names
248	Read the csv files on the Johns Hopkins CSSE database on github
151	Weekday and Meter Reading
243	Bookings by month
436	Fast data loading
333	Distribution of Scores
72	Graph Representation of RNA structure
309	Applied to Full Dataset
387	Padding process and resizing with OpenCV
35	Count occurance of words
493	Make TF record file for test dataset
331	Remove Low Importance Features
259	Save objects for next step
237	Imputing missing values
570	Function which creates final video from list of images
108	Initialize the generators
354	Train the LGBM model
484	Create dataset for training and Validation
303	Try with All Time Variables
503	Get labels and their countings
384	Load and freeze DenseNet
482	These have their kitchen area larger than the total area of the house
78	FS with SelectFromModel and LinearSVR
557	Opacities That Are Not Related to Pneumonia
433	train solved tasks
286	The data has no missing values and is scaled between zero and one
45	Create Testing Generator
98	Make a prediction on the test images
443	Leak Data loading and concat
284	Next we can rename the columns to make it easier to keep track
18	Unfreeze all layers and find best learning rate
335	First we need to format the data and extract the labels
5	Now there appears to be one feature that is not gaussian
246	a quick check if demand distribution changes week to week
172	Document Vectors with HashingVectorizer
136	Using DecisionTree Classifier
292	Submitting our Predictions
154	Meter Readings over time
412	Reducing Image Size
119	Load data files
509	Best parameters are searched by GridSearchCV on my Laptop
458	targets in labels.csv
112	Create the submission csv file
572	You can choose many palettes , which makes the graphs visually nice
468	View Single Image
340	Putting the Functions Together
415	Load Test dataframe
547	This notebook will deal with positive , negative and neutral samples independently
139	Using RandomForest Classifier
249	Transpose the dataframes
147	Fitting Logistic Regression with OneVsRest Classifier
577	Getting Prime Cities
63	Convert each labeled object to Run Line Encoding
204	No Of Storeys Vs Log Error
382	First downsize all the images
435	All train tasks predictions
455	Train Our Linear Regression Model
588	Read and Explore
270	Start by pivoting the DataFrame to explore the label distribution over slices
578	NOTE Even tough it is automatic , we can incorporate some manual features
184	Group signals metadata accroding to target
197	Correlation Between Price and Other Features
346	Prediction for one image
564	SAVE DATASET TO DISK
440	Fast data loading
397	Create fast tokenizer
422	Display the dropped images
300	Explore Time Variables
102	Train Test Split
470	Number of Patients and Images in Test Images Folder
94	What is the AUC Score
416	Infer using trained model
349	Income distribution and target value
343	Monthly Cash Data
273	Combinations of TTA
317	Merge with the main dataframe
329	DFS with Selected Aggregation Primitives
427	Ensemble with my historical best
566	The mean of the two is used as the final embedding matrix
418	Relevant attributes of identified objects are stored
60	We can now print the results
97	Set up the generator
171	Document Vectors with TfidfVectorizer
269	Show Original Image
350	Read the data
4	No surprises , since this is all presumably artificial data
327	Testing Results on Full Data
125	Some stats using jpg exif
50	You can state below link to your copy of this MMDetection repo
96	MAKE A TEST SET PREDICTION
565	LOAD DATASET FROM DISK
291	Filling missing and infinite data by zeroes
7	Text preprosesing source
313	Now we want to combine the data without creating any duplicate rows
55	Zoom on this IP
6	Read data set
257	y的异常值 drop samples which have exception value in y
135	The number of samples in each cluster is the following
131	Code from here and below is commented out because the kernel dies
175	Creating the Model
497	Run on test dataset
107	Load the pre processed data
241	Bookings per day of week
80	Ensembling the solutions and submission
347	Train and validate
267	Affected Surface Object
463	Loading and Visualization of Data
504	Define the number of repetitions for each class
392	Plotting some random images to check how cleaning works
439	Leak Data loading and concat
584	Save some memory
223	Getting population for each country
352	Define helper functions
426	Predict with mixed language models
158	Encoding Categorical Variable
68	Can we get some informations out of the item description
81	Implementing the SIR model
367	Exponential Growth Curves
194	How many orders users generally made
353	Predict validation and test set masks
406	Save model and best hyperparams
491	Compare timing for GridMask
310	Random Search on the Full Dataset
573	The competition metric relies only on the order of recods ignoring IDs
582	Let us split the variables one more time
90	How many images are in each folder
48	Counting the metric score
105	Its also builds on kernel functions but is appropriate for unsupervised learning
274	Read in Data and Look at Summary Information
527	Find Null data
82	Its also builds on kernel functions but is appropriate for unsupervised learning
207	Loading and preprocessing data
583	That is the size of one test example that we ought to predict
230	Most important or common negative words
322	Hyperparameter Tuning Implementation
581	NaN imputation will be skipped in this tutorial
576	We can see above the counts of higher damageDealt smoothly decrease
15	Importing all Libraries
115	Thanks to Automatic FE The main code for basic FE
189	Bounded region of parameter space
150	Meter Reading and Meter Type
290	Lets first check the Train Target Distribution
336	Properly Representing Variable Types
167	Loading the data
173	Document Vectors with hashing trick
370	inspect datagen output
316	Combined Aggregation Function
38	Predict submission dates
383	Create real file paths dataframe
208	Preprocessing of features
537	Predict by Specify Country
255	Check if valid data looks all right
386	Save model and weights
402	Load and preprocess data
424	Build the original and translated test data
183	Paths to data and metadata
530	Target , prediction process
341	Aggregated Stats of Bureau Balance by Client
196	Visualizing Interest Level Vs Bedrooms
9	And now we embed each chunk individually
358	extract different column types
371	This images from validation data seem to be really strange labeled ...
203	Room Count Vs Log Error
1	Imputations and Data Transformation
519	combination using three features
356	and batch aggregations examples for the rest of the tables ..
285	Machine Learning Modeling
488	Prediction for test
506	Random Forest model
100	Create Binary Targets
70	Can the length of the description give us some informations
93	Set Up the Generators
245	expanding the aggregate
122	Get the dupplicate clicks with different target values
234	Load and Explore Data
375	and background color definition
522	Feature selection using shap
298	Train with Simple Features
477	Split into train and test sets
478	Convert an array of values into a dataset matrix
407	Load Model into TPU
505	Check oversampled dataset
431	This plot shows summarized information about feature impact against shap output
450	Importing Library Files
447	There is a gap between them
176	Importing The Dataset
296	The test distribution seems to be similar to the training distribution
276	Families without Heads of Household
321	Aggregate Credit previous loans
351	Check the typical length of a comment
456	Next , we will make prediction with our LR Model
190	Lets Read In Data Files
75	Comparison of the all feature importance diagrams
525	Check the dataset
64	So , some categories are expensive , but most are cheap
76	Thanks to Automatic FE The main code for basic FE
233	Import Packages and Functions
544	Conversions by Device
153	Primary Use and Meter Reading
117	FS with SelectFromModel and LinearSVR
512	Data preparation for test
74	Apply Logistic Regression
180	Checking the Correlation Between The Features for Application Train Dataset
84	Parameters and LB score visualization
238	Random Forest Regressor
174	Keras Tokenizer API
429	Pick some frames to display
21	And finally lets look at the class distribution
110	Make a Prediction
342	Calculate Information for Testing Data
211	So a unique operator will give us the unique filenames that contain ships
157	Imputing Missing variable
481	Using all features for model training
393	Load and process data
569	Add leak to test
388	Pad and resize all the images
253	Check Unique Label
518	Ratio feature can have infinite values
548	For neutral samples , use original texts as they are
380	Load Model into TPU
361	Set data loading parameters
451	OUTPUT OF AUGMENTATED IMAGES
209	Text Processing of text data easily
571	Loading libraries and data
166	MERGE , MISSING VALUE , FILL NA
22	The data is not balanced
586	Reading in the data , as usual
42	See sample image
229	most important or common positive words
592	Load CSV files
66	What are their top categories
216	Replacing Mainland china with just China
132	Lets validate the test files
193	When Do People Generally Reorder
489	Compare timing for CutMix
419	Import the modules
218	Comparison between Brazil and Italy
521	Remove feature with only one value
526	Moving average is so simple
195	Visuallizing Interest Level Vs Bathroom
460	These labels are not in train
523	Load and preprocess data
294	Empirical Cumulative Distribution Function Plot
191	When Do People Generally Order
118	FS with SelectFromModel and RandomForestRegressor
345	Split into training and validation groups
134	Test on the data that is not seen by the network during training
540	Age distribution of male and female patients
534	You only have two areas to work on
413	Save results as CSV files
226	Lets gets started
254	Non physical data augmentation
83	Thanks for the example of ensemling different models from
328	DFS with Default Primitives
466	Count game trainsition
332	Align Train and Test Sets
421	Drop the blurry image
261	High cardinality features
311	Bayesian Optimization on the Full Dataset
567	The method for training is borrowed from
92	Balance the target distribution
252	using outliers column as labels instead of target column
442	Fast data loading
542	Here is a base model without parameter tuning .
32	Unique value counts
146	Featurization of Training Data
446	At first , I made Europe future
187	Interpreting ROC Plot
44	Prepare Testing Data
19	Predicting for test data
395	Build datasets objects
199	Create final submission DF
432	Plotting errors for one sample
363	Create DFs imitating public and private test subsets
40	Using embedding in NN we can change dimensionality of categorical features
206	Composition of Augmentations
133	Idea is to use clustering on images of one type to group data
198	Main Config Variables
524	Check null data
318	Aggregate previous loans at Home Credit
501	Check saved checkpoints
461	TPU Strategy and other configs
561	Solve the task
593	We can safely store the two types into separate dataframes
304	Visualize Validation Predicted Target
41	Prepare Traning Data
217	Now a look at Italy
215	Prediction on test set
559	Composition of functions
441	Find Best Weight
546	Use machine learning model
54	How many different values does our categorial variables take
520	Mix region and education
532	It seems Goblins are a little similar to Ghouls
123	Basic skin detection
212	Let us load one image and its masks
344	Monthly Credit Data
462	Get Model into TPU
587	Applying it on text
0	Seems like a very wide range of values , relatively spaking
89	Using my notebook
405	Unhide below to see all trials results
437	Leak Data loading and concat
377	OSIC training data Example
169	Loading the data
156	Square feet size is positively Skewed
330	Visualize Distribution of Correlated Variables
88	My upgrade of parameters
128	Manager function to call the create features functions in multiple processes
148	Importing Packages and Collecting Data
366	Get important features according to SHAP
302	Test Time Features
101	Balance the target distribution
242	Bookings by year
381	Create fake filepaths dataframe
69	What words do people use
533	Logistic Regression seems to be a good classification algorithm for this dataset
30	Training on the complete Dataset now
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
453	Most of the dates overlap
264	Remove Extreme Prices
517	Make new features using continuous feature
287	Comparing Model Performance
500	Get variables to apply weight decay in AdamW optimizer
464	Making Vocabulary and Text Conversion
452	Then transform to a datetime object supposing that it is an ordinal datetime
378	Predict Test Set and Submit Result
490	Compare timing for MixUp
225	Calculating the day when the number of infected individuals is max
120	Set up the folds for cross validation
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
379	TPU Strategy and other configs
144	CatBoost is RAM expensive so I prefer to utilize GPU
43	See how our generator work
293	Data Exploration and Data Cleaning
277	Redundant Household Variables
