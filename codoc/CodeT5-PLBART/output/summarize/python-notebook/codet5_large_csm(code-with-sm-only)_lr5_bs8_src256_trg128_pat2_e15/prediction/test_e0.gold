451	OUTPUT OF AUGMENTATED IMAGES
119	Load data files
7	Text preprosesing source
92	Balance the target distribution
35	Count occurance of words
85	Prepare Training Data
100	Create Binary Targets
363	Create DFs imitating public and private test subsets
242	Bookings by year
17	Defining DataBunch for FastAI
31	Data loading and checking
16	Seed everything for reproducibility
354	Train the LGBM model
495	Run on validation dataset
474	process test images
152	Time of Day and Meter Reading
93	Set Up the Generators
187	Interpreting ROC Plot
117	FS with SelectFromModel and LinearSVR
14	The Shape of the Data
515	Check the dataset
498	Hugging Face pretrained Bert model names
255	Check if valid data looks all right
66	What are their top categories
554	Load train and test dataframes and add length columns for Description and Name
477	Split into train and test sets
70	Can the length of the description give us some informations
91	Create a Dataframe containing all images
527	Find Null data
47	Create and set up the model
276	Families without Heads of Household
64	So , some categories are expensive , but most are cheap
309	Applied to Full Dataset
492	Hugging Face pretrained Bert model names
586	Reading in the data , as usual
272	Demonstration how it works
571	Loading libraries and data
204	No Of Storeys Vs Log Error
464	Making Vocabulary and Text Conversion
542	Here is a base model without parameter tuning .
19	Predicting for test data
520	Mix region and education
72	Graph Representation of RNA structure
5	Now there appears to be one feature that is not gaussian
341	Aggregated Stats of Bureau Balance by Client
147	Fitting Logistic Regression with OneVsRest Classifier
484	Create dataset for training and Validation
386	Save model and weights
171	Document Vectors with TfidfVectorizer
55	Zoom on this IP
78	FS with SelectFromModel and LinearSVR
508	Show influence of economical factors on housing prices
167	Loading the data
77	FS with the Pearson correlation
220	Spain since first recorded case
548	For neutral samples , use original texts as they are
27	Loading data etc
581	NaN imputation will be skipped in this tutorial
113	What is a python generator
144	CatBoost is RAM expensive so I prefer to utilize GPU
312	Standard imports for data science work
465	Making Feature Matrices
40	Using embedding in NN we can change dimensionality of categorical features
426	Predict with mixed language models
283	Feature Engineering through Aggregations
41	Prepare Traning Data
181	Merging the bureau dataset along with application train dataset to do more analysis
278	Creating Ordinal Variables
158	Encoding Categorical Variable
307	Example of Sampling from the Domain
525	Check the dataset
475	process submission images
42	See sample image
395	Build datasets objects
357	load mapping dictionaries
507	Data transformation and helper functions
349	Income distribution and target value
479	Create dataset with look back
487	Define dataset and model
46	Split the data into train and validation parts
482	These have their kitchen area larger than the total area of the house
174	Keras Tokenizer API
450	Importing Library Files
375	and background color definition
399	Build datasets objects
265	Use Ad Image to Identify Item Category
417	Comparing various kappa scoring
224	Select the models to run setting bool variables below
151	Weekday and Meter Reading
140	Confusion Matrix for Train Data Predictions
63	Convert each labeled object to Run Line Encoding
398	Load text data into memory
95	Create a Classification Report
213	Now we can read the masks for the specific image
223	Getting population for each country
393	Load and process data
61	Dealing with color
480	Make prediction and apply invert scaling
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
52	Hist Graph of scores
424	Build the original and translated test data
430	Split Trian and Valid
248	Read the csv files on the Johns Hopkins CSSE database on github
192	At What Day Of The Week People Order
418	Relevant attributes of identified objects are stored
489	Compare timing for CutMix
336	Properly Representing Variable Types
130	Define some constants for data location
328	DFS with Default Primitives
98	Make a prediction on the test images
176	Importing The Dataset
544	Conversions by Device
359	Prepare for training
358	extract different column types
414	Training the model
80	Ensembling the solutions and submission
297	Create Training and Validation Set
555	What Does a Normal Image Look Like
137	Confusion Matrix for Train Data Predictions
79	Parameters and LB score visualization
434	evaluation solved tasks
560	The evaluation method
368	Gaussian Approximation of Active Cases
165	Librairies and data
406	Save model and best hyperparams
402	Load and preprocess data
228	Seperating the data into different data frame based on the labels
471	Create Image Augmentation Generator
36	All contraction are known
531	Null data check
202	Bathroom Count Vs Log Error
109	Plot the Loss Curves
24	The data is not balanced
458	targets in labels.csv
146	Featurization of Training Data
411	Create test generator
553	Disable fastai randomness
112	Create the submission csv file
259	Save objects for next step
493	Make TF record file for test dataset
44	Prepare Testing Data
405	Unhide below to see all trials results
496	Get metrics for validation dataset
162	Encoding Cordinal Direction
156	Square feet size is positively Skewed
235	Create the embedding layer
33	FVC Progression by Sex
299	Use More Features
131	Code from here and below is commented out because the kernel dies
438	Fast data loading
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
352	Define helper functions
218	Comparison between Brazil and Italy
103	Set Up the Generators
51	Make a simple restart of runtime at this point
203	Room Count Vs Log Error
99	Create a submission file
360	Initialize train and test DataFrames to access IDs and depth information
448	Model Evaluation and Validation
256	missing value statistics
120	Set up the folds for cross validation
419	Import the modules
408	Will need those folders later for storing our jpegs
184	Group signals metadata accroding to target
105	Its also builds on kernel functions but is appropriate for unsupervised learning
263	Predict test set and make submission
481	Using all features for model training
215	Prediction on test set
89	Using my notebook
446	At first , I made Europe future
104	Define X and y
154	Meter Readings over time
30	Training on the complete Dataset now
416	Infer using trained model
180	Checking the Correlation Between The Features for Application Train Dataset
273	Combinations of TTA
543	Explore ip counts
557	Opacities That Are Not Related to Pneumonia
552	At the scale of stores
281	Redundant Individual Variables
241	Bookings per day of week
170	Create Document Vectors
71	Is there a correlation between description length and price
67	Does shipping depends of price
461	TPU Strategy and other configs
319	Aggregate Installments Data
84	Parameters and LB score visualization
74	Apply Logistic Regression
279	Per Capita Features
589	Replace infs and imputing missing values by mean
365	SHAP Interaction Values
166	MERGE , MISSING VALUE , FILL NA
87	Code from notebook
0	Seems like a very wide range of values , relatively spaking
342	Calculate Information for Testing Data
345	Split into training and validation groups
583	That is the size of one test example that we ought to predict
326	Distribution of Search Values
453	Most of the dates overlap
388	Pad and resize all the images
75	Comparison of the all feature importance diagrams
111	Process the Predictions
20	Data is still small enough for memory so read to memory using pandas
221	Iran since first case
200	No Of Storey Over The Years
377	OSIC training data Example
468	View Single Image
106	Thanks for the example of ensemling different models from
502	An example usage
195	Visuallizing Interest Level Vs Bathroom
143	Data load and process functions
275	Addressing Wrong Labels
323	Learning Rate Domain
155	Meter Readings over time And Primary Use
216	Replacing Mainland china with just China
163	Seting X and Y
350	Read the data
295	Rides on Map of NYC
540	Age distribution of male and female patients
558	If you like the content of this notebook , please consider upvoting it
564	SAVE DATASET TO DISK
133	Idea is to use clustering on images of one type to group data
142	Converting the Input images to plot using plt
210	Let us read the masks
556	What are Lung Opacities
289	Visualize Tree with No Maximum Depth
141	Confusion Matrix for Test Data Predictions
269	Show Original Image
58	Download rate by hour
427	Ensemble with my historical best
490	Compare timing for MixUp
504	Define the number of repetitions for each class
462	Get Model into TPU
578	NOTE Even tough it is automatic , we can incorporate some manual features
300	Explore Time Variables
444	what already is known
26	Ability to Detect Face
178	Types Of Features
225	Calculating the day when the number of infected individuals is max
592	Load CSV files
251	filtering out outliers
407	Load Model into TPU
194	How many orders users generally made
157	Imputing Missing variable
1	Imputations and Data Transformation
443	Leak Data loading and concat
245	expanding the aggregate
463	Loading and Visualization of Data
436	Fast data loading
219	China scenario since first entry
347	Train and validate
501	Check saved checkpoints
205	Gaussian Noise on Target
321	Aggregate Credit previous loans
244	Interactive booking , click , and percentage of booking trends with Bokeh
478	Convert an array of values into a dataset matrix
534	You only have two areas to work on
302	Test Time Features
189	Bounded region of parameter space
524	Check null data
177	Function for find out Numerical and categeical Variables
429	Pick some frames to display
86	Divide features into groups
569	Add leak to test
290	Lets first check the Train Target Distribution
234	Load and Explore Data
585	What should good EDA be capable of
574	Lib and Load data
239	Feature Agglomeration Results
53	I updated importation for a faster version
13	Getting to Know the Data
576	We can see above the counts of higher damageDealt smoothly decrease
243	Bookings by month
447	There is a gap between them
460	These labels are not in train
301	We can make the same plot by day of the week
169	Loading the data
356	and batch aggregations examples for the rest of the tables ..
148	Importing Packages and Collecting Data
385	Creating and Training the Model
298	Train with Simple Features
317	Merge with the main dataframe
288	Recursive Feature Elimination with Random Forest
150	Meter Reading and Meter Type
311	Bayesian Optimization on the Full Dataset
437	Leak Data loading and concat
260	Import necessary libraries
371	This images from validation data seem to be really strange labeled ...
348	Granted applications per number of children
488	Prediction for test
423	Creating submission file
173	Document Vectors with hashing trick
261	High cardinality features
545	Preparing the data
164	Loading the data
485	CNN Model for multiclass classification
136	Using DecisionTree Classifier
43	See how our generator work
366	Get important features according to SHAP
280	In most cases , the values are very similar
497	Run on test dataset
125	Some stats using jpg exif
445	make hour column from transactionDT
190	Lets Read In Data Files
567	The method for training is borrowed from
396	Load model into the TPU
346	Prediction for one image
457	Sampling the train data since too much data
22	The data is not balanced
546	Use machine learning model
579	Feature primitives Basically which functions are we going to use to create features
160	Variable Description , Identification , and Correction
264	Remove Extreme Prices
565	LOAD DATASET FROM DISK
222	USA since first case
428	This is a simple modify from
404	Load and preprocess data
449	They are very similar to each other
372	Process test data in parallel
491	Compare timing for GridMask
456	Next , we will make prediction with our LR Model
316	Combined Aggregation Function
258	y hist with defferent timestamps are similar
521	Remove feature with only one value
9	And now we embed each chunk individually
533	Logistic Regression seems to be a good classification algorithm for this dataset
575	Explore distribution of single variable
83	Thanks for the example of ensemling different models from
339	Function to Handle Categorical Variables
420	Other columns are the digital value of pixels of kannada mnist
431	This plot shows summarized information about feature impact against shap output
34	FVC Progression by SmokingStatus
469	Number of Patients and Images in Training Images Folder
124	Apply skin segmentation on all training data and visualize the result
442	Fast data loading
580	Label encoding Making it machine readable
201	Bedroom Count Vs Log Error
541	Difference varialbes were created to describe the difference beween maximum and minimum value
570	Function which creates final video from list of images
294	Empirical Cumulative Distribution Function Plot
383	Create real file paths dataframe
337	Putting it all Together
568	Add train leak
563	LOAD PROCESSED TRAINING DATA FROM DISK
153	Primary Use and Meter Reading
379	TPU Strategy and other configs
114	How to make a generator run infinitely
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
509	Best parameters are searched by GridSearchCV on my Laptop
584	Save some memory
238	Random Forest Regressor
94	What is the AUC Score
384	Load and freeze DenseNet
530	Target , prediction process
573	The competition metric relies only on the order of recods ignoring IDs
303	Try with All Time Variables
226	Lets gets started
11	Maybe if we used the log plot things would be better
422	Display the dropped images
250	Join all dataframes
18	Unfreeze all layers and find best learning rate
338	Correlations of Aggregated Values with Target
403	Evaluate training history
159	Prediction and Submission
549	Write a problem file
50	You can state below link to your copy of this MMDetection repo
88	My upgrade of parameters
382	First downsize all the images
483	Make a Baseline model
196	Visualizing Interest Level Vs Bedrooms
97	Set up the generator
310	Random Search on the Full Dataset
126	Its also builds on kernel functions but is appropriate for unsupervised learning
381	Create fake filepaths dataframe
591	Evaluate the Model
247	Read the csv files from kaggle
206	Composition of Augmentations
391	Refit and Submit
212	Let us load one image and its masks
572	You can choose many palettes , which makes the graphs visually nice
361	Set data loading parameters
401	Inference on Test Set
305	Evaluate Best Model from Random Search
334	Plots of Hyperparameters vs Score
325	First , we need to put our data into a long format dataframe
193	When Do People Generally Reorder
387	Padding process and resizing with OpenCV
293	Data Exploration and Data Cleaning
333	Distribution of Scores
593	We can safely store the two types into separate dataframes
344	Monthly Credit Data
188	Load data and fit some models
566	The mean of the two is used as the final embedding matrix
505	Check oversampled dataset
343	Monthly Cash Data
284	Next we can rename the columns to make it easier to keep track
415	Load Test dataframe
286	The data has no missing values and is scaled between zero and one
378	Predict Test Set and Submit Result
4	No surprises , since this is all presumably artificial data
54	How many different values does our categorial variables take
467	Visualize by heatmap
435	All train tasks predictions
523	Load and preprocess data
362	Perform check on randomly chosen mask and prediction
322	Hyperparameter Tuning Implementation
532	It seems Goblins are a little similar to Ghouls
128	Manager function to call the create features functions in multiple processes
320	Aggregate Cash previous loans
172	Document Vectors with HashingVectorizer
65	Prices of the first level of categories
207	Loading and preprocessing data
12	Look at the data types and some basic info about the different columns
249	Transpose the dataframes
536	Predict by Specify Province
590	RF for feature selection
432	Plotting errors for one sample
199	Create final submission DF
73	Import Required Libraries
101	Balance the target distribution
340	Putting the Functions Together
327	Testing Results on Full Data
59	Importation of a entire day data
175	Creating the Model
2	Impute any values will significantly affect the RMSE score for test set
232	and target vector that correspond to the test data size
149	Variable Description and Identification
68	Can we get some informations out of the item description
421	Drop the blurry image
139	Using RandomForest Classifier
229	most important or common positive words
376	Add the actors to the renderer , set the background and size
513	Convert DCM to PNG
353	Predict validation and test set masks
459	targets in train.csv
389	Group and Reduce
472	Get Tabular Data
522	Feature selection using shap
373	Load Packages and Data
82	Its also builds on kernel functions but is appropriate for unsupervised learning
318	Aggregate previous loans at Home Credit
374	Outlier Analysis and Feature Scaling
69	What words do people use
45	Create Testing Generator
116	FS with the Pearson correlation
296	The test distribution seems to be similar to the training distribution
400	Load model into the TPU
454	Rolling monthly and yearly store means
209	Text Processing of text data easily
217	Now a look at Italy
49	Saving the model
535	Add active column
329	DFS with Selected Aggregation Primitives
197	Correlation Between Price and Other Features
90	How many images are in each folder
145	Word map for most frequent Tags
135	The number of samples in each cluster is the following
370	inspect datagen output
123	Basic skin detection
122	Get the dupplicate clicks with different target values
291	Filling missing and infinite data by zeroes
306	Now we can evaluate the baseline model on the testing data
355	Loading the data
519	combination using three features
102	Train Test Split
32	Unique value counts
537	Predict by Specify Country
587	Applying it on text
60	We can now print the results
62	Deriving individual masks for each object
254	Non physical data augmentation
367	Exponential Growth Curves
526	Moving average is so simple
582	Let us split the variables one more time
440	Fast data loading
547	This notebook will deal with positive , negative and neutral samples independently
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
470	Number of Patients and Images in Test Images Folder
425	Predict with pure text models
511	Test data preparation
270	Start by pivoting the DataFrame to explore the label distribution over slices
559	Composition of functions
211	So a unique operator will give us the unique filenames that contain ships
257	y的异常值 drop samples which have exception value in y
516	Check null data
452	Then transform to a datetime object supposing that it is an ordinal datetime
439	Leak Data loading and concat
466	Count game trainsition
409	Create new labels
510	Set Model for prediction
292	Submitting our Predictions
331	Remove Low Importance Features
129	How many different cars in train dataset
364	Distribution of months in train and test
476	we add some squared features for some model flexability
56	Does bots download the app
410	Pad and resize all the images
539	Predict all province greater than
134	Test on the data that is not seen by the network during training
390	Adding mode as feature
246	a quick check if demand distribution changes week to week
441	Find Best Weight
25	Take a look at predictions
285	Machine Learning Modeling
138	Confusion Matrix for Test Data Predictions
132	Lets validate the test files
230	Most important or common negative words
48	Counting the metric score
262	Ordinal features mapping
110	Make a Prediction
185	Apply reduction on some samples and visualize the results
3	Detect and Correct Outliers
274	Read in Data and Look at Summary Information
308	Learning Rate Distribution
115	Thanks to Automatic FE The main code for basic FE
313	Now we want to combine the data without creating any duplicate rows
550	Plot the obtained tour
369	load mapping dictionaries
266	Price Variance Within Identified Items
208	Preprocessing of features
528	Predict null data based on statistical method
315	Drop Correlated Variables
39	Using LabelEncoding we just change string values to numbers
161	Encoding Street Names
21	And finally lets look at the class distribution
512	Data preparation for test
304	Visualize Validation Predicted Target
517	Make new features using continuous feature
392	Plotting some random images to check how cleaning works
287	Comparing Model Performance
168	MERGE , MISSING VALUE , FILL NA
394	Load text data into memory
413	Save results as CSV files
121	Genetic program model , main code loop
15	Importing all Libraries
314	Identify Correlated Variables
324	Grid Search Implementation
252	using outliers column as labels instead of target column
518	Ratio feature can have infinite values
179	Analysis based Averages values
28	Show and save column comparision matrix and save row sets
38	Predict submission dates
57	Attributed time analysis
486	Create Inference Dataset
267	Affected Surface Object
237	Imputing missing values
214	For the same window we superimpose the masks above the image
330	Visualize Distribution of Correlated Variables
127	Thanks for the example of ensemling different models from
455	Train Our Linear Regression Model
433	train solved tasks
562	Ensure determinism in the results
397	Create fast tokenizer
81	Implementing the SIR model
282	For example , we can divide the years of schooling by the age
233	Import Packages and Functions
577	Getting Prime Cities
183	Paths to data and metadata
499	Choose the model to use
227	Full data Analysis
268	All Zero Features
561	Solve the task
240	Predict on test set
503	Get labels and their countings
514	Predictions class distribution
6	Read data set
96	MAKE A TEST SET PREDICTION
253	Check Unique Label
538	Predict all country greater than
29	Preparing the training data
198	Main Config Variables
380	Load Model into TPU
412	Reducing Image Size
182	analyzing the numerical features disturbion in previous application dataset
76	Thanks to Automatic FE The main code for basic FE
23	Apply Underbalancing Techinique
118	FS with SelectFromModel and RandomForestRegressor
494	Choose the model to use
506	Random Forest model
236	Build the Model
351	Check the typical length of a comment
8	Model Validation on train data set
529	Onehot encoding for categorical data
551	Import libraries and data , reduce memory usage
588	Read and Explore
332	Align Train and Test Sets
500	Get variables to apply weight decay in AdamW optimizer
473	process training images
335	First we need to format the data and extract the labels
108	Initialize the generators
231	Most important or common words in neutral data
277	Redundant Household Variables
107	Load the pre processed data
191	When Do People Generally Order
