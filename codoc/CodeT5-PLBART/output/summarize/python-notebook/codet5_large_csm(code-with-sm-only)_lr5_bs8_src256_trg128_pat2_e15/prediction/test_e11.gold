518	Ratio feature can have infinite values
57	Attributed time analysis
482	These have their kitchen area larger than the total area of the house
46	Split the data into train and validation parts
437	Leak Data loading and concat
303	Try with All Time Variables
112	Create the submission csv file
73	Import Required Libraries
40	Using embedding in NN we can change dimensionality of categorical features
182	analyzing the numerical features disturbion in previous application dataset
408	Will need those folders later for storing our jpegs
205	Gaussian Noise on Target
109	Plot the Loss Curves
36	All contraction are known
7	Text preprosesing source
333	Distribution of Scores
200	No Of Storey Over The Years
590	RF for feature selection
555	What Does a Normal Image Look Like
69	What words do people use
423	Creating submission file
364	Distribution of months in train and test
297	Create Training and Validation Set
411	Create test generator
358	extract different column types
76	Thanks to Automatic FE The main code for basic FE
160	Variable Description , Identification , and Correction
481	Using all features for model training
363	Create DFs imitating public and private test subsets
154	Meter Readings over time
98	Make a prediction on the test images
183	Paths to data and metadata
330	Visualize Distribution of Correlated Variables
484	Create dataset for training and Validation
218	Comparison between Brazil and Italy
581	NaN imputation will be skipped in this tutorial
405	Unhide below to see all trials results
164	Loading the data
440	Fast data loading
583	That is the size of one test example that we ought to predict
465	Making Feature Matrices
269	Show Original Image
113	What is a python generator
295	Rides on Map of NYC
414	Training the model
143	Data load and process functions
479	Create dataset with look back
452	Then transform to a datetime object supposing that it is an ordinal datetime
489	Compare timing for CutMix
63	Convert each labeled object to Run Line Encoding
329	DFS with Selected Aggregation Primitives
370	inspect datagen output
208	Preprocessing of features
77	FS with the Pearson correlation
90	How many images are in each folder
443	Leak Data loading and concat
151	Weekday and Meter Reading
393	Load and process data
70	Can the length of the description give us some informations
228	Seperating the data into different data frame based on the labels
347	Train and validate
509	Best parameters are searched by GridSearchCV on my Laptop
314	Identify Correlated Variables
8	Model Validation on train data set
339	Function to Handle Categorical Variables
473	process training images
357	load mapping dictionaries
402	Load and preprocess data
222	USA since first case
129	How many different cars in train dataset
85	Prepare Training Data
542	Here is a base model without parameter tuning .
169	Loading the data
243	Bookings by month
235	Create the embedding layer
469	Number of Patients and Images in Training Images Folder
382	First downsize all the images
410	Pad and resize all the images
30	Training on the complete Dataset now
451	OUTPUT OF AUGMENTATED IMAGES
428	This is a simple modify from
285	Machine Learning Modeling
274	Read in Data and Look at Summary Information
491	Compare timing for GridMask
268	All Zero Features
506	Random Forest model
445	make hour column from transactionDT
118	FS with SelectFromModel and RandomForestRegressor
500	Get variables to apply weight decay in AdamW optimizer
396	Load model into the TPU
302	Test Time Features
534	You only have two areas to work on
425	Predict with pure text models
508	Show influence of economical factors on housing prices
570	Function which creates final video from list of images
147	Fitting Logistic Regression with OneVsRest Classifier
214	For the same window we superimpose the masks above the image
2	Impute any values will significantly affect the RMSE score for test set
559	Composition of functions
477	Split into train and test sets
349	Income distribution and target value
460	These labels are not in train
250	Join all dataframes
365	SHAP Interaction Values
593	We can safely store the two types into separate dataframes
149	Variable Description and Identification
280	In most cases , the values are very similar
449	They are very similar to each other
192	At What Day Of The Week People Order
156	Square feet size is positively Skewed
27	Loading data etc
62	Deriving individual masks for each object
219	China scenario since first entry
207	Loading and preprocessing data
380	Load Model into TPU
384	Load and freeze DenseNet
554	Load train and test dataframes and add length columns for Description and Name
531	Null data check
351	Check the typical length of a comment
92	Balance the target distribution
513	Convert DCM to PNG
517	Make new features using continuous feature
550	Plot the obtained tour
487	Define dataset and model
565	LOAD DATASET FROM DISK
537	Predict by Specify Country
284	Next we can rename the columns to make it easier to keep track
426	Predict with mixed language models
549	Write a problem file
193	When Do People Generally Reorder
185	Apply reduction on some samples and visualize the results
394	Load text data into memory
122	Get the dupplicate clicks with different target values
123	Basic skin detection
478	Convert an array of values into a dataset matrix
371	This images from validation data seem to be really strange labeled ...
181	Merging the bureau dataset along with application train dataset to do more analysis
391	Refit and Submit
242	Bookings by year
258	y hist with defferent timestamps are similar
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
326	Distribution of Search Values
259	Save objects for next step
367	Exponential Growth Curves
79	Parameters and LB score visualization
225	Calculating the day when the number of infected individuals is max
325	First , we need to put our data into a long format dataframe
548	For neutral samples , use original texts as they are
106	Thanks for the example of ensemling different models from
577	Getting Prime Cities
189	Bounded region of parameter space
558	If you like the content of this notebook , please consider upvoting it
470	Number of Patients and Images in Test Images Folder
324	Grid Search Implementation
584	Save some memory
344	Monthly Credit Data
588	Read and Explore
313	Now we want to combine the data without creating any duplicate rows
317	Merge with the main dataframe
529	Onehot encoding for categorical data
41	Prepare Traning Data
353	Predict validation and test set masks
196	Visualizing Interest Level Vs Bedrooms
165	Librairies and data
296	The test distribution seems to be similar to the training distribution
466	Count game trainsition
540	Age distribution of male and female patients
535	Add active column
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
270	Start by pivoting the DataFrame to explore the label distribution over slices
201	Bedroom Count Vs Log Error
226	Lets gets started
488	Prediction for test
199	Create final submission DF
245	expanding the aggregate
298	Train with Simple Features
55	Zoom on this IP
447	There is a gap between them
454	Rolling monthly and yearly store means
458	targets in labels.csv
139	Using RandomForest Classifier
108	Initialize the generators
168	MERGE , MISSING VALUE , FILL NA
142	Converting the Input images to plot using plt
233	Import Packages and Functions
373	Load Packages and Data
292	Submitting our Predictions
334	Plots of Hyperparameters vs Score
244	Interactive booking , click , and percentage of booking trends with Bokeh
442	Fast data loading
203	Room Count Vs Log Error
576	We can see above the counts of higher damageDealt smoothly decrease
498	Hugging Face pretrained Bert model names
272	Demonstration how it works
163	Seting X and Y
350	Read the data
561	Solve the task
188	Load data and fit some models
51	Make a simple restart of runtime at this point
424	Build the original and translated test data
0	Seems like a very wide range of values , relatively spaking
468	View Single Image
227	Full data Analysis
277	Redundant Household Variables
407	Load Model into TPU
378	Predict Test Set and Submit Result
299	Use More Features
448	Model Evaluation and Validation
161	Encoding Street Names
431	This plot shows summarized information about feature impact against shap output
318	Aggregate previous loans at Home Credit
494	Choose the model to use
515	Check the dataset
5	Now there appears to be one feature that is not gaussian
377	OSIC training data Example
361	Set data loading parameters
571	Loading libraries and data
589	Replace infs and imputing missing values by mean
152	Time of Day and Meter Reading
58	Download rate by hour
278	Creating Ordinal Variables
427	Ensemble with my historical best
496	Get metrics for validation dataset
140	Confusion Matrix for Train Data Predictions
249	Transpose the dataframes
400	Load model into the TPU
209	Text Processing of text data easily
173	Document Vectors with hashing trick
198	Main Config Variables
472	Get Tabular Data
546	Use machine learning model
91	Create a Dataframe containing all images
223	Getting population for each country
413	Save results as CSV files
177	Function for find out Numerical and categeical Variables
137	Confusion Matrix for Train Data Predictions
322	Hyperparameter Tuning Implementation
4	No surprises , since this is all presumably artificial data
328	DFS with Default Primitives
456	Next , we will make prediction with our LR Model
287	Comparing Model Performance
511	Test data preparation
483	Make a Baseline model
65	Prices of the first level of categories
15	Importing all Libraries
6	Read data set
273	Combinations of TTA
340	Putting the Functions Together
374	Outlier Analysis and Feature Scaling
72	Graph Representation of RNA structure
311	Bayesian Optimization on the Full Dataset
404	Load and preprocess data
288	Recursive Feature Elimination with Random Forest
88	My upgrade of parameters
133	Idea is to use clustering on images of one type to group data
101	Balance the target distribution
20	Data is still small enough for memory so read to memory using pandas
179	Analysis based Averages values
387	Padding process and resizing with OpenCV
467	Visualize by heatmap
206	Composition of Augmentations
315	Drop Correlated Variables
89	Using my notebook
31	Data loading and checking
104	Define X and y
54	How many different values does our categorial variables take
553	Disable fastai randomness
390	Adding mode as feature
444	what already is known
127	Thanks for the example of ensemling different models from
362	Perform check on randomly chosen mask and prediction
132	Lets validate the test files
75	Comparison of the all feature importance diagrams
345	Split into training and validation groups
125	Some stats using jpg exif
248	Read the csv files on the Johns Hopkins CSSE database on github
573	The competition metric relies only on the order of recods ignoring IDs
575	Explore distribution of single variable
574	Lib and Load data
453	Most of the dates overlap
568	Add train leak
53	I updated importation for a faster version
379	TPU Strategy and other configs
331	Remove Low Importance Features
335	First we need to format the data and extract the labels
385	Creating and Training the Model
172	Document Vectors with HashingVectorizer
432	Plotting errors for one sample
50	You can state below link to your copy of this MMDetection repo
471	Create Image Augmentation Generator
403	Evaluate training history
260	Import necessary libraries
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
100	Create Binary Targets
533	Logistic Regression seems to be a good classification algorithm for this dataset
45	Create Testing Generator
66	What are their top categories
217	Now a look at Italy
256	missing value statistics
14	The Shape of the Data
293	Data Exploration and Data Cleaning
107	Load the pre processed data
16	Seed everything for reproducibility
386	Save model and weights
29	Preparing the training data
341	Aggregated Stats of Bureau Balance by Client
592	Load CSV files
220	Spain since first recorded case
526	Moving average is so simple
126	Its also builds on kernel functions but is appropriate for unsupervised learning
276	Families without Heads of Household
399	Build datasets objects
178	Types Of Features
337	Putting it all Together
25	Take a look at predictions
119	Load data files
552	At the scale of stores
429	Pick some frames to display
332	Align Train and Test Sets
420	Other columns are the digital value of pixels of kannada mnist
320	Aggregate Cash previous loans
587	Applying it on text
312	Standard imports for data science work
480	Make prediction and apply invert scaling
247	Read the csv files from kaggle
433	train solved tasks
514	Predictions class distribution
230	Most important or common negative words
524	Check null data
97	Set up the generator
197	Correlation Between Price and Other Features
462	Get Model into TPU
232	and target vector that correspond to the test data size
566	The mean of the two is used as the final embedding matrix
308	Learning Rate Distribution
221	Iran since first case
510	Set Model for prediction
310	Random Search on the Full Dataset
83	Thanks for the example of ensemling different models from
202	Bathroom Count Vs Log Error
300	Explore Time Variables
35	Count occurance of words
366	Get important features according to SHAP
520	Mix region and education
95	Create a Classification Report
255	Check if valid data looks all right
136	Using DecisionTree Classifier
336	Properly Representing Variable Types
369	load mapping dictionaries
120	Set up the folds for cross validation
316	Combined Aggregation Function
239	Feature Agglomeration Results
204	No Of Storeys Vs Log Error
279	Per Capita Features
102	Train Test Split
145	Word map for most frequent Tags
114	How to make a generator run infinitely
167	Loading the data
12	Look at the data types and some basic info about the different columns
175	Creating the Model
78	FS with SelectFromModel and LinearSVR
560	The evaluation method
138	Confusion Matrix for Test Data Predictions
18	Unfreeze all layers and find best learning rate
121	Genetic program model , main code loop
282	For example , we can divide the years of schooling by the age
32	Unique value counts
252	using outliers column as labels instead of target column
246	a quick check if demand distribution changes week to week
502	An example usage
286	The data has no missing values and is scaled between zero and one
375	and background color definition
26	Ability to Detect Face
397	Create fast tokenizer
195	Visuallizing Interest Level Vs Bathroom
99	Create a submission file
115	Thanks to Automatic FE The main code for basic FE
130	Define some constants for data location
39	Using LabelEncoding we just change string values to numbers
572	You can choose many palettes , which makes the graphs visually nice
398	Load text data into memory
24	The data is not balanced
9	And now we embed each chunk individually
545	Preparing the data
38	Predict submission dates
171	Document Vectors with TfidfVectorizer
547	This notebook will deal with positive , negative and neutral samples independently
234	Load and Explore Data
190	Lets Read In Data Files
352	Define helper functions
229	most important or common positive words
174	Keras Tokenizer API
275	Addressing Wrong Labels
474	process test images
501	Check saved checkpoints
187	Interpreting ROC Plot
131	Code from here and below is commented out because the kernel dies
263	Predict test set and make submission
124	Apply skin segmentation on all training data and visualize the result
153	Primary Use and Meter Reading
105	Its also builds on kernel functions but is appropriate for unsupervised learning
441	Find Best Weight
17	Defining DataBunch for FastAI
238	Random Forest Regressor
135	The number of samples in each cluster is the following
166	MERGE , MISSING VALUE , FILL NA
68	Can we get some informations out of the item description
157	Imputing Missing variable
194	How many orders users generally made
321	Aggregate Credit previous loans
215	Prediction on test set
290	Lets first check the Train Target Distribution
74	Apply Logistic Regression
383	Create real file paths dataframe
13	Getting to Know the Data
128	Manager function to call the create features functions in multiple processes
519	combination using three features
416	Infer using trained model
111	Process the Predictions
490	Compare timing for MixUp
527	Find Null data
134	Test on the data that is not seen by the network during training
67	Does shipping depends of price
294	Empirical Cumulative Distribution Function Plot
28	Show and save column comparision matrix and save row sets
450	Importing Library Files
34	FVC Progression by SmokingStatus
495	Run on validation dataset
262	Ordinal features mapping
586	Reading in the data , as usual
430	Split Trian and Valid
43	See how our generator work
522	Feature selection using shap
291	Filling missing and infinite data by zeroes
538	Predict all country greater than
356	and batch aggregations examples for the rest of the tables ..
381	Create fake filepaths dataframe
212	Let us load one image and its masks
401	Inference on Test Set
22	The data is not balanced
211	So a unique operator will give us the unique filenames that contain ships
507	Data transformation and helper functions
419	Import the modules
71	Is there a correlation between description length and price
304	Visualize Validation Predicted Target
56	Does bots download the app
579	Feature primitives Basically which functions are we going to use to create features
216	Replacing Mainland china with just China
528	Predict null data based on statistical method
439	Leak Data loading and concat
47	Create and set up the model
257	y的异常值 drop samples which have exception value in y
49	Saving the model
485	CNN Model for multiclass classification
81	Implementing the SIR model
463	Loading and Visualization of Data
283	Feature Engineering through Aggregations
567	The method for training is borrowed from
52	Hist Graph of scores
536	Predict by Specify Province
253	Check Unique Label
184	Group signals metadata accroding to target
236	Build the Model
360	Initialize train and test DataFrames to access IDs and depth information
176	Importing The Dataset
265	Use Ad Image to Identify Item Category
464	Making Vocabulary and Text Conversion
504	Define the number of repetitions for each class
80	Ensembling the solutions and submission
585	What should good EDA be capable of
346	Prediction for one image
170	Create Document Vectors
493	Make TF record file for test dataset
266	Price Variance Within Identified Items
359	Prepare for training
512	Data preparation for test
261	High cardinality features
457	Sampling the train data since too much data
86	Divide features into groups
301	We can make the same plot by day of the week
224	Select the models to run setting bool variables below
409	Create new labels
11	Maybe if we used the log plot things would be better
475	process submission images
395	Build datasets objects
48	Counting the metric score
264	Remove Extreme Prices
155	Meter Readings over time And Primary Use
44	Prepare Testing Data
254	Non physical data augmentation
59	Importation of a entire day data
146	Featurization of Training Data
412	Reducing Image Size
563	LOAD PROCESSED TRAINING DATA FROM DISK
503	Get labels and their countings
327	Testing Results on Full Data
309	Applied to Full Dataset
376	Add the actors to the renderer , set the background and size
23	Apply Underbalancing Techinique
578	NOTE Even tough it is automatic , we can incorporate some manual features
306	Now we can evaluate the baseline model on the testing data
319	Aggregate Installments Data
417	Comparing various kappa scoring
418	Relevant attributes of identified objects are stored
422	Display the dropped images
240	Predict on test set
289	Visualize Tree with No Maximum Depth
389	Group and Reduce
476	we add some squared features for some model flexability
180	Checking the Correlation Between The Features for Application Train Dataset
307	Example of Sampling from the Domain
210	Let us read the masks
348	Granted applications per number of children
539	Predict all province greater than
19	Predicting for test data
580	Label encoding Making it machine readable
82	Its also builds on kernel functions but is appropriate for unsupervised learning
492	Hugging Face pretrained Bert model names
213	Now we can read the masks for the specific image
60	We can now print the results
103	Set Up the Generators
64	So , some categories are expensive , but most are cheap
158	Encoding Categorical Variable
61	Dealing with color
116	FS with the Pearson correlation
94	What is the AUC Score
564	SAVE DATASET TO DISK
87	Code from notebook
323	Learning Rate Domain
141	Confusion Matrix for Test Data Predictions
434	evaluation solved tasks
117	FS with SelectFromModel and LinearSVR
406	Save model and best hyperparams
497	Run on test dataset
93	Set Up the Generators
354	Train the LGBM model
84	Parameters and LB score visualization
110	Make a Prediction
556	What are Lung Opacities
144	CatBoost is RAM expensive so I prefer to utilize GPU
562	Ensure determinism in the results
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
551	Import libraries and data , reduce memory usage
461	TPU Strategy and other configs
557	Opacities That Are Not Related to Pneumonia
505	Check oversampled dataset
96	MAKE A TEST SET PREDICTION
159	Prediction and Submission
569	Add leak to test
544	Conversions by Device
421	Drop the blurry image
415	Load Test dataframe
591	Evaluate the Model
281	Redundant Individual Variables
486	Create Inference Dataset
516	Check null data
523	Load and preprocess data
21	And finally lets look at the class distribution
532	It seems Goblins are a little similar to Ghouls
525	Check the dataset
499	Choose the model to use
372	Process test data in parallel
521	Remove feature with only one value
3	Detect and Correct Outliers
459	targets in train.csv
582	Let us split the variables one more time
543	Explore ip counts
33	FVC Progression by Sex
435	All train tasks predictions
231	Most important or common words in neutral data
305	Evaluate Best Model from Random Search
436	Fast data loading
355	Loading the data
338	Correlations of Aggregated Values with Target
455	Train Our Linear Regression Model
42	See sample image
237	Imputing missing values
541	Difference varialbes were created to describe the difference beween maximum and minimum value
530	Target , prediction process
162	Encoding Cordinal Direction
191	When Do People Generally Order
446	At first , I made Europe future
1	Imputations and Data Transformation
150	Meter Reading and Meter Type
438	Fast data loading
388	Pad and resize all the images
241	Bookings per day of week
251	filtering out outliers
342	Calculate Information for Testing Data
368	Gaussian Approximation of Active Cases
343	Monthly Cash Data
392	Plotting some random images to check how cleaning works
148	Importing Packages and Collecting Data
267	Affected Surface Object
