254	Non physical data augmentation
247	Read the csv files from kaggle
493	Make TF record file for test dataset
52	Hist Graph of scores
316	Combined Aggregation Function
335	First we need to format the data and extract the labels
344	Monthly Credit Data
424	Build the original and translated test data
458	targets in labels.csv
118	FS with SelectFromModel and RandomForestRegressor
219	China scenario since first entry
524	Check null data
547	This notebook will deal with positive , negative and neutral samples independently
249	Transpose the dataframes
437	Leak Data loading and concat
16	Seed everything for reproducibility
538	Predict all country greater than
540	Age distribution of male and female patients
226	Lets gets started
413	Save results as CSV files
149	Variable Description and Identification
439	Leak Data loading and concat
241	Bookings per day of week
268	All Zero Features
368	Gaussian Approximation of Active Cases
269	Show Original Image
402	Load and preprocess data
577	Getting Prime Cities
333	Distribution of Scores
116	FS with the Pearson correlation
207	Loading and preprocessing data
18	Unfreeze all layers and find best learning rate
440	Fast data loading
59	Importation of a entire day data
518	Ratio feature can have infinite values
156	Square feet size is positively Skewed
86	Divide features into groups
546	Use machine learning model
589	Replace infs and imputing missing values by mean
434	evaluation solved tasks
211	So a unique operator will give us the unique filenames that contain ships
120	Set up the folds for cross validation
100	Create Binary Targets
525	Check the dataset
221	Iran since first case
238	Random Forest Regressor
180	Checking the Correlation Between The Features for Application Train Dataset
183	Paths to data and metadata
40	Using embedding in NN we can change dimensionality of categorical features
58	Download rate by hour
352	Define helper functions
346	Prediction for one image
515	Check the dataset
126	Its also builds on kernel functions but is appropriate for unsupervised learning
244	Interactive booking , click , and percentage of booking trends with Bokeh
427	Ensemble with my historical best
587	Applying it on text
378	Predict Test Set and Submit Result
46	Split the data into train and validation parts
101	Balance the target distribution
117	FS with SelectFromModel and LinearSVR
51	Make a simple restart of runtime at this point
246	a quick check if demand distribution changes week to week
500	Get variables to apply weight decay in AdamW optimizer
227	Full data Analysis
45	Create Testing Generator
114	How to make a generator run infinitely
448	Model Evaluation and Validation
191	When Do People Generally Order
517	Make new features using continuous feature
558	If you like the content of this notebook , please consider upvoting it
195	Visuallizing Interest Level Vs Bathroom
360	Initialize train and test DataFrames to access IDs and depth information
272	Demonstration how it works
135	The number of samples in each cluster is the following
319	Aggregate Installments Data
331	Remove Low Importance Features
133	Idea is to use clustering on images of one type to group data
505	Check oversampled dataset
27	Loading data etc
253	Check Unique Label
501	Check saved checkpoints
399	Build datasets objects
209	Text Processing of text data easily
123	Basic skin detection
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
444	what already is known
477	Split into train and test sets
342	Calculate Information for Testing Data
332	Align Train and Test Sets
473	process training images
438	Fast data loading
134	Test on the data that is not seen by the network during training
77	FS with the Pearson correlation
385	Creating and Training the Model
261	High cardinality features
284	Next we can rename the columns to make it easier to keep track
137	Confusion Matrix for Train Data Predictions
562	Ensure determinism in the results
301	We can make the same plot by day of the week
112	Create the submission csv file
445	make hour column from transactionDT
326	Distribution of Search Values
329	DFS with Selected Aggregation Primitives
422	Display the dropped images
90	How many images are in each folder
330	Visualize Distribution of Correlated Variables
20	Data is still small enough for memory so read to memory using pandas
396	Load model into the TPU
392	Plotting some random images to check how cleaning works
411	Create test generator
492	Hugging Face pretrained Bert model names
590	RF for feature selection
154	Meter Readings over time
421	Drop the blurry image
354	Train the LGBM model
357	load mapping dictionaries
451	OUTPUT OF AUGMENTATED IMAGES
460	These labels are not in train
504	Define the number of repetitions for each class
591	Evaluate the Model
64	So , some categories are expensive , but most are cheap
345	Split into training and validation groups
179	Analysis based Averages values
115	Thanks to Automatic FE The main code for basic FE
170	Create Document Vectors
462	Get Model into TPU
365	SHAP Interaction Values
542	Here is a base model without parameter tuning .
561	Solve the task
57	Attributed time analysis
503	Get labels and their countings
381	Create fake filepaths dataframe
292	Submitting our Predictions
78	FS with SelectFromModel and LinearSVR
296	The test distribution seems to be similar to the training distribution
175	Creating the Model
146	Featurization of Training Data
417	Comparing various kappa scoring
305	Evaluate Best Model from Random Search
484	Create dataset for training and Validation
475	process submission images
583	That is the size of one test example that we ought to predict
33	FVC Progression by Sex
531	Null data check
155	Meter Readings over time And Primary Use
467	Visualize by heatmap
560	The evaluation method
121	Genetic program model , main code loop
164	Loading the data
569	Add leak to test
506	Random Forest model
431	This plot shows summarized information about feature impact against shap output
277	Redundant Household Variables
287	Comparing Model Performance
544	Conversions by Device
449	They are very similar to each other
459	targets in train.csv
405	Unhide below to see all trials results
468	View Single Image
513	Convert DCM to PNG
215	Prediction on test set
370	inspect datagen output
93	Set Up the Generators
519	combination using three features
187	Interpreting ROC Plot
323	Learning Rate Domain
520	Mix region and education
482	These have their kitchen area larger than the total area of the house
192	At What Day Of The Week People Order
447	There is a gap between them
469	Number of Patients and Images in Training Images Folder
39	Using LabelEncoding we just change string values to numbers
60	We can now print the results
553	Disable fastai randomness
371	This images from validation data seem to be really strange labeled ...
228	Seperating the data into different data frame based on the labels
390	Adding mode as feature
557	Opacities That Are Not Related to Pneumonia
216	Replacing Mainland china with just China
7	Text preprosesing source
169	Loading the data
85	Prepare Training Data
217	Now a look at Italy
355	Loading the data
325	First , we need to put our data into a long format dataframe
499	Choose the model to use
48	Counting the metric score
485	CNN Model for multiclass classification
320	Aggregate Cash previous loans
566	The mean of the two is used as the final embedding matrix
122	Get the dupplicate clicks with different target values
309	Applied to Full Dataset
582	Let us split the variables one more time
0	Seems like a very wide range of values , relatively spaking
523	Load and preprocess data
15	Importing all Libraries
199	Create final submission DF
36	All contraction are known
267	Affected Surface Object
294	Empirical Cumulative Distribution Function Plot
564	SAVE DATASET TO DISK
151	Weekday and Meter Reading
494	Choose the model to use
263	Predict test set and make submission
274	Read in Data and Look at Summary Information
152	Time of Day and Meter Reading
190	Lets Read In Data Files
362	Perform check on randomly chosen mask and prediction
168	MERGE , MISSING VALUE , FILL NA
76	Thanks to Automatic FE The main code for basic FE
351	Check the typical length of a comment
526	Moving average is so simple
206	Composition of Augmentations
166	MERGE , MISSING VALUE , FILL NA
43	See how our generator work
3	Detect and Correct Outliers
400	Load model into the TPU
353	Predict validation and test set masks
11	Maybe if we used the log plot things would be better
68	Can we get some informations out of the item description
214	For the same window we superimpose the masks above the image
495	Run on validation dataset
349	Income distribution and target value
62	Deriving individual masks for each object
266	Price Variance Within Identified Items
293	Data Exploration and Data Cleaning
25	Take a look at predictions
212	Let us load one image and its masks
584	Save some memory
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
231	Most important or common words in neutral data
474	process test images
534	You only have two areas to work on
147	Fitting Logistic Regression with OneVsRest Classifier
490	Compare timing for MixUp
87	Code from notebook
372	Process test data in parallel
150	Meter Reading and Meter Type
158	Encoding Categorical Variable
91	Create a Dataframe containing all images
283	Feature Engineering through Aggregations
273	Combinations of TTA
502	An example usage
314	Identify Correlated Variables
541	Difference varialbes were created to describe the difference beween maximum and minimum value
157	Imputing Missing variable
83	Thanks for the example of ensemling different models from
313	Now we want to combine the data without creating any duplicate rows
508	Show influence of economical factors on housing prices
171	Document Vectors with TfidfVectorizer
327	Testing Results on Full Data
189	Bounded region of parameter space
470	Number of Patients and Images in Test Images Folder
593	We can safely store the two types into separate dataframes
576	We can see above the counts of higher damageDealt smoothly decrease
275	Addressing Wrong Labels
408	Will need those folders later for storing our jpegs
453	Most of the dates overlap
142	Converting the Input images to plot using plt
104	Define X and y
163	Seting X and Y
588	Read and Explore
527	Find Null data
423	Creating submission file
398	Load text data into memory
412	Reducing Image Size
201	Bedroom Count Vs Log Error
276	Families without Heads of Household
161	Encoding Street Names
483	Make a Baseline model
414	Training the model
514	Predictions class distribution
127	Thanks for the example of ensemling different models from
128	Manager function to call the create features functions in multiple processes
50	You can state below link to your copy of this MMDetection repo
310	Random Search on the Full Dataset
436	Fast data loading
570	Function which creates final video from list of images
185	Apply reduction on some samples and visualize the results
111	Process the Predictions
94	What is the AUC Score
586	Reading in the data , as usual
555	What Does a Normal Image Look Like
455	Train Our Linear Regression Model
556	What are Lung Opacities
539	Predict all province greater than
81	Implementing the SIR model
132	Lets validate the test files
160	Variable Description , Identification , and Correction
73	Import Required Libraries
102	Train Test Split
225	Calculating the day when the number of infected individuals is max
281	Redundant Individual Variables
56	Does bots download the app
181	Merging the bureau dataset along with application train dataset to do more analysis
573	The competition metric relies only on the order of recods ignoring IDs
537	Predict by Specify Country
256	missing value statistics
30	Training on the complete Dataset now
252	using outliers column as labels instead of target column
377	OSIC training data Example
533	Logistic Regression seems to be a good classification algorithm for this dataset
24	The data is not balanced
393	Load and process data
363	Create DFs imitating public and private test subsets
425	Predict with pure text models
488	Prediction for test
481	Using all features for model training
430	Split Trian and Valid
66	What are their top categories
31	Data loading and checking
450	Importing Library Files
406	Save model and best hyperparams
366	Get important features according to SHAP
489	Compare timing for CutMix
386	Save model and weights
32	Unique value counts
554	Load train and test dataframes and add length columns for Description and Name
14	The Shape of the Data
220	Spain since first recorded case
88	My upgrade of parameters
2	Impute any values will significantly affect the RMSE score for test set
391	Refit and Submit
574	Lib and Load data
578	NOTE Even tough it is automatic , we can incorporate some manual features
397	Create fast tokenizer
312	Standard imports for data science work
138	Confusion Matrix for Test Data Predictions
229	most important or common positive words
103	Set Up the Generators
248	Read the csv files on the Johns Hopkins CSSE database on github
471	Create Image Augmentation Generator
148	Importing Packages and Collecting Data
328	DFS with Default Primitives
403	Evaluate training history
257	y的异常值 drop samples which have exception value in y
5	Now there appears to be one feature that is not gaussian
61	Dealing with color
387	Padding process and resizing with OpenCV
22	The data is not balanced
295	Rides on Map of NYC
237	Imputing missing values
585	What should good EDA be capable of
223	Getting population for each country
322	Hyperparameter Tuning Implementation
348	Granted applications per number of children
550	Plot the obtained tour
178	Types Of Features
334	Plots of Hyperparameters vs Score
568	Add train leak
203	Room Count Vs Log Error
426	Predict with mixed language models
69	What words do people use
140	Confusion Matrix for Train Data Predictions
279	Per Capita Features
394	Load text data into memory
108	Initialize the generators
543	Explore ip counts
567	The method for training is borrowed from
159	Prediction and Submission
452	Then transform to a datetime object supposing that it is an ordinal datetime
9	And now we embed each chunk individually
380	Load Model into TPU
361	Set data loading parameters
416	Infer using trained model
177	Function for find out Numerical and categeical Variables
278	Creating Ordinal Variables
435	All train tasks predictions
65	Prices of the first level of categories
198	Main Config Variables
497	Run on test dataset
174	Keras Tokenizer API
442	Fast data loading
522	Feature selection using shap
131	Code from here and below is commented out because the kernel dies
12	Look at the data types and some basic info about the different columns
84	Parameters and LB score visualization
339	Function to Handle Categorical Variables
367	Exponential Growth Curves
80	Ensembling the solutions and submission
401	Inference on Test Set
98	Make a prediction on the test images
498	Hugging Face pretrained Bert model names
173	Document Vectors with hashing trick
364	Distribution of months in train and test
290	Lets first check the Train Target Distribution
202	Bathroom Count Vs Log Error
141	Confusion Matrix for Test Data Predictions
509	Best parameters are searched by GridSearchCV on my Laptop
432	Plotting errors for one sample
72	Graph Representation of RNA structure
592	Load CSV files
218	Comparison between Brazil and Italy
456	Next , we will make prediction with our LR Model
44	Prepare Testing Data
491	Compare timing for GridMask
23	Apply Underbalancing Techinique
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
6	Read data set
240	Predict on test set
29	Preparing the training data
105	Its also builds on kernel functions but is appropriate for unsupervised learning
486	Create Inference Dataset
369	load mapping dictionaries
109	Plot the Loss Curves
130	Define some constants for data location
466	Count game trainsition
13	Getting to Know the Data
54	How many different values does our categorial variables take
464	Making Vocabulary and Text Conversion
465	Making Feature Matrices
143	Data load and process functions
306	Now we can evaluate the baseline model on the testing data
472	Get Tabular Data
1	Imputations and Data Transformation
463	Loading and Visualization of Data
19	Predicting for test data
79	Parameters and LB score visualization
28	Show and save column comparision matrix and save row sets
300	Explore Time Variables
289	Visualize Tree with No Maximum Depth
47	Create and set up the model
26	Ability to Detect Face
336	Properly Representing Variable Types
347	Train and validate
507	Data transformation and helper functions
383	Create real file paths dataframe
49	Saving the model
350	Read the data
454	Rolling monthly and yearly store means
551	Import libraries and data , reduce memory usage
41	Prepare Traning Data
410	Pad and resize all the images
516	Check null data
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
172	Document Vectors with HashingVectorizer
420	Other columns are the digital value of pixels of kannada mnist
129	How many different cars in train dataset
4	No surprises , since this is all presumably artificial data
457	Sampling the train data since too much data
575	Explore distribution of single variable
245	expanding the aggregate
581	NaN imputation will be skipped in this tutorial
429	Pick some frames to display
303	Try with All Time Variables
512	Data preparation for test
124	Apply skin segmentation on all training data and visualize the result
297	Create Training and Validation Set
510	Set Model for prediction
144	CatBoost is RAM expensive so I prefer to utilize GPU
113	What is a python generator
232	and target vector that correspond to the test data size
82	Its also builds on kernel functions but is appropriate for unsupervised learning
251	filtering out outliers
21	And finally lets look at the class distribution
125	Some stats using jpg exif
194	How many orders users generally made
580	Label encoding Making it machine readable
288	Recursive Feature Elimination with Random Forest
395	Build datasets objects
521	Remove feature with only one value
184	Group signals metadata accroding to target
496	Get metrics for validation dataset
409	Create new labels
299	Use More Features
291	Filling missing and infinite data by zeroes
193	When Do People Generally Reorder
478	Convert an array of values into a dataset matrix
75	Comparison of the all feature importance diagrams
89	Using my notebook
200	No Of Storey Over The Years
415	Load Test dataframe
110	Make a Prediction
260	Import necessary libraries
282	For example , we can divide the years of schooling by the age
162	Encoding Cordinal Direction
480	Make prediction and apply invert scaling
407	Load Model into TPU
324	Grid Search Implementation
165	Librairies and data
205	Gaussian Noise on Target
404	Load and preprocess data
388	Pad and resize all the images
530	Target , prediction process
107	Load the pre processed data
145	Word map for most frequent Tags
38	Predict submission dates
167	Loading the data
307	Example of Sampling from the Domain
374	Outlier Analysis and Feature Scaling
70	Can the length of the description give us some informations
375	and background color definition
535	Add active column
528	Predict null data based on statistical method
204	No Of Storeys Vs Log Error
536	Predict by Specify Province
389	Group and Reduce
315	Drop Correlated Variables
321	Aggregate Credit previous loans
552	At the scale of stores
106	Thanks for the example of ensemling different models from
443	Leak Data loading and concat
239	Feature Agglomeration Results
461	TPU Strategy and other configs
182	analyzing the numerical features disturbion in previous application dataset
545	Preparing the data
549	Write a problem file
250	Join all dataframes
235	Create the embedding layer
196	Visualizing Interest Level Vs Bedrooms
441	Find Best Weight
262	Ordinal features mapping
92	Balance the target distribution
286	The data has no missing values and is scaled between zero and one
136	Using DecisionTree Classifier
255	Check if valid data looks all right
302	Test Time Features
418	Relevant attributes of identified objects are stored
264	Remove Extreme Prices
428	This is a simple modify from
382	First downsize all the images
74	Apply Logistic Regression
563	LOAD PROCESSED TRAINING DATA FROM DISK
337	Putting it all Together
53	I updated importation for a faster version
35	Count occurance of words
317	Merge with the main dataframe
67	Does shipping depends of price
213	Now we can read the masks for the specific image
376	Add the actors to the renderer , set the background and size
17	Defining DataBunch for FastAI
511	Test data preparation
311	Bayesian Optimization on the Full Dataset
234	Load and Explore Data
270	Start by pivoting the DataFrame to explore the label distribution over slices
224	Select the models to run setting bool variables below
304	Visualize Validation Predicted Target
341	Aggregated Stats of Bureau Balance by Client
529	Onehot encoding for categorical data
97	Set up the generator
487	Define dataset and model
446	At first , I made Europe future
565	LOAD DATASET FROM DISK
242	Bookings by year
571	Loading libraries and data
230	Most important or common negative words
55	Zoom on this IP
340	Putting the Functions Together
95	Create a Classification Report
236	Build the Model
559	Composition of functions
379	TPU Strategy and other configs
356	and batch aggregations examples for the rest of the tables ..
548	For neutral samples , use original texts as they are
71	Is there a correlation between description length and price
208	Preprocessing of features
338	Correlations of Aggregated Values with Target
419	Import the modules
479	Create dataset with look back
384	Load and freeze DenseNet
99	Create a submission file
476	we add some squared features for some model flexability
359	Prepare for training
153	Primary Use and Meter Reading
358	extract different column types
34	FVC Progression by SmokingStatus
63	Convert each labeled object to Run Line Encoding
579	Feature primitives Basically which functions are we going to use to create features
96	MAKE A TEST SET PREDICTION
308	Learning Rate Distribution
343	Monthly Cash Data
139	Using RandomForest Classifier
259	Save objects for next step
243	Bookings by month
258	y hist with defferent timestamps are similar
197	Correlation Between Price and Other Features
298	Train with Simple Features
176	Importing The Dataset
373	Load Packages and Data
285	Machine Learning Modeling
433	train solved tasks
233	Import Packages and Functions
8	Model Validation on train data set
222	USA since first case
265	Use Ad Image to Identify Item Category
188	Load data and fit some models
42	See sample image
119	Load data files
532	It seems Goblins are a little similar to Ghouls
210	Let us read the masks
280	In most cases , the values are very similar
572	You can choose many palettes , which makes the graphs visually nice
318	Aggregate previous loans at Home Credit
