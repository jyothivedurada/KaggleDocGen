670	Importing Library Files
143	Create a Confusion Matrix
388	A good item price binning should be based on the price distribution
512	Choose and train a classifier
682	Train Our Linear Regression Model
487	Kernel Density Estimate Plots
733	Get metrics for validation dataset
589	Load model into the TPU
394	Initial Position and Momentum
312	Train a simple CNN architecture
583	Load text data into memory
283	Visualizing Outliers In Data
265	Apply reduction on some samples and visualize the results
146	Set up the generator
366	Data Exploration The label distribution shows clear label imbalance
134	Using my notebook
712	Function to convert series to supervised learning
679	Rolling monthly and yearly store means
827	At the scale of stores
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
631	Split Trian and Valid
318	Trivial segmentation stuff
254	Function for find out Numerical and categeical Variables
302	Loading and preprocessing data
171	FS with SelectFromModel and RandomForestRegressor
158	Thanks for the example of ensemling different models from
617	Import the modules
647	Leak Data loading and concat
594	Load and preprocess data
757	Test data preparation
466	Distribution of Search Values
59	See sample image
865	Feature primitives Basically which functions are we going to use to create features
429	Create Training and Validation Set
377	Divide the test set and the training set
50	All contraction are known
356	a quick check if demand distribution changes week to week
652	Fast data loading
806	this graph is adapted from
799	Predict by Specify Country
720	Define dataset and model
846	The mean of the two is used as the final embedding matrix
8	Read data set
519	and batch aggregations examples for the rest of the tables ..
38	Loading data etc
202	Using RandomForest Classifier
628	Ensemble with my historical best
313	Training and callbacs
194	Idea is to use clustering on images of one type to group data
879	RF for feature selection
694	Count game trainsition
397	Here is the distribution of the maximum value for the remaining features
667	We will also evaluate the position of the data points using the coordinates
692	Making Vocabulary and Text Conversion
695	Visualize by heatmap
821	Plot the obtained tour
289	Correlation Between Price and Other Features
323	China scenario since first entry
574	Padding process and resizing with OpenCV
393	Hit Rate and Charge Distribution
425	Empirical Cumulative Distribution Function Plot
279	Best Selling Products
456	Aggregate Grandchild Data Tables
665	At first , I made Europe future
531	Create DFs imitating public and private test subsets
57	We should give CatBoost names of categorical features
618	Other columns are the digital value of pixels of kannada mnist
646	Fast data loading
864	Relationships betweeen the sets
342	We can finally define the CNN architecture
263	Paths to data and metadata
199	Using DecisionTree Classifier
808	Explore ip counts
322	Comparison between Brazil and Italy
97	Does shipping depends of price
412	Redundant Individual Variables
637	train solved tasks
373	missing value statistics
807	Only a small proportion of clicks were followed by a download
437	Evaluate Best Model from Random Search
303	Preprocessing of features
398	Show Original Image
418	Comparing Model Performance
691	Loading and Visualization of Data
288	Bedrooms Vs Bathrooms Vs Interest Level
814	Calculate extra features for test set
730	Choose the model to use
622	Display the dropped images
173	Set up the folds for cross validation
465	First , we need to put our data into a long format dataframe
581	The filtration step for RGB images may take a lot of time
367	How much does this trust interval change over the real value for kappa
205	Transformations and Data Augmentation
520	load mapping dictionaries
704	process tabular features
187	Display some of similar cars
63	See predicted result with images
386	Draw network graph to see which ingredients are linked together
794	Logistic Regression seems to be a good classification algorithm for this dataset
795	You only have two areas to work on
599	Will need those folders later for storing our jpegs
857	Plot several examples of input images
135	How many images are in each folder
242	Loading the data
384	Ordinal features mapping
311	For the same window we superimpose the masks above the image
380	Import necessary libraries
420	Visualize Tree with No Maximum Depth
623	Creating submission file
260	Checking the Correlation Between The Features for Application Train Dataset
228	Prediction and Submission
334	Most important or common negative words
568	Create fake filepaths dataframe
452	Drop Correlated Variables
321	Now a look at Italy
678	Adding categorical features
126	Showing Confusion Matrices
640	Fast data loading
763	Now , we can downcast numeric columns in the same way
169	FS with the Pearson correlation
737	Choose the model to use
573	Save model and weights
256	Checking the Imbalance of Target Variable
180	Its also builds on kernel functions but is appropriate for unsupervised learning
414	Feature Engineering through Aggregations
460	Aggregate Cash previous loans
266	Hit Rate Bar Chart
873	What should good EDA be capable of
461	Aggregate Credit previous loans
93	Which brands are most expensive
168	Thanks to Automatic FE The main code for basic FE
535	SHAP Interaction Values
854	Predict on test
502	Monthly Credit Data
681	Merge seed for each team
707	Split into train and test sets
48	FVC Progression by SmokingStatus
853	Create Magic features
654	Adding some lag feature
308	Let us plot some bounding boxes right from the dictionary we just created
216	Fitting Logistic Regression with OneVsRest Classifier
882	We can safely store the two types into separate dataframes
782	This parted was taken from the helpful kernel
421	Lets first check the Train Target Distribution
633	Plotting errors for one sample
593	Evaluate training history
72	How many different values does our categorial variables take
193	Visualization of a single batch
156	Create a submission file
296	Bedroom Count Vs Log Error
381	Density plot of numeric features
298	Room Count Vs Log Error
185	How many different cars in train dataset
739	Try to load the latest checkpoint
551	Inspection of created samples , without normalization
446	Random Search on the Full Dataset
480	First we need to format the data and extract the labels
53	Predict submission dates
247	Document Vectors with HashingVectorizer
877	Read and Explore
592	Load and preprocess data
488	Correlations of Aggregated Values with Target
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
98	Can we get some informations out of the item description
162	Plot the Loss Curves
797	Add active column
55	We should split our dataset to create validation and train parts
117	Implementing the SIR model
99	What words do people use
150	Balance the target distribution
132	Training prediction result visualization
127	Divide features into groups
482	Properly Representing Variable Types
379	Save objects for next step
107	Import Required Libraries
575	Pad and resize all the images
21	Importing all Libraries
83	Importation of a entire day data
210	CatBoost Pool and Regression
138	Balance the target distribution
770	BedRoom per family features
387	Remove Extreme Prices
262	analyzing the numerical features disturbion in previous application dataset
627	Blend and smooth for submission
433	We can make the same plot by day of the week
301	Composition of Augmentations
649	Adding some lag feature
368	filtering out outliers
459	Aggregate Installments Data
235	Seting X and Y
65	Create and set up the model
790	the difficuly of training different mask type is different
49	Count occurance of words
209	Data load and process functions
307	So a unique operator will give us the unique filenames that contain ships
645	Replace to Leak data
411	In most cases , the values are very similar
541	load mapping dictionaries
383	High cardinality features
680	Fitting the trend on the yearly time series
538	New Daily Cases
505	Train and validate
875	Now that we have dataset in desired form , i.e
702	process test images
170	FS with SelectFromModel and LinearSVR
189	Define some constants for data location
324	Spain since first recorded case
776	Feature selection using shap
708	Convert an array of values into a dataset matrix
40	Preparing the training data
351	Bookings per day of week
525	Initialize train and test DataFrames to access IDs and depth information
336	and target vector that correspond to the test data size
625	Predict with pure text models
369	using outliers column as labels instead of target column
785	Find Null data
125	Prepare Training Data
447	Bayesian Optimization on the Full Dataset
82	Number of clicks from the IP during the last minute
699	Create Image Augmentation Generator
650	Train model by each meter type
427	Calculate Distance between points using Haversine distance
820	Write a problem file
108	Read the data
331	Full data Analysis
139	Create a Directory Structure
402	Demonstration how it works
274	Lets Read In Data Files
493	An important consideration is the missing values in the dataframe
43	Unique value counts
385	Predict test set and make submission
6	No surprises , since this is all presumably artificial data
416	Machine Learning Modeling
28	Define a Convolutional Neural Network following Yoon Kim model
641	Leak Data loading and concat
227	Encoding Categorical Variable
542	inspect training samples
577	Group and Reduce
772	phone per family features
834	What are Lung Opacities
596	Save model and best hyperparams
64	Split the data into train and validation parts
662	Replace to UCF data
734	Run on test dataset
372	Check if valid data looks all right
501	Monthly Cash Data
41	Training on the complete Dataset now
61	Prepare Testing Data
0	Load the metadata of each file
19	The Shape of the Data
634	Some correlation is indeed present
549	Finding best alpha
225	Square feet size is positively Skewed
603	Focal loss is good for unbalanced datasets , like this one
123	Thanks for the example of ensemling different models from
876	Applying it on text
284	Visualizing Interest Level Vs Price
518	Loading the data
817	Start positions and end positions of selected texts in tokenized source texts
237	Loading the data
261	Merging the bureau dataset along with application train dataset to do more analysis
305	Thx Stackoverflow for realization
643	Adding some lag feature
77	Does standard users download the app
878	Replace infs and imputing missing values by mean
340	Create the embedding layer
350	Predict on test set
434	Test Time Features
486	Putting it all Together
840	Is a program solution
467	The following code repeats this plot for all the of the numeric hyperparameters
426	Rides on Map of NYC
553	Visualize processed samples , resize
333	most important or common positive words
744	Define the number of repetitions for each training example
213	Importing necessary libraries
204	Confusion Matrix for Test Data Predictions
823	Import libraries and data , reduce memory usage
12	Roc AUC curve
741	An example usage
543	inspect validation samples
31	Initialize Mobilenet Face Extractor
479	Now for the next four hyperparameters versus the score
7	Now there appears to be one feature that is not gaussian
607	Reducing Image Size
443	Distribution of all Numeric Hyperparameters
15	Maybe if we used the log plot things would be better
718	CNN Model for multiclass classification
417	The data has no missing values and is scaled between zero and one
432	Explore Time Variables
860	Explore distribution of single variable
90	So , some categories are expensive , but most are cheap
457	Merge with the main dataframe
240	Loading the data
39	Show and save column comparision matrix and save row sets
232	Total Time Stopped
810	Conversions by OS
268	Interpreting ROC Plot
842	Ensure determinism in the results
214	Word map for most frequent Tags
409	Creating Ordinal Variables
825	Stacking models and training
560	and background color definition
26	Load pneumonia locations
764	Check the dataset
871	Let us proceede with further interesting EDA
716	Make a Baseline model
346	Modeling and Prediction
104	Graph Representation of RNA structure
547	This images from validation data seem to be really strange labeled ...
666	There is a gap between them
94	More details on brands with a treemap
119	Compute lags and trends
462	Hyperparameter Tuning Implementation
32	The data is not balanced
206	Converting the Input images to plot using plt
809	Conversions by App
406	Addressing Wrong Labels
792	Null data check
672	Efficient Net Architecture
345	Exploratory Data Analysis
747	Common things for training
788	Prediction with xgboost
428	The test distribution seems to be similar to the training distribution
557	Load Packages and Data
419	Recursive Feature Elimination with Random Forest
454	Categorical Aggregation Function
229	Importing Packages and Collecting Data
455	Combined Aggregation Function
571	Load and freeze DenseNet
523	Prepare for training
371	Non physical data augmentation
701	process training images
773	combination using three features
293	Top Features Selection
499	Function to Calculate Missing Values
113	FS with the Pearson correlation
524	KFold LGB model training
657	Find Best Weight
751	Putting the principles in practice
697	Number of Patients and Images in Training Images Folder
602	Pad and resize all the images
332	Seperating the data into different data frame based on the labels
710	Make prediction and apply invert scaling
148	Create a submission file
867	NaN imputation will be skipped in this tutorial
109	Test Input Pipeline
280	Top Reordered Products
777	Load and preprocess data
620	Validation on real world data
752	Show influence of economical factors on housing prices
515	Define helper functions
275	When Do People Generally Order
278	How many orders users generally made
91	Zoom on the second level
47	FVC Progression by Sex
489	Function for Numeric Aggregations
330	Lets gets started
558	Exploratory Data Analysis
103	Generating Graph Matrices from the Structures
56	Using embedding in NN we can change dimensionality of categorical features
253	Importing The Dataset
570	Create real file paths dataframe
609	Losses and Metrics
92	Prices of the first level of categories
721	Prediction for test
408	Redundant Household Variables
567	Load Model into TPU
375	The following is features with fine hist
338	Import Packages and Functions
588	Build datasets objects
642	FIX Time Zone
201	Confusion Matrix for Test Data Predictions
883	Displaying sample image by host
391	Price Variance in param
453	Numeric Aggregation Function
611	Load Test dataframe
490	Function to Handle Categorical Variables
178	Apply skin segmentation on all training data and visualize the result
186	Display similar cars
142	What is the AUC Score
509	Read the data
845	LOAD DATASET FROM DISK
771	Tabulet per family features
508	Income distribution and target value
726	Visualising the distribution of each product by age by boxplot
20	Visualizing Raw Variables
269	Load data and fit some models
238	Librairies and data
478	Plots of Hyperparameters vs Score
676	Then transform to a datetime object supposing that it is an ordinal datetime
217	Importing Packages and Collecting Data
13	And now we embed each chunk individually
100	Can the length of the description give us some informations
709	Create dataset with look back
500	Function to Aggregate Stats at the Client Level
458	Aggregate previous loans at Home Credit
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
791	Show some examples of different mask
742	Get labels and their countings
758	Data preparation for test
870	That is the size of one test example that we ought to predict
219	Meter Reading and Meter Type
626	Predict with mixed language models
306	Let us read the masks
802	Age distribution of male and female patients
847	The method for training is borrowed from
81	Last click from the IP analysis
149	Create Binary Targets
252	Recurrent Neural Network
874	Reading in the data , as usual
35	The data is not balanced
257	Types Of Features
858	The competition metric relies only on the order of recods ignoring IDs
590	Running the model on a Sample Image
605	Inference on test set
491	Putting the Functions Together
175	Get the dupplicate clicks with different target values
233	Encoding Street Names
831	Disable fastai randomness
236	Which Team Wins And Lost The Most Championships
829	Other special events
819	For neutral samples , use original texts as they are
250	Creating the Model
815	Judge machine learning model
862	Getting Prime Cities
200	Confusion Matrix for Train Data Predictions
354	Interactive booking , click , and percentage of booking trends with Bokeh
410	Per Capita Features
144	Create a Classification Report
476	Score versus Iteration
37	Ability to Detect Face
585	Load model into the TPU
114	FS with SelectFromModel and LinearSVR
17	Do some simple plots for exploration
872	Save some memory
587	Load text data into memory
624	Build the original and translated test data
157	Its also builds on kernel functions but is appropriate for unsupervised learning
527	Define data loading
722	Compare timing for CutMix
621	Drop the blurry image
696	View Single Image
714	Apply invert scaling
255	Identifying Missing Value Present in Application Train Dataset
352	Bookings by year
271	Visualize the feature interaction
166	What is a python generator
630	Pick some frames to display
768	Ratio feature can have infinite values
774	Mix region and education
270	Fit an XGBoost classifier model
276	At What Day Of The Week People Order
52	Train on full data
608	Save results as CSV files
424	Data Exploration and Data Cleaning
60	See how our generator work
42	Data loading and checking
803	Impact of bmi over old and young patients
415	Next we can rename the columns to make it easier to keep track
362	Join all dataframes
673	Dense Added Model
816	Use machine learning model
565	TPU Strategy and other configs
735	Hugging Face pretrained Bert model names
357	Same series of charts but for returns
198	The number of samples in each cluster is the following
155	Define X and y
668	Model Evaluation and Validation
203	Confusion Matrix for Train Data Predictions
474	Align Train and Test Sets
746	Check oversampled dataset
766	roof and electricity
370	Check Unique Label
514	Now predict the result for each toxic level
578	Adding mode as feature
69	Make a simple restart of runtime at this point
435	Try with All Time Variables
562	OSIC training data Example
724	Compare timing for GridMask
601	Create new labels
389	Use Ad Image to Identify Item Category
154	Plot the Training Curves
141	Plot the Training Curves
852	Function which creates final video from list of images
105	Loading the files
66	Counting the metric score
422	Filling missing and infinite data by zeroes
291	Resnext initialize functions
863	NOTE Even tough it is automatic , we can incorporate some manual features
151	Train Test Split
813	Preparing the data
161	Set up the Model Architecture
843	LOAD PROCESSED TRAINING DATA FROM DISK
230	Variable Description , Identification , and Correction
866	Label encoding Making it machine readable
121	Ridge Regression for one country
86	Dealing with color
74	Zoom on this IP
600	Saving as JPEG
222	Primary Use and Meter Reading
475	Distribution of Scores
68	You can state below link to your copy of this MMDetection repo
811	Conversions by Device
844	SAVE DATASET TO DISK
703	process submission images
70	Hist Graph of scores
686	targets in train.csv
231	City and Time features
765	Check null data
176	Display all test images
89	Combine it into a single function
116	Ensembling the solutions and submission
687	These labels are not in train
555	Process train data in parallel
441	Example of Sampling from the Domain
497	Function for KDE Plots of Variable
184	Display a single car with its mask
783	Check the dataset
246	Document Vectors with TfidfVectorizer
326	USA since first case
145	MAKE A TEST SET PREDICTION
106	plotting the scan
837	If you like the content of this notebook , please consider upvoting it
273	Bounded region of parameter space
723	Compare timing for MixUp
638	evaluation solved tasks
732	Run on validation dataset
839	The evaluation method
337	It fills our perfect submission with n randomly distributed random answers i.e
824	Some Feature Engineering
760	Split training set
115	Parameters and LB score visualization
841	Solve the task
183	Here is a plot of sorted category counts
130	My upgrade of parameters
84	The magical function
552	Inspection of created samples , with normalization
753	Dealing with missed variables
378	y hist with defferent timestamps are similar
780	Credit day overdue
128	Showing Confusion Matrices
413	For example , we can divide the years of schooling by the age
534	Distribution of months in train and test
659	Leak Data loading and concat
223	Meter Readings over time
407	Families without Heads of Household
881	Load CSV files
359	Read the csv files on the Johns Hopkins CSSE database on github
675	Construct the graph and plot it
473	Remove Low Importance Features
160	Initialize the generators
729	Make TF record file for test dataset
745	A method to get oversampled training dataset
27	GPU version It is just function verification , not for performance evaluation
23	Defining DataBunch for FastAI
748	Results from my own training
11	Model Validation on train data set
34	Apply Underbalancing Techinique
740	Check saved checkpoints
884	After we impute it , we can observe standard fluctuation
717	Create dataset for training and Validation
131	Code from notebook
95	What are their top categories
669	They are very similar to each other
319	Some сustom Loss functions
470	DFS with Default Primitives
507	Granted applications per number of children
174	Genetic program model , main code loop
483	Plot for a sanity check
598	Load Model into TPU
789	Target , prediction process
644	Train model by each meter type
71	I updated importation for a faster version
496	Function to Calculate Categorical Counts
471	DFS with Selected Aggregation Primitives
396	All Zero Features
849	Add train leak
656	Leak Data Validation
632	This plot shows summarized information about feature impact against shap output
317	removing columns where correlation is high
244	Splitting train into training and validation set
348	Dimensionality Reduction Techniques
309	Let us load one image and its masks
264	Group signals metadata accroding to target
779	Check null data
179	Some stats using jpg exif
444	Evolution of Search
287	Visualizing Interest Level Vs Hour
327	Getting population for each country
399	Start by pivoting the DataFrame to explore the label distribution over slices
762	Divide data into training and validation sets
120	Add country details
606	Interest based on geographical location
689	TPU Strategy and other configs
177	Basic skin detection
182	Manager function to call the create features functions in multiple processes
749	Random Forest model
636	Ploting one sample with the corresponding error as error bars
292	Create final submission DF
329	Calculating the day when the number of infected individuals is max
76	Does bots download the app
684	Sampling the train data since too much data
358	Read the csv files from kaggle
159	Load the pre processed data
796	Get data from
469	Testing Results on Full Data
793	It seems Goblins are a little similar to Ghouls
33	Check Validation Log Loss
664	make hour column from transactionDT
140	Set Up the Generators
800	Predict all country greater than
353	Bookings by month
67	Saving the model
663	what already is known
16	Look at the data types and some basic info about the different columns
495	Function to Aggregate Numeric Data
713	Split into train and test sets
18	Getting to Know the Data
784	Moving average is so simple
320	Replacing Mainland china with just China
218	Variable Description and Identification
239	MERGE , MISSING VALUE , FILL NA
181	Thanks for the example of ensemling different models from
856	You can choose many palettes , which makes the graphs visually nice
405	Exploring Label Distribution
25	Predicting for test data
339	Load and Explore Data
658	Fast data loading
528	Perform check on randomly chosen mask and prediction
614	Comparing various kappa scoring
736	Try the demo model
325	Iran since first case
361	Create dataframe listing the starting date of lockdowns
818	This notebook will deal with positive , negative and neutral samples independently
559	Outlier Analysis and Feature Scaling
540	Gaussian Approximation of Active Cases
45	test prediction by LGBM and feature importance check
498	Function to Convert Data Types
511	Split comments into array of words
188	Display some of similar cars
530	Map extracted timestamps to columns
835	The Definition of Opacity
451	Identify Correlated Variables
838	Composition of functions
472	Visualize Distribution of Correlated Variables
738	Get variables to apply weight decay in AdamW optimizer
869	Train the model , predict , etc
344	Looks like there are no missing values in the dataframe
830	Inspect the data at different time scale
282	Visualizing Distribution Of Price Before and After Removing Outliers
241	MERGE , MISSING VALUE , FILL NA
880	Evaluate the Model
136	Create a Dataframe containing all images
195	Test on the data that is not seen by the network during training
316	Display train and test signals
517	Train the LGBM model
539	Exponential Growth Curves
30	And finally lets look at the class distribution
566	Create Dataset objects
671	Binary Focal Loss
54	Using LabelEncoding we just change string values to numbers
468	Sequence of Search Values
439	The number of leaves on the other hand is a discrete uniform distribution
153	Set Up the Generators
801	Predict all province greater than
516	Predict validation and test set masks
564	A simple function from stack overflow that crops the image
438	Now we can evaluate the baseline model on the testing data
651	Replace to UCF and UCL data
449	Now we want to combine the data without creating any duplicate rows
868	Let us split the variables one more time
294	Dependent variable logerror follows nice normal distribution
693	Making Feature Matrices
258	Analysis Based on EXter Source Types
719	Create Inference Dataset
767	Make new features using continuous feature
211	CatBoost is RAM expensive so I prefer to utilize GPU
639	All train tasks predictions
804	Difference varialbes were created to describe the difference beween maximum and minimum value
24	Unfreeze all layers and find best learning rate
548	Load Model into TPU
249	Keras Tokenizer API
29	Data is still small enough for memory so read to memory using pandas
648	FIX Time Zone
73	What proportion of click generate downloads
725	Data Loading and Cleaning
163	Make a Prediction
759	Convert DCM to PNG
859	Lib and Load data
243	Training the model on CPU
297	Bathroom Count Vs Log Error
655	Train model by each meter type
328	Select the models to run setting bool variables below
781	Credit day prolong
504	Prediction for one image
492	Aggregated Stats of Bureau Balance by Client
822	Made a mask using the tour
315	We can now create a submission file
731	Try to load the latest checkpoint
711	Using all features for model training
10	Text preprosesing source
848	Find final Thresshold
248	Document Vectors with hashing trick
728	Hugging Face pretrained Bert model names
778	Wiki News FastText Embeddings
118	Join data , filter dates and clean missings
688	train valid split
208	Use the images from our validation dataset to check the precdictions
5	Detect and Correct Outliers
586	Create fast tokenizer
580	Plotting some random images to check how cleaning works
786	Predict null data based on statistical method
629	This is a simple modify from
477	Hyperparameters versus Iteration
226	Imputing Missing variable
750	Data transformation and helper functions
613	Reproducing simple baseline
88	Convert each labeled object to Run Line Encoding
698	Number of Patients and Images in Test Images Folder
234	Encoding Cordinal Direction
191	Lets validate the test files
582	Load and process data
705	we add some squared features for some model flexability
78	How many times , each categories of clickers download the app
190	Code from here and below is commented out because the kernel dies
521	add breed mapping
481	Read in Data and Create Smaller Datasets
133	Using my notebook
101	Is there a correlation between description length and price
341	Build the Model
685	targets in labels.csv
812	Conversions by Channel
46	Submission data prediction
612	Infer using trained model
3	Imputations and Data Transformation
382	Let take some small visualizations with these bool features
122	Its also builds on kernel functions but is appropriate for unsupervised learning
310	Now we can read the masks for the specific image
769	Room per family features
440	Complete Bayesian Domain
87	Deriving individual masks for each object
343	Imputing missing values
299	No Of Storeys Vs Log Error
392	Affected Surface Object
616	Result of my new models
129	Code from notebook
423	Submitting our Predictions
775	Remove feature with only one value
855	Loading libraries and data
281	Which item do people put into the cart first
706	Random Search Confidence
798	Predict by Specify Province
653	FIX Time Zone
450	Admit and Correct Mistakes
245	Create Document Vectors
80	Download rate by hour
404	Read in Data and Look at Summary Information
677	Most of the dates overlap
503	Split into training and validation groups
403	Combinations of TTA
556	Process test data in parallel
463	Learning Rate Domain
347	Random Forest Regressor
220	Weekday and Meter Reading
700	Get Tabular Data
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
537	Examining the Growth Curves
754	Starting importance variables evaluation
545	Finally , we are ready to load the whole series into one matrix
464	Grid Search Implementation
196	Newer products or products from newer stores are shorter than the oldest ones
544	inspect datagen output
431	Use More Features
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
604	Create test generator
506	Locating a face within an image
715	These have their kitchen area larger than the total area of the house
743	Define the number of repetitions for each class
727	Distribution of product among different genders
510	Check the typical length of a comment
595	Unhide below to see all trials results
861	We can see above the counts of higher damageDealt smoothly decrease
569	First downsize all the images
572	Creating and Training the Model
610	Training the model
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
374	Exception value processing
591	Inference on Test Set
2	Seems like a very wide range of values , relatively spaking
36	Take a look at predictions
110	Apply Logistic Regression
1	Testing Time Augmentation
576	Load Model into TPU
761	Predictions class distribution
79	Attributed time analysis
124	Parameters and LB score visualization
9	Target varaible distribution
363	Create variables of interest
494	Calculate Information for Testing Data
147	Make a prediction on the test images
277	When Do People Generally Reorder
285	Visuallizing Interest Level Vs Bathroom
22	Seed everything for reproducibility
532	train and test rows fraction intersection
197	Now , the clusters will be created using just the test set
690	Get Model into TPU
259	Analysis based Averages values
442	Learning Rate Distribution
192	Load tabular data and create new features
335	Most important or common words in neutral data
165	Create the submission csv file
448	Standard imports for data science work
850	Add leak to test
215	Featurization of Training Data
674	OUTPUT OF AUGMENTATED IMAGES
436	Visualize Validation Predicted Target
390	Price Variance Within Identified Items
484	Previous Credit and Cash
111	Comparison of the all feature importance diagrams
554	Visualize test processed samples , resize
251	Convolutional Neural Network
395	Correlation with Deal Probability
833	What Does a Normal Image Look Like
112	Thanks to Automatic FE The main code for basic FE
207	Defining our Model
355	expanding the aggregate
58	Prepare Traning Data
290	Main Config Variables
579	Refit and Submit
295	No Of Storey Over The Years
563	Predict Test Set and Submit Result
584	Build datasets objects
755	Best parameters are searched by GridSearchCV on my Laptop
4	Impute any values will significantly affect the RMSE score for test set
44	Unique count of Categorical values
360	Transpose the dataframes
546	Custom LR schedule
832	Load train and test dataframes and add length columns for Description and Name
550	Mismatches on a validation data
561	Add the actors to the renderer , set the background and size
851	Function which creates set of images for each axis
224	Meter Readings over time And Primary Use
304	Text Processing of text data easily
597	Create Dataset objects
314	Prediction on test set
445	Applied to Full Dataset
365	Show one Example of landmark images
619	Check some augmentation effect
364	Compare our forecast with actual evolution both for training and validation sets
533	differences between public and private test
683	Next , we will make prediction with our LR Model
660	Adding some lag feature
85	We can now print the results
615	Relevant attributes of identified objects are stored
300	Gaussian Noise on Target
529	Run length encoding to reduce predictions size
805	Here is a base model without parameter tuning .
172	Load data files
102	Data Info Method
221	Time of Day and Meter Reading
401	Examples of different hemorrhage subtypes
164	Process the Predictions
349	Feature Agglomeration Results
635	Averaging over all instances with standard deviation as errorbar
430	Train with Simple Features
828	Perspective of Time
485	Create Custom Feature Primitives
137	Display a random sample of train images by class
513	Now train the models with a partial fit approach
836	Opacities That Are Not Related to Pneumonia
522	extract different column types
787	Onehot encoding for categorical data
62	Create Testing Generator
376	y的异常值 drop samples which have exception value in y
75	What proportion of IP download the app
661	Train model by each meter type
96	What are the most expensive items
286	Visualizing Interest Level Vs Bedrooms
272	Visualize the default split and gains for all models
167	How to make a generator run infinitely
826	cut down features to avoid the kernel die
536	Get important features according to SHAP
756	Set Model for prediction
526	Set data loading parameters
