261	Merging the bureau dataset along with application train dataset to do more analysis
677	Most of the dates overlap
503	Split into training and validation groups
544	inspect datagen output
317	removing columns where correlation is high
269	Load data and fit some models
499	Function to Calculate Missing Values
31	Initialize Mobilenet Face Extractor
728	Hugging Face pretrained Bert model names
848	Find final Thresshold
857	Plot several examples of input images
443	Distribution of all Numeric Hyperparameters
877	Read and Explore
619	Check some augmentation effect
84	The magical function
652	Fast data loading
195	Test on the data that is not seen by the network during training
518	Loading the data
428	The test distribution seems to be similar to the training distribution
204	Confusion Matrix for Test Data Predictions
355	expanding the aggregate
315	We can now create a submission file
111	Comparison of the all feature importance diagrams
129	Code from notebook
765	Check null data
483	Plot for a sanity check
58	Prepare Traning Data
642	FIX Time Zone
450	Admit and Correct Mistakes
155	Define X and y
709	Create dataset with look back
205	Transformations and Data Augmentation
191	Lets validate the test files
290	Main Config Variables
708	Convert an array of values into a dataset matrix
308	Let us plot some bounding boxes right from the dictionary we just created
872	Save some memory
678	Adding categorical features
357	Same series of charts but for returns
341	Build the Model
53	Predict submission dates
706	Random Search Confidence
199	Using DecisionTree Classifier
196	Newer products or products from newer stores are shorter than the oldest ones
809	Conversions by App
729	Make TF record file for test dataset
759	Convert DCM to PNG
132	Training prediction result visualization
799	Predict by Specify Country
375	The following is features with fine hist
322	Comparison between Brazil and Italy
564	A simple function from stack overflow that crops the image
876	Applying it on text
377	Divide the test set and the training set
413	For example , we can divide the years of schooling by the age
105	Loading the files
606	Interest based on geographical location
644	Train model by each meter type
514	Now predict the result for each toxic level
323	China scenario since first entry
311	For the same window we superimpose the masks above the image
565	TPU Strategy and other configs
96	What are the most expensive items
104	Graph Representation of RNA structure
93	Which brands are most expensive
598	Load Model into TPU
306	Let us read the masks
4	Impute any values will significantly affect the RMSE score for test set
637	train solved tasks
2	Seems like a very wide range of values , relatively spaking
326	USA since first case
721	Prediction for test
76	Does bots download the app
668	Model Evaluation and Validation
81	Last click from the IP analysis
120	Add country details
477	Hyperparameters versus Iteration
700	Get Tabular Data
85	We can now print the results
43	Unique value counts
424	Data Exploration and Data Cleaning
381	Density plot of numeric features
382	Let take some small visualizations with these bool features
480	First we need to format the data and extract the labels
160	Initialize the generators
866	Label encoding Making it machine readable
8	Read data set
482	Properly Representing Variable Types
110	Apply Logistic Regression
874	Reading in the data , as usual
74	Zoom on this IP
118	Join data , filter dates and clean missings
371	Non physical data augmentation
753	Dealing with missed variables
465	First , we need to put our data into a long format dataframe
576	Load Model into TPU
296	Bedroom Count Vs Log Error
156	Create a submission file
617	Import the modules
158	Thanks for the example of ensemling different models from
141	Plot the Training Curves
208	Use the images from our validation dataset to check the precdictions
435	Try with All Time Variables
884	After we impute it , we can observe standard fluctuation
694	Count game trainsition
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
542	inspect training samples
620	Validation on real world data
574	Padding process and resizing with OpenCV
819	For neutral samples , use original texts as they are
535	SHAP Interaction Values
392	Affected Surface Object
433	We can make the same plot by day of the week
201	Confusion Matrix for Test Data Predictions
249	Keras Tokenizer API
466	Distribution of Search Values
352	Bookings by year
144	Create a Classification Report
560	and background color definition
464	Grid Search Implementation
161	Set up the Model Architecture
801	Predict all province greater than
163	Make a Prediction
862	Getting Prime Cities
125	Prepare Training Data
332	Seperating the data into different data frame based on the labels
778	Wiki News FastText Embeddings
818	This notebook will deal with positive , negative and neutral samples independently
177	Basic skin detection
775	Remove feature with only one value
32	The data is not balanced
545	Finally , we are ready to load the whole series into one matrix
190	Code from here and below is commented out because the kernel dies
246	Document Vectors with TfidfVectorizer
469	Testing Results on Full Data
171	FS with SelectFromModel and RandomForestRegressor
337	It fills our perfect submission with n randomly distributed random answers i.e
316	Display train and test signals
614	Comparing various kappa scoring
395	Correlation with Deal Probability
811	Conversions by Device
333	most important or common positive words
610	Training the model
517	Train the LGBM model
334	Most important or common negative words
831	Disable fastai randomness
863	NOTE Even tough it is automatic , we can incorporate some manual features
396	All Zero Features
838	Composition of functions
143	Create a Confusion Matrix
361	Create dataframe listing the starting date of lockdowns
763	Now , we can downcast numeric columns in the same way
622	Display the dropped images
699	Create Image Augmentation Generator
459	Aggregate Installments Data
777	Load and preprocess data
95	What are their top categories
378	y hist with defferent timestamps are similar
661	Train model by each meter type
649	Adding some lag feature
561	Add the actors to the renderer , set the background and size
285	Visuallizing Interest Level Vs Bathroom
189	Define some constants for data location
858	The competition metric relies only on the order of recods ignoring IDs
445	Applied to Full Dataset
760	Split training set
42	Data loading and checking
629	This is a simple modify from
505	Train and validate
473	Remove Low Importance Features
387	Remove Extreme Prices
553	Visualize processed samples , resize
300	Gaussian Noise on Target
769	Room per family features
643	Adding some lag feature
488	Correlations of Aggregated Values with Target
421	Lets first check the Train Target Distribution
256	Checking the Imbalance of Target Variable
478	Plots of Hyperparameters vs Score
563	Predict Test Set and Submit Result
235	Seting X and Y
21	Importing all Libraries
320	Replacing Mainland china with just China
71	I updated importation for a faster version
139	Create a Directory Structure
24	Unfreeze all layers and find best learning rate
92	Prices of the first level of categories
106	plotting the scan
747	Common things for training
145	MAKE A TEST SET PREDICTION
855	Loading libraries and data
116	Ensembling the solutions and submission
718	CNN Model for multiclass classification
787	Onehot encoding for categorical data
794	Logistic Regression seems to be a good classification algorithm for this dataset
689	TPU Strategy and other configs
660	Adding some lag feature
841	Solve the task
703	process submission images
745	A method to get oversampled training dataset
176	Display all test images
538	New Daily Cases
164	Process the Predictions
597	Create Dataset objects
327	Getting population for each country
870	That is the size of one test example that we ought to predict
202	Using RandomForest Classifier
272	Visualize the default split and gains for all models
60	See how our generator work
297	Bathroom Count Vs Log Error
107	Import Required Libraries
613	Reproducing simple baseline
846	The mean of the two is used as the final embedding matrix
562	OSIC training data Example
879	RF for feature selection
414	Feature Engineering through Aggregations
50	All contraction are known
493	An important consideration is the missing values in the dataframe
515	Define helper functions
167	How to make a generator run infinitely
61	Prepare Testing Data
832	Load train and test dataframes and add length columns for Description and Name
680	Fitting the trend on the yearly time series
770	BedRoom per family features
338	Import Packages and Functions
510	Check the typical length of a comment
537	Examining the Growth Curves
813	Preparing the data
138	Balance the target distribution
842	Ensure determinism in the results
280	Top Reordered Products
752	Show influence of economical factors on housing prices
525	Initialize train and test DataFrames to access IDs and depth information
45	test prediction by LGBM and feature importance check
623	Creating submission file
197	Now , the clusters will be created using just the test set
543	inspect validation samples
621	Drop the blurry image
266	Hit Rate Bar Chart
451	Identify Correlated Variables
470	DFS with Default Primitives
735	Hugging Face pretrained Bert model names
820	Write a problem file
771	Tabulet per family features
690	Get Model into TPU
336	and target vector that correspond to the test data size
343	Imputing missing values
840	Is a program solution
288	Bedrooms Vs Bathrooms Vs Interest Level
122	Its also builds on kernel functions but is appropriate for unsupervised learning
509	Read the data
659	Leak Data loading and concat
192	Load tabular data and create new features
241	MERGE , MISSING VALUE , FILL NA
796	Get data from
489	Function for Numeric Aggregations
263	Paths to data and metadata
321	Now a look at Italy
150	Balance the target distribution
768	Ratio feature can have infinite values
33	Check Validation Log Loss
168	Thanks to Automatic FE The main code for basic FE
410	Per Capita Features
570	Create real file paths dataframe
551	Inspection of created samples , without normalization
790	the difficuly of training different mask type is different
0	Load the metadata of each file
844	SAVE DATASET TO DISK
282	Visualizing Distribution Of Price Before and After Removing Outliers
715	These have their kitchen area larger than the total area of the house
697	Number of Patients and Images in Training Images Folder
625	Predict with pure text models
867	NaN imputation will be skipped in this tutorial
582	Load and process data
19	The Shape of the Data
476	Score versus Iteration
250	Creating the Model
373	missing value statistics
827	At the scale of stores
852	Function which creates final video from list of images
683	Next , we will make prediction with our LR Model
200	Confusion Matrix for Train Data Predictions
65	Create and set up the model
638	evaluation solved tasks
30	And finally lets look at the class distribution
181	Thanks for the example of ensemling different models from
162	Plot the Loss Curves
312	Train a simple CNN architecture
83	Importation of a entire day data
585	Load model into the TPU
441	Example of Sampling from the Domain
696	View Single Image
82	Number of clicks from the IP during the last minute
412	Redundant Individual Variables
701	process training images
233	Encoding Street Names
662	Replace to UCF data
173	Set up the folds for cross validation
376	y的异常值 drop samples which have exception value in y
408	Redundant Household Variables
676	Then transform to a datetime object supposing that it is an ordinal datetime
209	Data load and process functions
754	Starting importance variables evaluation
534	Distribution of months in train and test
37	Ability to Detect Face
669	They are very similar to each other
653	FIX Time Zone
430	Train with Simple Features
829	Other special events
456	Aggregate Grandchild Data Tables
401	Examples of different hemorrhage subtypes
513	Now train the models with a partial fit approach
471	DFS with Selected Aggregation Primitives
69	Make a simple restart of runtime at this point
467	The following code repeats this plot for all the of the numeric hyperparameters
474	Align Train and Test Sets
833	What Does a Normal Image Look Like
253	Importing The Dataset
383	High cardinality features
418	Comparing Model Performance
146	Set up the generator
274	Lets Read In Data Files
618	Other columns are the digital value of pixels of kannada mnist
179	Some stats using jpg exif
345	Exploratory Data Analysis
635	Averaging over all instances with standard deviation as errorbar
868	Let us split the variables one more time
27	GPU version It is just function verification , not for performance evaluation
188	Display some of similar cars
605	Inference on test set
720	Define dataset and model
298	Room Count Vs Log Error
356	a quick check if demand distribution changes week to week
817	Start positions and end positions of selected texts in tokenized source texts
130	My upgrade of parameters
800	Predict all country greater than
808	Explore ip counts
458	Aggregate previous loans at Home Credit
109	Test Input Pipeline
18	Getting to Know the Data
578	Adding mode as feature
178	Apply skin segmentation on all training data and visualize the result
569	First downsize all the images
506	Locating a face within an image
193	Visualization of a single batch
577	Group and Reduce
175	Get the dupplicate clicks with different target values
206	Converting the Input images to plot using plt
746	Check oversampled dataset
230	Variable Description , Identification , and Correction
881	Load CSV files
524	KFold LGB model training
386	Draw network graph to see which ingredients are linked together
647	Leak Data loading and concat
275	When Do People Generally Order
114	FS with SelectFromModel and LinearSVR
184	Display a single car with its mask
532	train and test rows fraction intersection
88	Convert each labeled object to Run Line Encoding
710	Make prediction and apply invert scaling
568	Create fake filepaths dataframe
142	What is the AUC Score
523	Prepare for training
309	Let us load one image and its masks
299	No Of Storeys Vs Log Error
725	Data Loading and Cleaning
243	Training the model on CPU
420	Visualize Tree with No Maximum Depth
292	Create final submission DF
786	Predict null data based on statistical method
627	Blend and smooth for submission
149	Create Binary Targets
102	Data Info Method
512	Choose and train a classifier
319	Some сustom Loss functions
664	make hour column from transactionDT
108	Read the data
756	Set Model for prediction
639	All train tasks predictions
596	Save model and best hyperparams
231	City and Time features
291	Resnext initialize functions
853	Create Magic features
836	Opacities That Are Not Related to Pneumonia
590	Running the model on a Sample Image
791	Show some examples of different mask
636	Ploting one sample with the corresponding error as error bars
393	Hit Rate and Charge Distribution
783	Check the dataset
631	Split Trian and Valid
802	Age distribution of male and female patients
798	Predict by Specify Province
13	And now we embed each chunk individually
16	Look at the data types and some basic info about the different columns
571	Load and freeze DenseNet
416	Machine Learning Modeling
365	Show one Example of landmark images
49	Count occurance of words
210	CatBoost Pool and Regression
552	Inspection of created samples , with normalization
547	This images from validation data seem to be really strange labeled ...
788	Prediction with xgboost
675	Construct the graph and plot it
651	Replace to UCF and UCL data
257	Types Of Features
169	FS with the Pearson correlation
29	Data is still small enough for memory so read to memory using pandas
487	Kernel Density Estimate Plots
750	Data transformation and helper functions
671	Binary Focal Loss
238	Librairies and data
583	Load text data into memory
370	Check Unique Label
10	Text preprosesing source
1	Testing Time Augmentation
530	Map extracted timestamps to columns
113	FS with the Pearson correlation
72	How many different values does our categorial variables take
600	Saving as JPEG
442	Learning Rate Distribution
366	Data Exploration The label distribution shows clear label imbalance
286	Visualizing Interest Level Vs Bedrooms
766	roof and electricity
26	Load pneumonia locations
648	FIX Time Zone
25	Predicting for test data
795	You only have two areas to work on
485	Create Custom Feature Primitives
869	Train the model , predict , etc
273	Bounded region of parameter space
722	Compare timing for CutMix
224	Meter Readings over time And Primary Use
448	Standard imports for data science work
362	Join all dataframes
186	Display similar cars
307	So a unique operator will give us the unique filenames that contain ships
339	Load and Explore Data
136	Create a Dataframe containing all images
59	See sample image
504	Prediction for one image
301	Composition of Augmentations
830	Inspect the data at different time scale
40	Preparing the training data
278	How many orders users generally made
187	Display some of similar cars
599	Will need those folders later for storing our jpegs
56	Using embedding in NN we can change dimensionality of categorical features
739	Try to load the latest checkpoint
616	Result of my new models
262	analyzing the numerical features disturbion in previous application dataset
259	Analysis based Averages values
389	Use Ad Image to Identify Item Category
406	Addressing Wrong Labels
391	Price Variance in param
67	Saving the model
736	Try the demo model
500	Function to Aggregate Stats at the Client Level
77	Does standard users download the app
360	Transpose the dataframes
460	Aggregate Cash previous loans
663	what already is known
180	Its also builds on kernel functions but is appropriate for unsupervised learning
423	Submitting our Predictions
101	Is there a correlation between description length and price
220	Weekday and Meter Reading
531	Create DFs imitating public and private test subsets
496	Function to Calculate Categorical Counts
834	What are Lung Opacities
23	Defining DataBunch for FastAI
824	Some Feature Engineering
742	Get labels and their countings
73	What proportion of click generate downloads
632	This plot shows summarized information about feature impact against shap output
698	Number of Patients and Images in Test Images Folder
667	We will also evaluate the position of the data points using the coordinates
685	targets in labels.csv
331	Full data Analysis
48	FVC Progression by SmokingStatus
851	Function which creates set of images for each axis
35	The data is not balanced
79	Attributed time analysis
66	Counting the metric score
304	Text Processing of text data easily
449	Now we want to combine the data without creating any duplicate rows
693	Making Feature Matrices
555	Process train data in parallel
12	Roc AUC curve
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
5	Detect and Correct Outliers
498	Function to Convert Data Types
405	Exploring Label Distribution
490	Function to Handle Categorical Variables
455	Combined Aggregation Function
372	Check if valid data looks all right
495	Function to Aggregate Numeric Data
640	Fast data loading
112	Thanks to Automatic FE The main code for basic FE
137	Display a random sample of train images by class
843	LOAD PROCESSED TRAINING DATA FROM DISK
447	Bayesian Optimization on the Full Dataset
289	Correlation Between Price and Other Features
575	Pad and resize all the images
475	Distribution of Scores
211	CatBoost is RAM expensive so I prefer to utilize GPU
793	It seems Goblins are a little similar to Ghouls
119	Compute lags and trends
804	Difference varialbes were created to describe the difference beween maximum and minimum value
417	The data has no missing values and is scaled between zero and one
705	we add some squared features for some model flexability
268	Interpreting ROC Plot
566	Create Dataset objects
645	Replace to Leak data
780	Credit day overdue
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
615	Relevant attributes of identified objects are stored
165	Create the submission csv file
520	load mapping dictionaries
11	Model Validation on train data set
764	Check the dataset
419	Recursive Feature Elimination with Random Forest
368	filtering out outliers
41	Training on the complete Dataset now
194	Idea is to use clustering on images of one type to group data
608	Save results as CSV files
730	Choose the model to use
221	Time of Day and Meter Reading
103	Generating Graph Matrices from the Structures
399	Start by pivoting the DataFrame to explore the label distribution over slices
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
281	Which item do people put into the cart first
133	Using my notebook
128	Showing Confusion Matrices
773	combination using three features
856	You can choose many palettes , which makes the graphs visually nice
789	Target , prediction process
52	Train on full data
864	Relationships betweeen the sets
732	Run on validation dataset
242	Loading the data
213	Importing necessary libraries
239	MERGE , MISSING VALUE , FILL NA
453	Numeric Aggregation Function
580	Plotting some random images to check how cleaning works
100	Can the length of the description give us some informations
245	Create Document Vectors
166	What is a python generator
78	How many times , each categories of clickers download the app
411	In most cases , the values are very similar
650	Train model by each meter type
454	Categorical Aggregation Function
431	Use More Features
558	Exploratory Data Analysis
248	Document Vectors with hashing trick
528	Perform check on randomly chosen mask and prediction
75	What proportion of IP download the app
9	Target varaible distribution
353	Bookings by month
154	Plot the Training Curves
434	Test Time Features
603	Focal loss is good for unbalanced datasets , like this one
491	Putting the Functions Together
34	Apply Underbalancing Techinique
772	phone per family features
522	extract different column types
314	Prediction on test set
593	Evaluate training history
86	Dealing with color
479	Now for the next four hyperparameters versus the score
727	Distribution of product among different genders
439	The number of leaves on the other hand is a discrete uniform distribution
39	Show and save column comparision matrix and save row sets
781	Credit day prolong
686	targets in train.csv
714	Apply invert scaling
121	Ridge Regression for one country
835	The Definition of Opacity
225	Square feet size is positively Skewed
244	Splitting train into training and validation set
713	Split into train and test sets
587	Load text data into memory
502	Monthly Credit Data
784	Moving average is so simple
774	Mix region and education
850	Add leak to test
6	No surprises , since this is all presumably artificial data
743	Define the number of repetitions for each class
151	Train Test Split
726	Visualising the distribution of each product by age by boxplot
695	Visualize by heatmap
816	Use machine learning model
131	Code from notebook
758	Data preparation for test
117	Implementing the SIR model
692	Making Vocabulary and Text Conversion
279	Best Selling Products
882	We can safely store the two types into separate dataframes
348	Dimensionality Reduction Techniques
203	Confusion Matrix for Train Data Predictions
740	Check saved checkpoints
3	Imputations and Data Transformation
529	Run length encoding to reduce predictions size
55	We should split our dataset to create validation and train parts
825	Stacking models and training
497	Function for KDE Plots of Variable
837	If you like the content of this notebook , please consider upvoting it
354	Interactive booking , click , and percentage of booking trends with Bokeh
880	Evaluate the Model
422	Filling missing and infinite data by zeroes
674	OUTPUT OF AUGMENTATED IMAGES
481	Read in Data and Create Smaller Datasets
878	Replace infs and imputing missing values by mean
633	Plotting errors for one sample
94	More details on brands with a treemap
719	Create Inference Dataset
556	Process test data in parallel
785	Find Null data
751	Putting the principles in practice
432	Explore Time Variables
350	Predict on test set
305	Thx Stackoverflow for realization
318	Trivial segmentation stuff
127	Divide features into groups
397	Here is the distribution of the maximum value for the remaining features
409	Creating Ordinal Variables
123	Thanks for the example of ensemling different models from
148	Create a submission file
217	Importing Packages and Collecting Data
46	Submission data prediction
15	Maybe if we used the log plot things would be better
446	Random Search on the Full Dataset
540	Gaussian Approximation of Active Cases
363	Create variables of interest
260	Checking the Correlation Between The Features for Application Train Dataset
586	Create fast tokenizer
611	Load Test dataframe
782	This parted was taken from the helpful kernel
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
218	Variable Description and Identification
658	Fast data loading
557	Load Packages and Data
484	Previous Credit and Cash
344	Looks like there are no missing values in the dataframe
592	Load and preprocess data
516	Predict validation and test set masks
865	Feature primitives Basically which functions are we going to use to create features
227	Encoding Categorical Variable
463	Learning Rate Domain
7	Now there appears to be one feature that is not gaussian
461	Aggregate Credit previous loans
731	Try to load the latest checkpoint
755	Best parameters are searched by GridSearchCV on my Laptop
277	When Do People Generally Reorder
284	Visualizing Interest Level Vs Price
385	Predict test set and make submission
57	We should give CatBoost names of categorical features
303	Preprocessing of features
757	Test data preparation
124	Parameters and LB score visualization
805	Here is a base model without parameter tuning .
340	Create the embedding layer
134	Using my notebook
734	Run on test dataset
738	Get variables to apply weight decay in AdamW optimizer
654	Adding some lag feature
670	Importing Library Files
374	Exception value processing
380	Import necessary libraries
402	Demonstration how it works
28	Define a Convolutional Neural Network following Yoon Kim model
44	Unique count of Categorical values
602	Pad and resize all the images
62	Create Testing Generator
761	Predictions class distribution
601	Create new labels
859	Lib and Load data
440	Complete Bayesian Domain
567	Load Model into TPU
672	Efficient Net Architecture
264	Group signals metadata accroding to target
641	Leak Data loading and concat
287	Visualizing Interest Level Vs Hour
588	Build datasets objects
70	Hist Graph of scores
214	Word map for most frequent Tags
369	using outliers column as labels instead of target column
624	Build the original and translated test data
717	Create dataset for training and Validation
251	Convolutional Neural Network
584	Build datasets objects
80	Download rate by hour
810	Conversions by OS
183	Here is a plot of sorted category counts
207	Defining our Model
527	Define data loading
159	Load the pre processed data
219	Meter Reading and Meter Type
216	Fitting Logistic Regression with OneVsRest Classifier
237	Loading the data
704	process tabular features
325	Iran since first case
63	See predicted result with images
390	Price Variance Within Identified Items
548	Load Model into TPU
347	Random Forest Regressor
749	Random Forest model
367	How much does this trust interval change over the real value for kappa
657	Find Best Weight
436	Visualize Validation Predicted Target
236	Which Team Wins And Lost The Most Championships
549	Finding best alpha
403	Combinations of TTA
723	Compare timing for MixUp
351	Bookings per day of week
234	Encoding Cordinal Direction
255	Identifying Missing Value Present in Application Train Dataset
89	Combine it into a single function
673	Dense Added Model
861	We can see above the counts of higher damageDealt smoothly decrease
849	Add train leak
182	Manager function to call the create features functions in multiple processes
147	Make a prediction on the test images
812	Conversions by Channel
681	Merge seed for each team
313	Training and callbacs
666	There is a gap between them
589	Load model into the TPU
875	Now that we have dataset in desired form , i.e
711	Using all features for model training
628	Ensemble with my historical best
302	Loading and preprocessing data
546	Custom LR schedule
707	Split into train and test sets
22	Seed everything for reproducibility
712	Function to convert series to supervised learning
388	A good item price binning should be based on the price distribution
394	Initial Position and Momentum
294	Dependent variable logerror follows nice normal distribution
797	Add active column
115	Parameters and LB score visualization
215	Featurization of Training Data
20	Visualizing Raw Variables
854	Predict on test
507	Granted applications per number of children
17	Do some simple plots for exploration
526	Set data loading parameters
815	Judge machine learning model
425	Empirical Cumulative Distribution Function Plot
222	Primary Use and Meter Reading
271	Visualize the feature interaction
68	You can state below link to your copy of this MMDetection repo
426	Rides on Map of NYC
87	Deriving individual masks for each object
630	Pick some frames to display
724	Compare timing for GridMask
573	Save model and weights
97	Does shipping depends of price
779	Check null data
508	Income distribution and target value
379	Save objects for next step
293	Top Features Selection
349	Feature Agglomeration Results
437	Evaluate Best Model from Random Search
228	Prediction and Submission
733	Get metrics for validation dataset
684	Sampling the train data since too much data
364	Compare our forecast with actual evolution both for training and validation sets
595	Unhide below to see all trials results
748	Results from my own training
384	Ordinal features mapping
64	Split the data into train and validation parts
604	Create test generator
324	Spain since first recorded case
232	Total Time Stopped
521	add breed mapping
883	Displaying sample image by host
398	Show Original Image
821	Plot the obtained tour
665	At first , I made Europe future
126	Showing Confusion Matrices
847	The method for training is borrowed from
270	Fit an XGBoost classifier model
415	Next we can rename the columns to make it easier to keep track
47	FVC Progression by Sex
572	Creating and Training the Model
737	Choose the model to use
226	Imputing Missing variable
839	The evaluation method
198	The number of samples in each cluster is the following
346	Modeling and Prediction
607	Reducing Image Size
359	Read the csv files on the Johns Hopkins CSSE database on github
457	Merge with the main dataframe
462	Hyperparameter Tuning Implementation
702	process test images
873	What should good EDA be capable of
688	train valid split
283	Visualizing Outliers In Data
591	Inference on Test Set
501	Monthly Cash Data
335	Most important or common words in neutral data
407	Families without Heads of Household
36	Take a look at predictions
329	Calculating the day when the number of infected individuals is max
687	These labels are not in train
185	How many different cars in train dataset
342	We can finally define the CNN architecture
803	Impact of bmi over old and young patients
438	Now we can evaluate the baseline model on the testing data
822	Made a mask using the tour
533	differences between public and private test
174	Genetic program model , main code loop
223	Meter Readings over time
871	Let us proceede with further interesting EDA
826	cut down features to avoid the kernel die
806	this graph is adapted from
157	Its also builds on kernel functions but is appropriate for unsupervised learning
691	Loading and Visualization of Data
767	Make new features using continuous feature
845	LOAD DATASET FROM DISK
492	Aggregated Stats of Bureau Balance by Client
807	Only a small proportion of clicks were followed by a download
427	Calculate Distance between points using Haversine distance
579	Refit and Submit
98	Can we get some informations out of the item description
823	Import libraries and data , reduce memory usage
54	Using LabelEncoding we just change string values to numbers
90	So , some categories are expensive , but most are cheap
646	Fast data loading
140	Set Up the Generators
452	Drop Correlated Variables
860	Explore distribution of single variable
310	Now we can read the masks for the specific image
472	Visualize Distribution of Correlated Variables
38	Loading data etc
258	Analysis Based on EXter Source Types
594	Load and preprocess data
295	No Of Storey Over The Years
559	Outlier Analysis and Feature Scaling
741	An example usage
634	Some correlation is indeed present
536	Get important features according to SHAP
328	Select the models to run setting bool variables below
404	Read in Data and Look at Summary Information
254	Function for find out Numerical and categeical Variables
429	Create Training and Validation Set
828	Perspective of Time
550	Mismatches on a validation data
444	Evolution of Search
252	Recurrent Neural Network
682	Train Our Linear Regression Model
494	Calculate Information for Testing Data
554	Visualize test processed samples , resize
330	Lets gets started
135	How many images are in each folder
240	Loading the data
358	Read the csv files from kaggle
581	The filtration step for RGB images may take a lot of time
716	Make a Baseline model
172	Load data files
776	Feature selection using shap
655	Train model by each meter type
519	and batch aggregations examples for the rest of the tables ..
265	Apply reduction on some samples and visualize the results
99	What words do people use
744	Define the number of repetitions for each training example
153	Set Up the Generators
679	Rolling monthly and yearly store means
91	Zoom on the second level
656	Leak Data Validation
486	Putting it all Together
762	Divide data into training and validation sets
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
626	Predict with mixed language models
612	Infer using trained model
539	Exponential Growth Curves
792	Null data check
609	Losses and Metrics
468	Sequence of Search Values
814	Calculate extra features for test set
229	Importing Packages and Collecting Data
541	load mapping dictionaries
247	Document Vectors with HashingVectorizer
511	Split comments into array of words
276	At What Day Of The Week People Order
170	FS with SelectFromModel and LinearSVR
