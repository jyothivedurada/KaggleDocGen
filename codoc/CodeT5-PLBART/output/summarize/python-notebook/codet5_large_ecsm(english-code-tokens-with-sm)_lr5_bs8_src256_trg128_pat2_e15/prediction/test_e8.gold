197	Now , the clusters will be created using just the test set
623	Creating submission file
80	Download rate by hour
865	Feature primitives Basically which functions are we going to use to create features
325	Iran since first case
38	Loading data etc
787	Onehot encoding for categorical data
818	This notebook will deal with positive , negative and neutral samples independently
463	Learning Rate Domain
576	Load Model into TPU
67	Saving the model
209	Data load and process functions
0	Load the metadata of each file
401	Examples of different hemorrhage subtypes
611	Load Test dataframe
300	Gaussian Noise on Target
137	Display a random sample of train images by class
324	Spain since first recorded case
721	Prediction for test
371	Non physical data augmentation
368	filtering out outliers
591	Inference on Test Set
769	Room per family features
421	Lets first check the Train Target Distribution
795	You only have two areas to work on
644	Train model by each meter type
320	Replacing Mainland china with just China
708	Convert an array of values into a dataset matrix
119	Compute lags and trends
124	Parameters and LB score visualization
151	Train Test Split
100	Can the length of the description give us some informations
369	using outliers column as labels instead of target column
884	After we impute it , we can observe standard fluctuation
599	Will need those folders later for storing our jpegs
691	Loading and Visualization of Data
240	Loading the data
45	test prediction by LGBM and feature importance check
630	Pick some frames to display
88	Convert each labeled object to Run Line Encoding
216	Fitting Logistic Regression with OneVsRest Classifier
408	Redundant Household Variables
390	Price Variance Within Identified Items
780	Credit day overdue
62	Create Testing Generator
357	Same series of charts but for returns
546	Custom LR schedule
472	Visualize Distribution of Correlated Variables
652	Fast data loading
385	Predict test set and make submission
786	Predict null data based on statistical method
321	Now a look at Italy
23	Defining DataBunch for FastAI
466	Distribution of Search Values
122	Its also builds on kernel functions but is appropriate for unsupervised learning
189	Define some constants for data location
92	Prices of the first level of categories
456	Aggregate Grandchild Data Tables
642	FIX Time Zone
444	Evolution of Search
362	Join all dataframes
282	Visualizing Distribution Of Price Before and After Removing Outliers
742	Get labels and their countings
203	Confusion Matrix for Train Data Predictions
239	MERGE , MISSING VALUE , FILL NA
469	Testing Results on Full Data
85	We can now print the results
744	Define the number of repetitions for each training example
796	Get data from
755	Best parameters are searched by GridSearchCV on my Laptop
668	Model Evaluation and Validation
872	Save some memory
132	Training prediction result visualization
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
363	Create variables of interest
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
293	Top Features Selection
135	How many images are in each folder
206	Converting the Input images to plot using plt
629	This is a simple modify from
520	load mapping dictionaries
747	Common things for training
482	Properly Representing Variable Types
763	Now , we can downcast numeric columns in the same way
478	Plots of Hyperparameters vs Score
632	This plot shows summarized information about feature impact against shap output
826	cut down features to avoid the kernel die
597	Create Dataset objects
519	and batch aggregations examples for the rest of the tables ..
35	The data is not balanced
490	Function to Handle Categorical Variables
484	Previous Credit and Cash
93	Which brands are most expensive
647	Leak Data loading and concat
182	Manager function to call the create features functions in multiple processes
232	Total Time Stopped
741	An example usage
705	we add some squared features for some model flexability
440	Complete Bayesian Domain
617	Import the modules
700	Get Tabular Data
662	Replace to UCF data
399	Start by pivoting the DataFrame to explore the label distribution over slices
19	The Shape of the Data
384	Ordinal features mapping
798	Predict by Specify Province
851	Function which creates set of images for each axis
804	Difference varialbes were created to describe the difference beween maximum and minimum value
813	Preparing the data
433	We can make the same plot by day of the week
12	Roc AUC curve
211	CatBoost is RAM expensive so I prefer to utilize GPU
846	The mean of the two is used as the final embedding matrix
603	Focal loss is good for unbalanced datasets , like this one
90	So , some categories are expensive , but most are cheap
235	Seting X and Y
808	Explore ip counts
738	Get variables to apply weight decay in AdamW optimizer
249	Keras Tokenizer API
595	Unhide below to see all trials results
527	Define data loading
32	The data is not balanced
567	Load Model into TPU
426	Rides on Map of NYC
388	A good item price binning should be based on the price distribution
521	add breed mapping
309	Let us load one image and its masks
44	Unique count of Categorical values
173	Set up the folds for cross validation
337	It fills our perfect submission with n randomly distributed random answers i.e
841	Solve the task
859	Lib and Load data
120	Add country details
628	Ensemble with my historical best
553	Visualize processed samples , resize
47	FVC Progression by Sex
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
450	Admit and Correct Mistakes
110	Apply Logistic Regression
251	Convolutional Neural Network
516	Predict validation and test set masks
373	missing value statistics
76	Does bots download the app
409	Creating Ordinal Variables
291	Resnext initialize functions
454	Categorical Aggregation Function
398	Show Original Image
427	Calculate Distance between points using Haversine distance
333	most important or common positive words
199	Using DecisionTree Classifier
845	LOAD DATASET FROM DISK
106	plotting the scan
754	Starting importance variables evaluation
268	Interpreting ROC Plot
590	Running the model on a Sample Image
201	Confusion Matrix for Test Data Predictions
759	Convert DCM to PNG
114	FS with SelectFromModel and LinearSVR
869	Train the model , predict , etc
133	Using my notebook
633	Plotting errors for one sample
556	Process test data in parallel
857	Plot several examples of input images
447	Bayesian Optimization on the Full Dataset
874	Reading in the data , as usual
698	Number of Patients and Images in Test Images Folder
499	Function to Calculate Missing Values
57	We should give CatBoost names of categorical features
551	Inspection of created samples , without normalization
702	process test images
353	Bookings by month
365	Show one Example of landmark images
395	Correlation with Deal Probability
827	At the scale of stores
861	We can see above the counts of higher damageDealt smoothly decrease
460	Aggregate Cash previous loans
762	Divide data into training and validation sets
342	We can finally define the CNN architecture
347	Random Forest Regressor
699	Create Image Augmentation Generator
346	Modeling and Prediction
115	Parameters and LB score visualization
470	DFS with Default Primitives
643	Adding some lag feature
793	It seems Goblins are a little similar to Ghouls
109	Test Input Pipeline
402	Demonstration how it works
169	FS with the Pearson correlation
65	Create and set up the model
461	Aggregate Credit previous loans
801	Predict all province greater than
383	High cardinality features
28	Define a Convolutional Neural Network following Yoon Kim model
663	what already is known
273	Bounded region of parameter space
533	differences between public and private test
170	FS with SelectFromModel and LinearSVR
423	Submitting our Predictions
429	Create Training and Validation Set
72	How many different values does our categorial variables take
502	Monthly Credit Data
283	Visualizing Outliers In Data
50	All contraction are known
646	Fast data loading
255	Identifying Missing Value Present in Application Train Dataset
879	RF for feature selection
805	Here is a base model without parameter tuning .
442	Learning Rate Distribution
858	The competition metric relies only on the order of recods ignoring IDs
177	Basic skin detection
123	Thanks for the example of ensemling different models from
424	Data Exploration and Data Cleaning
128	Showing Confusion Matrices
153	Set Up the Generators
550	Mismatches on a validation data
435	Try with All Time Variables
1	Testing Time Augmentation
831	Disable fastai randomness
794	Logistic Regression seems to be a good classification algorithm for this dataset
345	Exploratory Data Analysis
205	Transformations and Data Augmentation
690	Get Model into TPU
706	Random Search Confidence
750	Data transformation and helper functions
98	Can we get some informations out of the item description
777	Load and preprocess data
669	They are very similar to each other
417	The data has no missing values and is scaled between zero and one
41	Training on the complete Dataset now
144	Create a Classification Report
295	No Of Storey Over The Years
20	Visualizing Raw Variables
8	Read data set
749	Random Forest model
537	Examining the Growth Curves
665	At first , I made Europe future
140	Set Up the Generators
799	Predict by Specify Country
348	Dimensionality Reduction Techniques
358	Read the csv files from kaggle
439	The number of leaves on the other hand is a discrete uniform distribution
359	Read the csv files on the Johns Hopkins CSSE database on github
319	Some —Åustom Loss functions
588	Build datasets objects
568	Create fake filepaths dataframe
543	inspect validation samples
883	Displaying sample image by host
677	Most of the dates overlap
614	Comparing various kappa scoring
204	Confusion Matrix for Test Data Predictions
594	Load and preprocess data
297	Bathroom Count Vs Log Error
349	Feature Agglomeration Results
269	Load data and fit some models
78	How many times , each categories of clickers download the app
797	Add active column
175	Get the dupplicate clicks with different target values
134	Using my notebook
387	Remove Extreme Prices
843	LOAD PROCESSED TRAINING DATA FROM DISK
146	Set up the generator
412	Redundant Individual Variables
589	Load model into the TPU
545	Finally , we are ready to load the whole series into one matrix
743	Define the number of repetitions for each class
619	Check some augmentation effect
562	OSIC training data Example
220	Weekday and Meter Reading
864	Relationships betweeen the sets
43	Unique value counts
53	Predict submission dates
678	Adding categorical features
111	Comparison of the all feature importance diagrams
757	Test data preparation
382	Let take some small visualizations with these bool features
687	These labels are not in train
650	Train model by each meter type
593	Evaluate training history
288	Bedrooms Vs Bathrooms Vs Interest Level
479	Now for the next four hyperparameters versus the score
449	Now we want to combine the data without creating any duplicate rows
838	Composition of functions
575	Pad and resize all the images
59	See sample image
631	Split Trian and Valid
277	When Do People Generally Reorder
237	Loading the data
544	inspect datagen output
224	Meter Readings over time And Primary Use
501	Monthly Cash Data
809	Conversions by App
42	Data loading and checking
770	BedRoom per family features
548	Load Model into TPU
498	Function to Convert Data Types
87	Deriving individual masks for each object
554	Visualize test processed samples , resize
538	New Daily Cases
410	Per Capita Features
740	Check saved checkpoints
213	Importing necessary libraries
842	Ensure determinism in the results
635	Averaging over all instances with standard deviation as errorbar
279	Best Selling Products
252	Recurrent Neural Network
386	Draw network graph to see which ingredients are linked together
868	Let us split the variables one more time
610	Training the model
253	Importing The Dataset
403	Combinations of TTA
731	Try to load the latest checkpoint
272	Visualize the default split and gains for all models
453	Numeric Aggregation Function
138	Balance the target distribution
210	CatBoost Pool and Regression
84	The magical function
222	Primary Use and Meter Reading
689	TPU Strategy and other configs
806	this graph is adapted from
457	Merge with the main dataframe
524	KFold LGB model training
99	What words do people use
406	Addressing Wrong Labels
352	Bookings by year
540	Gaussian Approximation of Active Cases
800	Predict all country greater than
266	Hit Rate Bar Chart
692	Making Vocabulary and Text Conversion
621	Drop the blurry image
294	Dependent variable logerror follows nice normal distribution
870	That is the size of one test example that we ought to predict
534	Distribution of months in train and test
318	Trivial segmentation stuff
775	Remove feature with only one value
160	Initialize the generators
539	Exponential Growth Curves
441	Example of Sampling from the Domain
606	Interest based on geographical location
270	Fit an XGBoost classifier model
37	Ability to Detect Face
162	Plot the Loss Curves
7	Now there appears to be one feature that is not gaussian
330	Lets gets started
875	Now that we have dataset in desired form , i.e
316	Display train and test signals
185	How many different cars in train dataset
834	What are Lung Opacities
155	Define X and y
116	Ensembling the solutions and submission
641	Leak Data loading and concat
334	Most important or common negative words
802	Age distribution of male and female patients
860	Explore distribution of single variable
313	Training and callbacs
732	Run on validation dataset
666	There is a gap between them
129	Code from notebook
733	Get metrics for validation dataset
873	What should good EDA be capable of
526	Set data loading parameters
215	Featurization of Training Data
840	Is a program solution
263	Paths to data and metadata
503	Split into training and validation groups
446	Random Search on the Full Dataset
866	Label encoding Making it machine readable
517	Train the LGBM model
739	Try to load the latest checkpoint
481	Read in Data and Create Smaller Datasets
416	Machine Learning Modeling
844	SAVE DATASET TO DISK
658	Fast data loading
716	Make a Baseline model
776	Feature selection using shap
476	Score versus Iteration
335	Most important or common words in neutral data
560	and background color definition
391	Price Variance in param
730	Choose the model to use
820	Write a problem file
752	Show influence of economical factors on housing prices
785	Find Null data
816	Use machine learning model
604	Create test generator
166	What is a python generator
637	train solved tasks
832	Load train and test dataframes and add length columns for Description and Name
856	You can choose many palettes , which makes the graphs visually nice
495	Function to Aggregate Numeric Data
21	Importing all Libraries
328	Select the models to run setting bool variables below
27	GPU version It is just function verification , not for performance evaluation
487	Kernel Density Estimate Plots
639	All train tasks predictions
638	evaluation solved tasks
480	First we need to format the data and extract the labels
420	Visualize Tree with No Maximum Depth
664	make hour column from transactionDT
655	Train model by each meter type
803	Impact of bmi over old and young patients
529	Run length encoding to reduce predictions size
582	Load and process data
36	Take a look at predictions
473	Remove Low Importance Features
756	Set Model for prediction
746	Check oversampled dataset
451	Identify Correlated Variables
547	This images from validation data seem to be really strange labeled ...
514	Now predict the result for each toxic level
380	Import necessary libraries
579	Refit and Submit
436	Visualize Validation Predicted Target
627	Blend and smooth for submission
81	Last click from the IP analysis
737	Choose the model to use
853	Create Magic features
22	Seed everything for reproducibility
701	process training images
285	Visuallizing Interest Level Vs Bathroom
60	See how our generator work
788	Prediction with xgboost
127	Divide features into groups
825	Stacking models and training
246	Document Vectors with TfidfVectorizer
167	How to make a generator run infinitely
711	Using all features for model training
17	Do some simple plots for exploration
766	roof and electricity
881	Load CSV files
242	Loading the data
259	Analysis based Averages values
618	Other columns are the digital value of pixels of kannada mnist
71	I updated importation for a faster version
34	Apply Underbalancing Techinique
411	In most cases , the values are very similar
728	Hugging Face pretrained Bert model names
307	So a unique operator will give us the unique filenames that contain ships
275	When Do People Generally Order
656	Leak Data Validation
271	Visualize the feature interaction
508	Income distribution and target value
192	Load tabular data and create new features
64	Split the data into train and validation parts
719	Create Inference Dataset
139	Create a Directory Structure
713	Split into train and test sets
685	targets in labels.csv
370	Check Unique Label
86	Dealing with color
265	Apply reduction on some samples and visualize the results
234	Encoding Cordinal Direction
684	Sampling the train data since too much data
389	Use Ad Image to Identify Item Category
522	extract different column types
781	Credit day prolong
760	Split training set
726	Visualising the distribution of each product by age by boxplot
305	Thx Stackoverflow for realization
63	See predicted result with images
354	Interactive booking , click , and percentage of booking trends with Bokeh
723	Compare timing for MixUp
11	Model Validation on train data set
525	Initialize train and test DataFrames to access IDs and depth information
310	Now we can read the masks for the specific image
552	Inspection of created samples , with normalization
274	Lets Read In Data Files
815	Judge machine learning model
261	Merging the bureau dataset along with application train dataset to do more analysis
58	Prepare Traning Data
704	process tabular features
722	Compare timing for CutMix
113	FS with the Pearson correlation
25	Predicting for test data
709	Create dataset with look back
773	combination using three features
649	Adding some lag feature
322	Comparison between Brazil and Italy
311	For the same window we superimpose the masks above the image
202	Using RandomForest Classifier
474	Align Train and Test Sets
437	Evaluate Best Model from Random Search
839	The evaluation method
207	Defining our Model
193	Visualization of a single batch
156	Create a submission file
245	Create Document Vectors
256	Checking the Imbalance of Target Variable
465	First , we need to put our data into a long format dataframe
608	Save results as CSV files
186	Display similar cars
830	Inspect the data at different time scale
118	Join data , filter dates and clean missings
296	Bedroom Count Vs Log Error
657	Find Best Weight
789	Target , prediction process
425	Empirical Cumulative Distribution Function Plot
194	Idea is to use clustering on images of one type to group data
497	Function for KDE Plots of Variable
415	Next we can rename the columns to make it easier to keep track
238	Librairies and data
350	Predict on test set
94	More details on brands with a treemap
654	Adding some lag feature
783	Check the dataset
624	Build the original and translated test data
598	Load Model into TPU
154	Plot the Training Curves
613	Reproducing simple baseline
276	At What Day Of The Week People Order
518	Loading the data
790	the difficuly of training different mask type is different
764	Check the dataset
812	Conversions by Channel
807	Only a small proportion of clicks were followed by a download
837	If you like the content of this notebook , please consider upvoting it
13	And now we embed each chunk individually
257	Types Of Features
848	Find final Thresshold
745	A method to get oversampled training dataset
161	Set up the Model Architecture
149	Create Binary Targets
564	A simple function from stack overflow that crops the image
491	Putting the Functions Together
819	For neutral samples , use original texts as they are
413	For example , we can divide the years of schooling by the age
581	The filtration step for RGB images may take a lot of time
871	Let us proceede with further interesting EDA
223	Meter Readings over time
174	Genetic program model , main code loop
77	Does standard users download the app
578	Adding mode as feature
605	Inference on test set
878	Replace infs and imputing missing values by mean
504	Prediction for one image
248	Document Vectors with hashing trick
247	Document Vectors with HashingVectorizer
250	Creating the Model
761	Predictions class distribution
570	Create real file paths dataframe
485	Create Custom Feature Primitives
56	Using embedding in NN we can change dimensionality of categorical features
227	Encoding Categorical Variable
458	Aggregate previous loans at Home Credit
48	FVC Progression by SmokingStatus
714	Apply invert scaling
724	Compare timing for GridMask
5	Detect and Correct Outliers
230	Variable Description , Identification , and Correction
774	Mix region and education
561	Add the actors to the renderer , set the background and size
105	Loading the files
572	Creating and Training the Model
258	Analysis Based on EXter Source Types
381	Density plot of numeric features
190	Code from here and below is commented out because the kernel dies
40	Preparing the training data
876	Applying it on text
107	Import Required Libraries
542	inspect training samples
505	Train and validate
221	Time of Day and Meter Reading
432	Explore Time Variables
829	Other special events
196	Newer products or products from newer stores are shorter than the oldest ones
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
648	FIX Time Zone
758	Data preparation for test
180	Its also builds on kernel functions but is appropriate for unsupervised learning
83	Importation of a entire day data
577	Group and Reduce
779	Check null data
612	Infer using trained model
536	Get important features according to SHAP
558	Exploratory Data Analysis
298	Room Count Vs Log Error
4	Impute any values will significantly affect the RMSE score for test set
528	Perform check on randomly chosen mask and prediction
150	Balance the target distribution
126	Showing Confusion Matrices
315	We can now create a submission file
467	The following code repeats this plot for all the of the numeric hyperparameters
821	Plot the obtained tour
218	Variable Description and Identification
108	Read the data
225	Square feet size is positively Skewed
292	Create final submission DF
620	Validation on real world data
301	Composition of Augmentations
676	Then transform to a datetime object supposing that it is an ordinal datetime
667	We will also evaluate the position of the data points using the coordinates
314	Prediction on test set
198	The number of samples in each cluster is the following
531	Create DFs imitating public and private test subsets
768	Ratio feature can have infinite values
653	FIX Time Zone
55	We should split our dataset to create validation and train parts
217	Importing Packages and Collecting Data
191	Lets validate the test files
184	Display a single car with its mask
670	Importing Library Files
817	Start positions and end positions of selected texts in tokenized source texts
69	Make a simple restart of runtime at this point
52	Train on full data
281	Which item do people put into the cart first
158	Thanks for the example of ensemling different models from
488	Correlations of Aggregated Values with Target
753	Dealing with missed variables
422	Filling missing and infinite data by zeroes
535	SHAP Interaction Values
434	Test Time Features
26	Load pneumonia locations
507	Granted applications per number of children
200	Confusion Matrix for Train Data Predictions
882	We can safely store the two types into separate dataframes
862	Getting Prime Cities
636	Ploting one sample with the corresponding error as error bars
356	a quick check if demand distribution changes week to week
73	What proportion of click generate downloads
784	Moving average is so simple
506	Locating a face within an image
445	Applied to Full Dataset
682	Train Our Linear Regression Model
336	and target vector that correspond to the test data size
824	Some Feature Engineering
9	Target varaible distribution
600	Saving as JPEG
148	Create a submission file
736	Try the demo model
496	Function to Calculate Categorical Counts
103	Generating Graph Matrices from the Structures
244	Splitting train into training and validation set
494	Calculate Information for Testing Data
145	MAKE A TEST SET PREDICTION
584	Build datasets objects
734	Run on test dataset
33	Check Validation Log Loss
431	Use More Features
580	Plotting some random images to check how cleaning works
673	Dense Added Model
565	TPU Strategy and other configs
693	Making Feature Matrices
697	Number of Patients and Images in Training Images Folder
405	Exploring Label Distribution
54	Using LabelEncoding we just change string values to numbers
836	Opacities That Are Not Related to Pneumonia
823	Import libraries and data , reduce memory usage
101	Is there a correlation between description length and price
772	phone per family features
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
95	What are their top categories
367	How much does this trust interval change over the real value for kappa
863	NOTE Even tough it is automatic , we can incorporate some manual features
569	First downsize all the images
468	Sequence of Search Values
512	Choose and train a classifier
596	Save model and best hyperparams
419	Recursive Feature Elimination with Random Forest
850	Add leak to test
332	Seperating the data into different data frame based on the labels
566	Create Dataset objects
236	Which Team Wins And Lost The Most Championships
532	train and test rows fraction intersection
877	Read and Explore
847	The method for training is borrowed from
573	Save model and weights
396	All Zero Features
241	MERGE , MISSING VALUE , FILL NA
748	Results from my own training
622	Display the dropped images
264	Group signals metadata accroding to target
377	Divide the test set and the training set
231	City and Time features
765	Check null data
586	Create fast tokenizer
443	Distribution of all Numeric Hyperparameters
18	Getting to Know the Data
541	load mapping dictionaries
163	Make a Prediction
640	Fast data loading
880	Evaluate the Model
694	Count game trainsition
751	Putting the principles in practice
74	Zoom on this IP
464	Grid Search Implementation
157	Its also builds on kernel functions but is appropriate for unsupervised learning
489	Function for Numeric Aggregations
188	Display some of similar cars
39	Show and save column comparision matrix and save row sets
475	Distribution of Scores
703	process submission images
351	Bookings per day of week
228	Prediction and Submission
376	yÁöÑÂºÇÂ∏∏ÂÄº drop samples which have exception value in y
717	Create dataset for training and Validation
378	y hist with defferent timestamps are similar
360	Transpose the dataframes
341	Build the Model
563	Predict Test Set and Submit Result
323	China scenario since first entry
833	What Does a Normal Image Look Like
810	Conversions by OS
404	Read in Data and Look at Summary Information
852	Function which creates final video from list of images
278	How many orders users generally made
727	Distribution of product among different genders
828	Perspective of Time
326	USA since first case
117	Implementing the SIR model
130	My upgrade of parameters
661	Train model by each meter type
66	Counting the metric score
486	Putting it all Together
24	Unfreeze all layers and find best learning rate
374	Exception value processing
634	Some correlation is indeed present
867	NaN imputation will be skipped in this tutorial
715	These have their kitchen area larger than the total area of the house
29	Data is still small enough for memory so read to memory using pandas
339	Load and Explore Data
452	Drop Correlated Variables
219	Meter Reading and Meter Type
91	Zoom on the second level
626	Predict with mixed language models
509	Read the data
329	Calculating the day when the number of infected individuals is max
414	Feature Engineering through Aggregations
510	Check the typical length of a comment
125	Prepare Training Data
338	Import Packages and Functions
176	Display all test images
102	Data Info Method
141	Plot the Training Curves
695	Visualize by heatmap
574	Padding process and resizing with OpenCV
681	Merge seed for each team
659	Leak Data loading and concat
767	Make new features using continuous feature
609	Losses and Metrics
171	FS with SelectFromModel and RandomForestRegressor
208	Use the images from our validation dataset to check the precdictions
555	Process train data in parallel
31	Initialize Mobilenet Face Extractor
418	Comparing Model Performance
671	Binary Focal Loss
131	Code from notebook
854	Predict on test
729	Make TF record file for test dataset
195	Test on the data that is not seen by the network during training
592	Load and preprocess data
287	Visualizing Interest Level Vs Hour
500	Function to Aggregate Stats at the Client Level
366	Data Exploration The label distribution shows clear label imbalance
397	Here is the distribution of the maximum value for the remaining features
394	Initial Position and Momentum
835	The Definition of Opacity
471	DFS with Selected Aggregation Primitives
616	Result of my new models
392	Affected Surface Object
712	Function to convert series to supervised learning
683	Next , we will make prediction with our LR Model
317	removing columns where correlation is high
233	Encoding Street Names
79	Attributed time analysis
811	Conversions by Device
306	Let us read the masks
782	This parted was taken from the helpful kernel
771	Tabulet per family features
686	targets in train.csv
428	The test distribution seems to be similar to the training distribution
214	Word map for most frequent Tags
710	Make prediction and apply invert scaling
688	train valid split
164	Process the Predictions
679	Rolling monthly and yearly store means
187	Display some of similar cars
303	Preprocessing of features
6	No surprises , since this is all presumably artificial data
462	Hyperparameter Tuning Implementation
530	Map extracted timestamps to columns
136	Create a Dataframe containing all images
361	Create dataframe listing the starting date of lockdowns
615	Relevant attributes of identified objects are stored
725	Data Loading and Cleaning
822	Made a mask using the tour
3	Imputations and Data Transformation
344	Looks like there are no missing values in the dataframe
438	Now we can evaluate the baseline model on the testing data
30	And finally lets look at the class distribution
393	Hit Rate and Charge Distribution
304	Text Processing of text data easily
849	Add train leak
355	expanding the aggregate
720	Define dataset and model
343	Imputing missing values
327	Getting population for each country
61	Prepare Testing Data
559	Outlier Analysis and Feature Scaling
16	Look at the data types and some basic info about the different columns
675	Construct the graph and plot it
243	Training the model on CPU
172	Load data files
331	Full data Analysis
493	An important consideration is the missing values in the dataframe
372	Check if valid data looks all right
718	CNN Model for multiclass classification
483	Plot for a sanity check
477	Hyperparameters versus Iteration
511	Split comments into array of words
601	Create new labels
70	Hist Graph of scores
284	Visualizing Interest Level Vs Price
455	Combined Aggregation Function
792	Null data check
159	Load the pre processed data
82	Number of clicks from the IP during the last minute
549	Finding best alpha
379	Save objects for next step
226	Imputing Missing variable
340	Create the embedding layer
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
165	Create the submission csv file
46	Submission data prediction
557	Load Packages and Data
178	Apply skin segmentation on all training data and visualize the result
645	Replace to Leak data
112	Thanks to Automatic FE The main code for basic FE
674	OUTPUT OF AUGMENTATED IMAGES
707	Split into train and test sets
735	Hugging Face pretrained Bert model names
290	Main Config Variables
254	Function for find out Numerical and categeical Variables
286	Visualizing Interest Level Vs Bedrooms
680	Fitting the trend on the yearly time series
260	Checking the Correlation Between The Features for Application Train Dataset
791	Show some examples of different mask
289	Correlation Between Price and Other Features
375	The following is features with fine hist
625	Predict with pure text models
121	Ridge Regression for one country
585	Load model into the TPU
513	Now train the models with a partial fit approach
104	Graph Representation of RNA structure
183	Here is a plot of sorted category counts
181	Thanks for the example of ensemling different models from
312	Train a simple CNN architecture
583	Load text data into memory
672	Efficient Net Architecture
75	What proportion of IP download the app
523	Prepare for training
308	Let us plot some bounding boxes right from the dictionary we just created
492	Aggregated Stats of Bureau Balance by Client
602	Pad and resize all the images
280	Top Reordered Products
696	View Single Image
299	No Of Storeys Vs Log Error
97	Does shipping depends of price
448	Standard imports for data science work
778	Wiki News FastText Embeddings
407	Families without Heads of Household
229	Importing Packages and Collecting Data
168	Thanks to Automatic FE The main code for basic FE
49	Count occurance of words
89	Combine it into a single function
607	Reducing Image Size
364	Compare our forecast with actual evolution both for training and validation sets
459	Aggregate Installments Data
855	Loading libraries and data
142	What is the AUC Score
302	Loading and preprocessing data
96	What are the most expensive items
814	Calculate extra features for test set
262	analyzing the numerical features disturbion in previous application dataset
15	Maybe if we used the log plot things would be better
651	Replace to UCF and UCL data
587	Load text data into memory
68	You can state below link to your copy of this MMDetection repo
430	Train with Simple Features
179	Some stats using jpg exif
571	Load and freeze DenseNet
147	Make a prediction on the test images
515	Define helper functions
2	Seems like a very wide range of values , relatively spaking
143	Create a Confusion Matrix
660	Adding some lag feature
10	Text preprosesing source
