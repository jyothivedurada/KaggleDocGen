419	Recursive Feature Elimination with Random Forest
536	Get important features according to SHAP
704	process tabular features
390	Price Variance Within Identified Items
18	Getting to Know the Data
773	combination using three features
593	Evaluate training history
406	Addressing Wrong Labels
805	Here is a base model without parameter tuning .
116	Ensembling the solutions and submission
481	Read in Data and Create Smaller Datasets
128	Showing Confusion Matrices
568	Create fake filepaths dataframe
33	Check Validation Log Loss
416	Machine Learning Modeling
630	Pick some frames to display
345	Exploratory Data Analysis
265	Apply reduction on some samples and visualize the results
626	Predict with mixed language models
147	Make a prediction on the test images
330	Lets gets started
268	Interpreting ROC Plot
153	Set Up the Generators
517	Train the LGBM model
733	Get metrics for validation dataset
720	Define dataset and model
615	Relevant attributes of identified objects are stored
839	The evaluation method
196	Newer products or products from newer stores are shorter than the oldest ones
145	MAKE A TEST SET PREDICTION
54	Using LabelEncoding we just change string values to numbers
804	Difference varialbes were created to describe the difference beween maximum and minimum value
127	Divide features into groups
636	Ploting one sample with the corresponding error as error bars
346	Modeling and Prediction
93	Which brands are most expensive
484	Previous Credit and Cash
622	Display the dropped images
821	Plot the obtained tour
459	Aggregate Installments Data
519	and batch aggregations examples for the rest of the tables ..
620	Validation on real world data
38	Loading data etc
241	MERGE , MISSING VALUE , FILL NA
120	Add country details
52	Train on full data
561	Add the actors to the renderer , set the background and size
405	Exploring Label Distribution
831	Disable fastai randomness
447	Bayesian Optimization on the Full Dataset
97	Does shipping depends of price
160	Initialize the generators
572	Creating and Training the Model
282	Visualizing Distribution Of Price Before and After Removing Outliers
748	Results from my own training
810	Conversions by OS
73	What proportion of click generate downloads
695	Visualize by heatmap
62	Create Testing Generator
368	filtering out outliers
676	Then transform to a datetime object supposing that it is an ordinal datetime
556	Process test data in parallel
433	We can make the same plot by day of the week
66	Counting the metric score
327	Getting population for each country
448	Standard imports for data science work
99	What words do people use
594	Load and preprocess data
624	Build the original and translated test data
574	Padding process and resizing with OpenCV
381	Density plot of numeric features
822	Made a mask using the tour
131	Code from notebook
114	FS with SelectFromModel and LinearSVR
767	Make new features using continuous feature
293	Top Features Selection
753	Dealing with missed variables
30	And finally lets look at the class distribution
218	Variable Description and Identification
628	Ensemble with my historical best
686	targets in train.csv
824	Some Feature Engineering
817	Start positions and end positions of selected texts in tokenized source texts
774	Mix region and education
47	FVC Progression by Sex
735	Hugging Face pretrained Bert model names
87	Deriving individual masks for each object
746	Check oversampled dataset
323	China scenario since first entry
742	Get labels and their countings
867	NaN imputation will be skipped in this tutorial
289	Correlation Between Price and Other Features
224	Meter Readings over time And Primary Use
874	Reading in the data , as usual
457	Merge with the main dataframe
592	Load and preprocess data
158	Thanks for the example of ensemling different models from
192	Load tabular data and create new features
883	Displaying sample image by host
841	Solve the task
307	So a unique operator will give us the unique filenames that contain ships
278	How many orders users generally made
244	Splitting train into training and validation set
199	Using DecisionTree Classifier
287	Visualizing Interest Level Vs Hour
119	Compute lags and trends
483	Plot for a sanity check
528	Perform check on randomly chosen mask and prediction
715	These have their kitchen area larger than the total area of the house
203	Confusion Matrix for Train Data Predictions
606	Interest based on geographical location
80	Download rate by hour
534	Distribution of months in train and test
169	FS with the Pearson correlation
151	Train Test Split
777	Load and preprocess data
211	CatBoost is RAM expensive so I prefer to utilize GPU
800	Predict all country greater than
118	Join data , filter dates and clean missings
549	Finding best alpha
643	Adding some lag feature
663	what already is known
256	Checking the Imbalance of Target Variable
261	Merging the bureau dataset along with application train dataset to do more analysis
698	Number of Patients and Images in Test Images Folder
232	Total Time Stopped
690	Get Model into TPU
79	Attributed time analysis
432	Explore Time Variables
25	Predicting for test data
466	Distribution of Search Values
275	When Do People Generally Order
422	Filling missing and infinite data by zeroes
869	Train the model , predict , etc
739	Try to load the latest checkpoint
112	Thanks to Automatic FE The main code for basic FE
632	This plot shows summarized information about feature impact against shap output
642	FIX Time Zone
83	Importation of a entire day data
756	Set Model for prediction
49	Count occurance of words
264	Group signals metadata accroding to target
271	Visualize the feature interaction
408	Redundant Household Variables
580	Plotting some random images to check how cleaning works
613	Reproducing simple baseline
163	Make a Prediction
423	Submitting our Predictions
201	Confusion Matrix for Test Data Predictions
294	Dependent variable logerror follows nice normal distribution
20	Visualizing Raw Variables
707	Split into train and test sets
689	TPU Strategy and other configs
845	LOAD DATASET FROM DISK
252	Recurrent Neural Network
520	load mapping dictionaries
100	Can the length of the description give us some informations
44	Unique count of Categorical values
173	Set up the folds for cross validation
809	Conversions by App
787	Onehot encoding for categorical data
279	Best Selling Products
501	Monthly Cash Data
590	Running the model on a Sample Image
505	Train and validate
389	Use Ad Image to Identify Item Category
577	Group and Reduce
578	Adding mode as feature
446	Random Search on the Full Dataset
554	Visualize test processed samples , resize
69	Make a simple restart of runtime at this point
331	Full data Analysis
319	Some —Åustom Loss functions
507	Granted applications per number of children
617	Import the modules
849	Add train leak
575	Pad and resize all the images
317	removing columns where correlation is high
601	Create new labels
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
281	Which item do people put into the cart first
665	At first , I made Europe future
751	Putting the principles in practice
5	Detect and Correct Outliers
766	roof and electricity
731	Try to load the latest checkpoint
200	Confusion Matrix for Train Data Predictions
454	Categorical Aggregation Function
88	Convert each labeled object to Run Line Encoding
759	Convert DCM to PNG
649	Adding some lag feature
231	City and Time features
48	FVC Progression by SmokingStatus
373	missing value statistics
807	Only a small proportion of clicks were followed by a download
181	Thanks for the example of ensemling different models from
540	Gaussian Approximation of Active Cases
784	Moving average is so simple
274	Lets Read In Data Files
858	The competition metric relies only on the order of recods ignoring IDs
474	Align Train and Test Sets
758	Data preparation for test
498	Function to Convert Data Types
591	Inference on Test Set
700	Get Tabular Data
479	Now for the next four hyperparameters versus the score
535	SHAP Interaction Values
121	Ridge Regression for one country
221	Time of Day and Meter Reading
426	Rides on Map of NYC
836	Opacities That Are Not Related to Pneumonia
67	Saving the model
868	Let us split the variables one more time
725	Data Loading and Cleaning
692	Making Vocabulary and Text Conversion
70	Hist Graph of scores
782	This parted was taken from the helpful kernel
369	using outliers column as labels instead of target column
544	inspect datagen output
277	When Do People Generally Reorder
638	evaluation solved tasks
786	Predict null data based on statistical method
270	Fit an XGBoost classifier model
296	Bedroom Count Vs Log Error
662	Replace to UCF data
744	Define the number of repetitions for each training example
395	Correlation with Deal Probability
250	Creating the Model
56	Using embedding in NN we can change dimensionality of categorical features
329	Calculating the day when the number of infected individuals is max
305	Thx Stackoverflow for realization
354	Interactive booking , click , and percentage of booking trends with Bokeh
771	Tabulet per family features
866	Label encoding Making it machine readable
529	Run length encoding to reduce predictions size
125	Prepare Training Data
324	Spain since first recorded case
237	Loading the data
567	Load Model into TPU
157	Its also builds on kernel functions but is appropriate for unsupervised learning
428	The test distribution seems to be similar to the training distribution
22	Seed everything for reproducibility
197	Now , the clusters will be created using just the test set
461	Aggregate Credit previous loans
603	Focal loss is good for unbalanced datasets , like this one
799	Predict by Specify Country
240	Loading the data
355	expanding the aggregate
258	Analysis Based on EXter Source Types
764	Check the dataset
427	Calculate Distance between points using Haversine distance
834	What are Lung Opacities
674	OUTPUT OF AUGMENTATED IMAGES
393	Hit Rate and Charge Distribution
254	Function for find out Numerical and categeical Variables
494	Calculate Information for Testing Data
59	See sample image
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
816	Use machine learning model
96	What are the most expensive items
77	Does standard users download the app
155	Define X and y
697	Number of Patients and Images in Training Images Folder
71	I updated importation for a faster version
238	Librairies and data
86	Dealing with color
871	Let us proceede with further interesting EDA
783	Check the dataset
207	Defining our Model
303	Preprocessing of features
635	Averaging over all instances with standard deviation as errorbar
832	Load train and test dataframes and add length columns for Description and Name
480	First we need to format the data and extract the labels
548	Load Model into TPU
384	Ordinal features mapping
404	Read in Data and Look at Summary Information
745	A method to get oversampled training dataset
37	Ability to Detect Face
392	Affected Surface Object
387	Remove Extreme Prices
844	SAVE DATASET TO DISK
248	Document Vectors with hashing trick
351	Bookings per day of week
220	Weekday and Meter Reading
312	Train a simple CNN architecture
801	Predict all province greater than
424	Data Exploration and Data Cleaning
458	Aggregate previous loans at Home Credit
76	Does bots download the app
124	Parameters and LB score visualization
565	TPU Strategy and other configs
321	Now a look at Italy
60	See how our generator work
209	Data load and process functions
107	Import Required Libraries
729	Make TF record file for test dataset
2	Seems like a very wide range of values , relatively spaking
430	Train with Simple Features
796	Get data from
402	Demonstration how it works
229	Importing Packages and Collecting Data
825	Stacking models and training
833	What Does a Normal Image Look Like
325	Iran since first case
219	Meter Reading and Meter Type
614	Comparing various kappa scoring
640	Fast data loading
78	How many times , each categories of clickers download the app
171	FS with SelectFromModel and RandomForestRegressor
683	Next , we will make prediction with our LR Model
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
792	Null data check
28	Define a Convolutional Neural Network following Yoon Kim model
656	Leak Data Validation
132	Training prediction result visualization
263	Paths to data and metadata
846	The mean of the two is used as the final embedding matrix
172	Load data files
1	Testing Time Augmentation
460	Aggregate Cash previous loans
527	Define data loading
182	Manager function to call the create features functions in multiple processes
266	Hit Rate Bar Chart
487	Kernel Density Estimate Plots
444	Evolution of Search
32	The data is not balanced
780	Credit day overdue
333	most important or common positive words
588	Build datasets objects
489	Function for Numeric Aggregations
350	Predict on test set
148	Create a submission file
826	cut down features to avoid the kernel die
375	The following is features with fine hist
320	Replacing Mainland china with just China
364	Compare our forecast with actual evolution both for training and validation sets
602	Pad and resize all the images
842	Ensure determinism in the results
81	Last click from the IP analysis
865	Feature primitives Basically which functions are we going to use to create features
110	Apply Logistic Regression
526	Set data loading parameters
91	Zoom on the second level
92	Prices of the first level of categories
468	Sequence of Search Values
762	Divide data into training and validation sets
802	Age distribution of male and female patients
884	After we impute it , we can observe standard fluctuation
7	Now there appears to be one feature that is not gaussian
732	Run on validation dataset
10	Text preprosesing source
696	View Single Image
176	Display all test images
687	These labels are not in train
50	All contraction are known
595	Unhide below to see all trials results
814	Calculate extra features for test set
438	Now we can evaluate the baseline model on the testing data
298	Room Count Vs Log Error
417	The data has no missing values and is scaled between zero and one
877	Read and Explore
6	No surprises , since this is all presumably artificial data
623	Creating submission file
439	The number of leaves on the other hand is a discrete uniform distribution
84	The magical function
612	Infer using trained model
206	Converting the Input images to plot using plt
485	Create Custom Feature Primitives
434	Test Time Features
711	Using all features for model training
827	At the scale of stores
109	Test Input Pipeline
259	Analysis based Averages values
463	Learning Rate Domain
579	Refit and Submit
165	Create the submission csv file
410	Per Capita Features
829	Other special events
680	Fitting the trend on the yearly time series
437	Evaluate Best Model from Random Search
301	Composition of Augmentations
356	a quick check if demand distribution changes week to week
334	Most important or common negative words
253	Importing The Dataset
775	Remove feature with only one value
755	Best parameters are searched by GridSearchCV on my Laptop
616	Result of my new models
765	Check null data
808	Explore ip counts
569	First downsize all the images
754	Starting importance variables evaluation
587	Load text data into memory
204	Confusion Matrix for Test Data Predictions
372	Check if valid data looks all right
654	Adding some lag feature
183	Here is a plot of sorted category counts
411	In most cases , the values are very similar
352	Bookings by year
362	Join all dataframes
511	Split comments into array of words
315	We can now create a submission file
633	Plotting errors for one sample
600	Saving as JPEG
123	Thanks for the example of ensemling different models from
338	Import Packages and Functions
559	Outlier Analysis and Feature Scaling
462	Hyperparameter Tuning Implementation
514	Now predict the result for each toxic level
586	Create fast tokenizer
396	All Zero Features
790	the difficuly of training different mask type is different
111	Comparison of the all feature importance diagrams
655	Train model by each meter type
399	Start by pivoting the DataFrame to explore the label distribution over slices
560	and background color definition
679	Rolling monthly and yearly store means
709	Create dataset with look back
347	Random Forest Regressor
791	Show some examples of different mask
542	inspect training samples
788	Prediction with xgboost
523	Prepare for training
702	process test images
134	Using my notebook
658	Fast data loading
741	An example usage
401	Examples of different hemorrhage subtypes
349	Feature Agglomeration Results
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
236	Which Team Wins And Lost The Most Championships
651	Replace to UCF and UCL data
216	Fitting Logistic Regression with OneVsRest Classifier
512	Choose and train a classifier
750	Data transformation and helper functions
785	Find Null data
699	Create Image Augmentation Generator
716	Make a Baseline model
337	It fills our perfect submission with n randomly distributed random answers i.e
23	Defining DataBunch for FastAI
508	Income distribution and target value
806	this graph is adapted from
412	Redundant Individual Variables
870	That is the size of one test example that we ought to predict
860	Explore distribution of single variable
770	BedRoom per family features
571	Load and freeze DenseNet
36	Take a look at predictions
653	FIX Time Zone
734	Run on test dataset
671	Binary Focal Loss
344	Looks like there are no missing values in the dataframe
465	First , we need to put our data into a long format dataframe
492	Aggregated Stats of Bureau Balance by Client
102	Data Info Method
854	Predict on test
880	Evaluate the Model
599	Will need those folders later for storing our jpegs
3	Imputations and Data Transformation
557	Load Packages and Data
631	Split Trian and Valid
166	What is a python generator
728	Hugging Face pretrained Bert model names
472	Visualize Distribution of Correlated Variables
819	For neutral samples , use original texts as they are
604	Create test generator
475	Distribution of Scores
703	process submission images
420	Visualize Tree with No Maximum Depth
34	Apply Underbalancing Techinique
768	Ratio feature can have infinite values
488	Correlations of Aggregated Values with Target
713	Split into train and test sets
339	Load and Explore Data
414	Feature Engineering through Aggregations
563	Predict Test Set and Submit Result
553	Visualize processed samples , resize
205	Transformations and Data Augmentation
179	Some stats using jpg exif
471	DFS with Selected Aggregation Primitives
547	This images from validation data seem to be really strange labeled ...
879	RF for feature selection
664	make hour column from transactionDT
678	Adding categorical features
291	Resnext initialize functions
359	Read the csv files on the Johns Hopkins CSSE database on github
847	The method for training is borrowed from
659	Leak Data loading and concat
813	Preparing the data
322	Comparison between Brazil and Italy
509	Read the data
242	Loading the data
513	Now train the models with a partial fit approach
493	An important consideration is the missing values in the dataframe
752	Show influence of economical factors on housing prices
365	Show one Example of landmark images
286	Visualizing Interest Level Vs Bedrooms
202	Using RandomForest Classifier
82	Number of clicks from the IP during the last minute
706	Random Search Confidence
776	Feature selection using shap
608	Save results as CSV files
477	Hyperparameters versus Iteration
641	Leak Data loading and concat
521	add breed mapping
304	Text Processing of text data easily
545	Finally , we are ready to load the whole series into one matrix
682	Train Our Linear Regression Model
675	Construct the graph and plot it
621	Drop the blurry image
292	Create final submission DF
486	Putting it all Together
239	MERGE , MISSING VALUE , FILL NA
226	Imputing Missing variable
668	Model Evaluation and Validation
288	Bedrooms Vs Bathrooms Vs Interest Level
723	Compare timing for MixUp
516	Predict validation and test set masks
31	Initialize Mobilenet Face Extractor
164	Process the Predictions
185	How many different cars in train dataset
104	Graph Representation of RNA structure
837	If you like the content of this notebook , please consider upvoting it
45	test prediction by LGBM and feature importance check
803	Impact of bmi over old and young patients
75	What proportion of IP download the app
370	Check Unique Label
856	You can choose many palettes , which makes the graphs visually nice
35	The data is not balanced
811	Conversions by Device
726	Visualising the distribution of each product by age by boxplot
478	Plots of Hyperparameters vs Score
645	Replace to Leak data
391	Price Variance in param
4	Impute any values will significantly affect the RMSE score for test set
652	Fast data loading
455	Combined Aggregation Function
178	Apply skin segmentation on all training data and visualize the result
736	Try the demo model
473	Remove Low Importance Features
64	Split the data into train and validation parts
42	Data loading and checking
881	Load CSV files
589	Load model into the TPU
677	Most of the dates overlap
117	Implementing the SIR model
260	Checking the Correlation Between The Features for Application Train Dataset
234	Encoding Cordinal Direction
284	Visualizing Interest Level Vs Price
191	Lets validate the test files
449	Now we want to combine the data without creating any duplicate rows
15	Maybe if we used the log plot things would be better
225	Square feet size is positively Skewed
214	Word map for most frequent Tags
142	What is the AUC Score
863	NOTE Even tough it is automatic , we can incorporate some manual features
137	Display a random sample of train images by class
864	Relationships betweeen the sets
506	Locating a face within an image
302	Loading and preprocessing data
228	Prediction and Submission
820	Write a problem file
379	Save objects for next step
332	Seperating the data into different data frame based on the labels
823	Import libraries and data , reduce memory usage
470	DFS with Default Primitives
657	Find Best Weight
149	Create Binary Targets
280	Top Reordered Products
724	Compare timing for GridMask
156	Create a submission file
27	GPU version It is just function verification , not for performance evaluation
552	Inspection of created samples , with normalization
740	Check saved checkpoints
378	y hist with defferent timestamps are similar
541	load mapping dictionaries
295	No Of Storey Over The Years
441	Example of Sampling from the Domain
440	Complete Bayesian Domain
835	The Definition of Opacity
193	Visualization of a single batch
343	Imputing missing values
122	Its also builds on kernel functions but is appropriate for unsupervised learning
629	This is a simple modify from
585	Load model into the TPU
394	Initial Position and Momentum
851	Function which creates set of images for each axis
772	phone per family features
452	Drop Correlated Variables
757	Test data preparation
377	Divide the test set and the training set
143	Create a Confusion Matrix
106	plotting the scan
760	Split training set
189	Define some constants for data location
425	Empirical Cumulative Distribution Function Plot
308	Let us plot some bounding boxes right from the dictionary we just created
445	Applied to Full Dataset
41	Training on the complete Dataset now
358	Read the csv files from kaggle
538	New Daily Cases
524	KFold LGB model training
669	They are very similar to each other
795	You only have two areas to work on
660	Adding some lag feature
467	The following code repeats this plot for all the of the numeric hyperparameters
491	Putting the Functions Together
318	Trivial segmentation stuff
781	Credit day prolong
245	Create Document Vectors
55	We should split our dataset to create validation and train parts
299	No Of Storeys Vs Log Error
139	Create a Directory Structure
108	Read the data
168	Thanks to Automatic FE The main code for basic FE
413	For example , we can divide the years of schooling by the age
233	Encoding Street Names
371	Non physical data augmentation
290	Main Config Variables
500	Function to Aggregate Stats at the Client Level
46	Submission data prediction
476	Score versus Iteration
738	Get variables to apply weight decay in AdamW optimizer
188	Display some of similar cars
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
0	Load the metadata of each file
531	Create DFs imitating public and private test subsets
227	Encoding Categorical Variable
309	Let us load one image and its masks
161	Set up the Model Architecture
719	Create Inference Dataset
159	Load the pre processed data
186	Display similar cars
502	Monthly Credit Data
878	Replace infs and imputing missing values by mean
262	analyzing the numerical features disturbion in previous application dataset
180	Its also builds on kernel functions but is appropriate for unsupervised learning
213	Importing necessary libraries
409	Creating Ordinal Variables
297	Bathroom Count Vs Log Error
596	Save model and best hyperparams
712	Function to convert series to supervised learning
29	Data is still small enough for memory so read to memory using pandas
273	Bounded region of parameter space
336	and target vector that correspond to the test data size
363	Create variables of interest
566	Create Dataset objects
283	Visualizing Outliers In Data
316	Display train and test signals
650	Train model by each meter type
136	Create a Dataframe containing all images
497	Function for KDE Plots of Variable
619	Check some augmentation effect
818	This notebook will deal with positive , negative and neutral samples independently
300	Gaussian Noise on Target
495	Function to Aggregate Numeric Data
415	Next we can rename the columns to make it easier to keep track
374	Exception value processing
850	Add leak to test
714	Apply invert scaling
533	differences between public and private test
223	Meter Readings over time
68	You can state below link to your copy of this MMDetection repo
539	Exponential Growth Curves
335	Most important or common words in neutral data
251	Convolutional Neural Network
366	Data Exploration The label distribution shows clear label imbalance
113	FS with the Pearson correlation
639	All train tasks predictions
838	Composition of functions
13	And now we embed each chunk individually
469	Testing Results on Full Data
763	Now , we can downcast numeric columns in the same way
634	Some correlation is indeed present
235	Seting X and Y
170	FS with SelectFromModel and LinearSVR
243	Training the model on CPU
564	A simple function from stack overflow that crops the image
522	extract different column types
644	Train model by each meter type
348	Dimensionality Reduction Techniques
144	Create a Classification Report
727	Distribution of product among different genders
872	Save some memory
530	Map extracted timestamps to columns
543	inspect validation samples
89	Combine it into a single function
555	Process train data in parallel
710	Make prediction and apply invert scaling
882	We can safely store the two types into separate dataframes
103	Generating Graph Matrices from the Structures
353	Bookings by month
562	OSIC training data Example
730	Choose the model to use
857	Plot several examples of input images
314	Prediction on test set
691	Loading and Visualization of Data
138	Balance the target distribution
737	Choose the model to use
63	See predicted result with images
576	Load Model into TPU
581	The filtration step for RGB images may take a lot of time
388	A good item price binning should be based on the price distribution
361	Create dataframe listing the starting date of lockdowns
607	Reducing Image Size
285	Visuallizing Interest Level Vs Bathroom
681	Merge seed for each team
598	Load Model into TPU
313	Training and callbacs
684	Sampling the train data since too much data
187	Display some of similar cars
722	Compare timing for CutMix
442	Learning Rate Distribution
701	process training images
403	Combinations of TTA
26	Load pneumonia locations
247	Document Vectors with HashingVectorizer
490	Function to Handle Categorical Variables
747	Common things for training
609	Losses and Metrics
269	Load data and fit some models
217	Importing Packages and Collecting Data
499	Function to Calculate Missing Values
743	Define the number of repetitions for each class
101	Is there a correlation between description length and price
130	My upgrade of parameters
688	train valid split
793	It seems Goblins are a little similar to Ghouls
194	Idea is to use clustering on images of one type to group data
584	Build datasets objects
510	Check the typical length of a comment
618	Other columns are the digital value of pixels of kannada mnist
272	Visualize the default split and gains for all models
873	What should good EDA be capable of
717	Create dataset for training and Validation
146	Set up the generator
53	Predict submission dates
8	Read data set
749	Random Forest model
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
610	Training the model
451	Identify Correlated Variables
666	There is a gap between them
421	Lets first check the Train Target Distribution
174	Genetic program model , main code loop
328	Select the models to run setting bool variables below
546	Custom LR schedule
418	Comparing Model Performance
551	Inspection of created samples , without normalization
12	Roc AUC curve
876	Applying it on text
382	Let take some small visualizations with these bool features
862	Getting Prime Cities
637	train solved tasks
383	High cardinality features
407	Families without Heads of Household
769	Room per family features
210	CatBoost Pool and Regression
195	Test on the data that is not seen by the network during training
94	More details on brands with a treemap
72	How many different values does our categorial variables take
306	Let us read the masks
61	Prepare Testing Data
453	Numeric Aggregation Function
859	Lib and Load data
705	we add some squared features for some model flexability
672	Efficient Net Architecture
503	Split into training and validation groups
57	We should give CatBoost names of categorical features
537	Examining the Growth Curves
852	Function which creates final video from list of images
24	Unfreeze all layers and find best learning rate
398	Show Original Image
761	Predictions class distribution
58	Prepare Traning Data
133	Using my notebook
518	Loading the data
40	Preparing the training data
140	Set Up the Generators
496	Function to Calculate Categorical Counts
177	Basic skin detection
310	Now we can read the masks for the specific image
721	Prediction for test
311	For the same window we superimpose the masks above the image
436	Visualize Validation Predicted Target
464	Grid Search Implementation
17	Do some simple plots for exploration
249	Keras Tokenizer API
515	Define helper functions
558	Exploratory Data Analysis
573	Save model and weights
115	Parameters and LB score visualization
778	Wiki News FastText Embeddings
789	Target , prediction process
141	Plot the Training Curves
848	Find final Thresshold
162	Plot the Loss Curves
694	Count game trainsition
340	Create the embedding layer
797	Add active column
861	We can see above the counts of higher damageDealt smoothly decrease
39	Show and save column comparision matrix and save row sets
718	CNN Model for multiclass classification
667	We will also evaluate the position of the data points using the coordinates
9	Target varaible distribution
525	Initialize train and test DataFrames to access IDs and depth information
16	Look at the data types and some basic info about the different columns
812	Conversions by Channel
276	At What Day Of The Week People Order
215	Featurization of Training Data
647	Leak Data loading and concat
550	Mismatches on a validation data
798	Predict by Specify Province
65	Create and set up the model
19	The Shape of the Data
135	How many images are in each folder
875	Now that we have dataset in desired form , i.e
90	So , some categories are expensive , but most are cheap
611	Load Test dataframe
376	yÁöÑÂºÇÂ∏∏ÂÄº drop samples which have exception value in y
386	Draw network graph to see which ingredients are linked together
840	Is a program solution
570	Create real file paths dataframe
627	Blend and smooth for submission
255	Identifying Missing Value Present in Application Train Dataset
532	train and test rows fraction intersection
794	Logistic Regression seems to be a good classification algorithm for this dataset
605	Inference on test set
853	Create Magic features
367	How much does this trust interval change over the real value for kappa
380	Import necessary libraries
815	Judge machine learning model
646	Fast data loading
673	Dense Added Model
208	Use the images from our validation dataset to check the precdictions
154	Plot the Training Curves
625	Predict with pure text models
98	Can we get some informations out of the item description
342	We can finally define the CNN architecture
435	Try with All Time Variables
429	Create Training and Validation Set
693	Making Feature Matrices
184	Display a single car with its mask
222	Primary Use and Meter Reading
456	Aggregate Grandchild Data Tables
828	Perspective of Time
74	Zoom on this IP
326	USA since first case
190	Code from here and below is commented out because the kernel dies
670	Importing Library Files
175	Get the dupplicate clicks with different target values
357	Same series of charts but for returns
661	Train model by each meter type
341	Build the Model
246	Document Vectors with TfidfVectorizer
450	Admit and Correct Mistakes
708	Convert an array of values into a dataset matrix
648	FIX Time Zone
95	What are their top categories
443	Distribution of all Numeric Hyperparameters
830	Inspect the data at different time scale
105	Loading the files
167	How to make a generator run infinitely
126	Showing Confusion Matrices
257	Types Of Features
397	Here is the distribution of the maximum value for the remaining features
855	Loading libraries and data
482	Properly Representing Variable Types
43	Unique value counts
21	Importing all Libraries
597	Create Dataset objects
85	We can now print the results
843	LOAD PROCESSED TRAINING DATA FROM DISK
504	Prediction for one image
582	Load and process data
779	Check null data
230	Variable Description , Identification , and Correction
431	Use More Features
198	The number of samples in each cluster is the following
11	Model Validation on train data set
150	Balance the target distribution
685	targets in labels.csv
583	Load text data into memory
129	Code from notebook
385	Predict test set and make submission
360	Transpose the dataframes
