418	Comparing Model Performance
868	Let us split the variables one more time
693	Making Feature Matrices
502	Monthly Credit Data
337	It fills our perfect submission with n randomly distributed random answers i.e
666	There is a gap between them
353	Bookings by month
158	Thanks for the example of ensemling different models from
841	Solve the task
505	Train and validate
155	Define X and y
704	process tabular features
474	Align Train and Test Sets
257	Types Of Features
357	Same series of charts but for returns
551	Inspection of created samples , without normalization
360	Transpose the dataframes
509	Read the data
724	Compare timing for GridMask
700	Get Tabular Data
800	Predict all country greater than
285	Visuallizing Interest Level Vs Bathroom
125	Prepare Training Data
473	Remove Low Importance Features
674	OUTPUT OF AUGMENTATED IMAGES
272	Visualize the default split and gains for all models
17	Do some simple plots for exploration
224	Meter Readings over time And Primary Use
475	Distribution of Scores
527	Define data loading
450	Admit and Correct Mistakes
271	Visualize the feature interaction
63	See predicted result with images
313	Training and callbacs
568	Create fake filepaths dataframe
269	Load data and fit some models
758	Data preparation for test
634	Some correlation is indeed present
240	Loading the data
494	Calculate Information for Testing Data
385	Predict test set and make submission
282	Visualizing Distribution Of Price Before and After Removing Outliers
825	Stacking models and training
318	Trivial segmentation stuff
566	Create Dataset objects
512	Choose and train a classifier
47	FVC Progression by Sex
598	Load Model into TPU
523	Prepare for training
794	Logistic Regression seems to be a good classification algorithm for this dataset
160	Initialize the generators
618	Other columns are the digital value of pixels of kannada mnist
61	Prepare Testing Data
755	Best parameters are searched by GridSearchCV on my Laptop
91	Zoom on the second level
108	Read the data
324	Spain since first recorded case
555	Process train data in parallel
42	Data loading and checking
735	Hugging Face pretrained Bert model names
391	Price Variance in param
602	Pad and resize all the images
797	Add active column
712	Function to convert series to supervised learning
355	expanding the aggregate
849	Add train leak
511	Split comments into array of words
647	Leak Data loading and concat
732	Run on validation dataset
262	analyzing the numerical features disturbion in previous application dataset
210	CatBoost Pool and Regression
538	New Daily Cases
795	You only have two areas to work on
581	The filtration step for RGB images may take a lot of time
805	Here is a base model without parameter tuning .
399	Start by pivoting the DataFrame to explore the label distribution over slices
552	Inspection of created samples , with normalization
852	Function which creates final video from list of images
510	Check the typical length of a comment
368	filtering out outliers
553	Visualize processed samples , resize
672	Efficient Net Architecture
516	Predict validation and test set masks
539	Exponential Growth Curves
123	Thanks for the example of ensemling different models from
167	How to make a generator run infinitely
694	Count game trainsition
729	Make TF record file for test dataset
431	Use More Features
336	and target vector that correspond to the test data size
142	What is the AUC Score
79	Attributed time analysis
572	Creating and Training the Model
683	Next , we will make prediction with our LR Model
648	FIX Time Zone
72	How many different values does our categorial variables take
96	What are the most expensive items
614	Comparing various kappa scoring
562	OSIC training data Example
792	Null data check
692	Making Vocabulary and Text Conversion
461	Aggregate Credit previous loans
878	Replace infs and imputing missing values by mean
806	this graph is adapted from
769	Room per family features
143	Create a Confusion Matrix
548	Load Model into TPU
207	Defining our Model
11	Model Validation on train data set
294	Dependent variable logerror follows nice normal distribution
264	Group signals metadata accroding to target
236	Which Team Wins And Lost The Most Championships
834	What are Lung Opacities
140	Set Up the Generators
139	Create a Directory Structure
665	At first , I made Europe future
520	load mapping dictionaries
65	Create and set up the model
564	A simple function from stack overflow that crops the image
751	Putting the principles in practice
858	The competition metric relies only on the order of recods ignoring IDs
508	Income distribution and target value
443	Distribution of all Numeric Hyperparameters
713	Split into train and test sets
252	Recurrent Neural Network
799	Predict by Specify Country
871	Let us proceede with further interesting EDA
433	We can make the same plot by day of the week
423	Submitting our Predictions
73	What proportion of click generate downloads
531	Create DFs imitating public and private test subsets
154	Plot the Training Curves
362	Join all dataframes
688	train valid split
768	Ratio feature can have infinite values
348	Dimensionality Reduction Techniques
270	Fit an XGBoost classifier model
545	Finally , we are ready to load the whole series into one matrix
877	Read and Explore
369	using outliers column as labels instead of target column
438	Now we can evaluate the baseline model on the testing data
50	All contraction are known
703	process submission images
299	No Of Storeys Vs Log Error
514	Now predict the result for each toxic level
747	Common things for training
93	Which brands are most expensive
535	SHAP Interaction Values
28	Define a Convolutional Neural Network following Yoon Kim model
676	Then transform to a datetime object supposing that it is an ordinal datetime
565	TPU Strategy and other configs
150	Balance the target distribution
690	Get Model into TPU
439	The number of leaves on the other hand is a discrete uniform distribution
203	Confusion Matrix for Train Data Predictions
308	Let us plot some bounding boxes right from the dictionary we just created
388	A good item price binning should be based on the price distribution
144	Create a Classification Report
627	Blend and smooth for submission
110	Apply Logistic Regression
458	Aggregate previous loans at Home Credit
636	Ploting one sample with the corresponding error as error bars
229	Importing Packages and Collecting Data
867	NaN imputation will be skipped in this tutorial
124	Parameters and LB score visualization
430	Train with Simple Features
107	Import Required Libraries
284	Visualizing Interest Level Vs Price
591	Inference on Test Set
638	evaluation solved tasks
770	BedRoom per family features
122	Its also builds on kernel functions but is appropriate for unsupervised learning
691	Loading and Visualization of Data
835	The Definition of Opacity
515	Define helper functions
540	Gaussian Approximation of Active Cases
259	Analysis based Averages values
809	Conversions by App
791	Show some examples of different mask
343	Imputing missing values
525	Initialize train and test DataFrames to access IDs and depth information
200	Confusion Matrix for Train Data Predictions
824	Some Feature Engineering
35	The data is not balanced
738	Get variables to apply weight decay in AdamW optimizer
40	Preparing the training data
657	Find Best Weight
95	What are their top categories
856	You can choose many palettes , which makes the graphs visually nice
396	All Zero Features
447	Bayesian Optimization on the Full Dataset
283	Visualizing Outliers In Data
429	Create Training and Validation Set
859	Lib and Load data
593	Evaluate training history
304	Text Processing of text data easily
182	Manager function to call the create features functions in multiple processes
165	Create the submission csv file
297	Bathroom Count Vs Log Error
876	Applying it on text
220	Weekday and Meter Reading
801	Predict all province greater than
524	KFold LGB model training
254	Function for find out Numerical and categeical Variables
626	Predict with mixed language models
351	Bookings per day of week
105	Loading the files
115	Parameters and LB score visualization
589	Load model into the TPU
708	Convert an array of values into a dataset matrix
861	We can see above the counts of higher damageDealt smoothly decrease
333	most important or common positive words
404	Read in Data and Look at Summary Information
312	Train a simple CNN architecture
435	Try with All Time Variables
55	We should split our dataset to create validation and train parts
346	Modeling and Prediction
741	An example usage
819	For neutral samples , use original texts as they are
733	Get metrics for validation dataset
661	Train model by each meter type
185	How many different cars in train dataset
699	Create Image Augmentation Generator
655	Train model by each meter type
52	Train on full data
823	Import libraries and data , reduce memory usage
36	Take a look at predictions
19	The Shape of the Data
821	Plot the obtained tour
352	Bookings by year
499	Function to Calculate Missing Values
190	Code from here and below is commented out because the kernel dies
263	Paths to data and metadata
361	Create dataframe listing the starting date of lockdowns
378	y hist with defferent timestamps are similar
102	Data Info Method
109	Test Input Pipeline
34	Apply Underbalancing Techinique
578	Adding mode as feature
459	Aggregate Installments Data
329	Calculating the day when the number of infected individuals is max
303	Preprocessing of features
762	Divide data into training and validation sets
592	Load and preprocess data
620	Validation on real world data
599	Will need those folders later for storing our jpegs
218	Variable Description and Identification
624	Build the original and translated test data
16	Look at the data types and some basic info about the different columns
136	Create a Dataframe containing all images
141	Plot the Training Curves
839	The evaluation method
642	FIX Time Zone
843	LOAD PROCESSED TRAINING DATA FROM DISK
0	Load the metadata of each file
517	Train the LGBM model
607	Reducing Image Size
521	add breed mapping
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
725	Data Loading and Cleaning
342	We can finally define the CNN architecture
444	Evolution of Search
248	Document Vectors with hashing trick
547	This images from validation data seem to be really strange labeled ...
756	Set Model for prediction
471	DFS with Selected Aggregation Primitives
481	Read in Data and Create Smaller Datasets
48	FVC Progression by SmokingStatus
767	Make new features using continuous feature
625	Predict with pure text models
677	Most of the dates overlap
637	train solved tasks
573	Save model and weights
268	Interpreting ROC Plot
280	Top Reordered Products
619	Check some augmentation effect
76	Does bots download the app
778	Wiki News FastText Embeddings
307	So a unique operator will give us the unique filenames that contain ships
68	You can state below link to your copy of this MMDetection repo
611	Load Test dataframe
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
364	Compare our forecast with actual evolution both for training and validation sets
740	Check saved checkpoints
26	Load pneumonia locations
380	Import necessary libraries
66	Counting the metric score
44	Unique count of Categorical values
20	Visualizing Raw Variables
872	Save some memory
537	Examining the Growth Curves
519	and batch aggregations examples for the rest of the tables ..
309	Let us load one image and its masks
12	Roc AUC curve
45	test prediction by LGBM and feature importance check
127	Divide features into groups
498	Function to Convert Data Types
639	All train tasks predictions
214	Word map for most frequent Tags
188	Display some of similar cars
320	Replacing Mainland china with just China
603	Focal loss is good for unbalanced datasets , like this one
43	Unique value counts
60	See how our generator work
491	Putting the Functions Together
788	Prediction with xgboost
808	Explore ip counts
233	Encoding Street Names
842	Ensure determinism in the results
717	Create dataset for training and Validation
296	Bedroom Count Vs Log Error
172	Load data files
290	Main Config Variables
18	Getting to Know the Data
698	Number of Patients and Images in Test Images Folder
467	The following code repeats this plot for all the of the numeric hyperparameters
789	Target , prediction process
131	Code from notebook
715	These have their kitchen area larger than the total area of the house
850	Add leak to test
654	Adding some lag feature
25	Predicting for test data
500	Function to Aggregate Stats at the Client Level
595	Unhide below to see all trials results
417	The data has no missing values and is scaled between zero and one
340	Create the embedding layer
205	Transformations and Data Augmentation
174	Genetic program model , main code loop
201	Confusion Matrix for Test Data Predictions
334	Most important or common negative words
87	Deriving individual masks for each object
874	Reading in the data , as usual
822	Made a mask using the tour
659	Leak Data loading and concat
485	Create Custom Feature Primitives
426	Rides on Map of NYC
737	Choose the model to use
306	Let us read the masks
686	targets in train.csv
407	Families without Heads of Household
81	Last click from the IP analysis
804	Difference varialbes were created to describe the difference beween maximum and minimum value
689	TPU Strategy and other configs
785	Find Null data
420	Visualize Tree with No Maximum Depth
195	Test on the data that is not seen by the network during training
681	Merge seed for each team
427	Calculate Distance between points using Haversine distance
216	Fitting Logistic Regression with OneVsRest Classifier
279	Best Selling Products
349	Feature Agglomeration Results
379	Save objects for next step
243	Training the model on CPU
583	Load text data into memory
345	Exploratory Data Analysis
281	Which item do people put into the cart first
556	Process test data in parallel
710	Make prediction and apply invert scaling
777	Load and preprocess data
291	Resnext initialize functions
69	Make a simple restart of runtime at this point
881	Load CSV files
570	Create real file paths dataframe
74	Zoom on this IP
253	Importing The Dataset
744	Define the number of repetitions for each training example
764	Check the dataset
325	Iran since first case
356	a quick check if demand distribution changes week to week
847	The method for training is borrowed from
719	Create Inference Dataset
106	plotting the scan
667	We will also evaluate the position of the data points using the coordinates
554	Visualize test processed samples , resize
580	Plotting some random images to check how cleaning works
594	Load and preprocess data
187	Display some of similar cars
27	GPU version It is just function verification , not for performance evaluation
77	Does standard users download the app
292	Create final submission DF
411	In most cases , the values are very similar
159	Load the pre processed data
687	These labels are not in train
484	Previous Credit and Cash
64	Split the data into train and validation parts
615	Relevant attributes of identified objects are stored
664	make hour column from transactionDT
126	Showing Confusion Matrices
653	FIX Time Zone
234	Encoding Cordinal Direction
162	Plot the Loss Curves
466	Distribution of Search Values
191	Lets validate the test files
398	Show Original Image
206	Converting the Input images to plot using plt
114	FS with SelectFromModel and LinearSVR
482	Properly Representing Variable Types
367	How much does this trust interval change over the real value for kappa
563	Predict Test Set and Submit Result
742	Get labels and their countings
462	Hyperparameter Tuning Implementation
546	Custom LR schedule
476	Score versus Iteration
266	Hit Rate Bar Chart
501	Monthly Cash Data
671	Binary Focal Loss
453	Numeric Aggregation Function
390	Price Variance Within Identified Items
54	Using LabelEncoding we just change string values to numbers
62	Create Testing Generator
802	Age distribution of male and female patients
857	Plot several examples of input images
608	Save results as CSV files
9	Target varaible distribution
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
225	Square feet size is positively Skewed
652	Fast data loading
883	Displaying sample image by host
83	Importation of a entire day data
771	Tabulet per family features
228	Prediction and Submission
855	Loading libraries and data
258	Analysis Based on EXter Source Types
326	USA since first case
151	Train Test Split
373	missing value statistics
4	Impute any values will significantly affect the RMSE score for test set
98	Can we get some informations out of the item description
763	Now , we can downcast numeric columns in the same way
492	Aggregated Stats of Bureau Balance by Client
416	Machine Learning Modeling
53	Predict submission dates
784	Moving average is so simple
273	Bounded region of parameter space
560	and background color definition
354	Interactive booking , click , and percentage of booking trends with Bokeh
863	NOTE Even tough it is automatic , we can incorporate some manual features
550	Mismatches on a validation data
194	Idea is to use clustering on images of one type to group data
600	Saving as JPEG
862	Getting Prime Cities
227	Encoding Categorical Variable
675	Construct the graph and plot it
630	Pick some frames to display
6	No surprises , since this is all presumably artificial data
103	Generating Graph Matrices from the Structures
300	Gaussian Noise on Target
197	Now , the clusters will be created using just the test set
119	Compute lags and trends
586	Create fast tokenizer
56	Using embedding in NN we can change dimensionality of categorical features
41	Training on the complete Dataset now
30	And finally lets look at the class distribution
796	Get data from
382	Let take some small visualizations with these bool features
660	Adding some lag feature
406	Addressing Wrong Labels
365	Show one Example of landmark images
746	Check oversampled dataset
287	Visualizing Interest Level Vs Hour
507	Granted applications per number of children
97	Does shipping depends of price
748	Results from my own training
773	combination using three features
276	At What Day Of The Week People Order
542	inspect training samples
680	Fitting the trend on the yearly time series
359	Read the csv files on the Johns Hopkins CSSE database on github
695	Visualize by heatmap
88	Convert each labeled object to Run Line Encoding
605	Inference on test set
478	Plots of Hyperparameters vs Score
585	Load model into the TPU
120	Add country details
168	Thanks to Automatic FE The main code for basic FE
793	It seems Goblins are a little similar to Ghouls
832	Load train and test dataframes and add length columns for Description and Name
610	Training the model
714	Apply invert scaling
506	Locating a face within an image
118	Join data , filter dates and clean missings
752	Show influence of economical factors on housing prices
812	Conversions by Channel
446	Random Search on the Full Dataset
288	Bedrooms Vs Bathrooms Vs Interest Level
776	Feature selection using shap
761	Predictions class distribution
452	Drop Correlated Variables
112	Thanks to Automatic FE The main code for basic FE
327	Getting population for each country
2	Seems like a very wide range of values , relatively spaking
846	The mean of the two is used as the final embedding matrix
541	load mapping dictionaries
818	This notebook will deal with positive , negative and neutral samples independently
448	Standard imports for data science work
533	differences between public and private test
232	Total Time Stopped
643	Adding some lag feature
157	Its also builds on kernel functions but is appropriate for unsupervised learning
350	Predict on test set
460	Aggregate Cash previous loans
392	Affected Surface Object
483	Plot for a sanity check
315	We can now create a submission file
436	Visualize Validation Predicted Target
137	Display a random sample of train images by class
845	LOAD DATASET FROM DISK
873	What should good EDA be capable of
394	Initial Position and Momentum
582	Load and process data
215	Featurization of Training Data
828	Perspective of Time
389	Use Ad Image to Identify Item Category
221	Time of Day and Meter Reading
145	MAKE A TEST SET PREDICTION
621	Drop the blurry image
395	Correlation with Deal Probability
38	Loading data etc
133	Using my notebook
255	Identifying Missing Value Present in Application Train Dataset
358	Read the csv files from kaggle
84	The magical function
274	Lets Read In Data Files
231	City and Time features
67	Saving the model
833	What Does a Normal Image Look Like
780	Credit day overdue
169	FS with the Pearson correlation
410	Per Capita Features
148	Create a submission file
449	Now we want to combine the data without creating any duplicate rows
836	Opacities That Are Not Related to Pneumonia
831	Disable fastai randomness
100	Can the length of the description give us some informations
384	Ordinal features mapping
104	Graph Representation of RNA structure
469	Testing Results on Full Data
275	When Do People Generally Order
29	Data is still small enough for memory so read to memory using pandas
441	Example of Sampling from the Domain
622	Display the dropped images
706	Random Search Confidence
663	what already is known
419	Recursive Feature Elimination with Random Forest
558	Exploratory Data Analysis
332	Seperating the data into different data frame based on the labels
317	removing columns where correlation is high
532	train and test rows fraction intersection
161	Set up the Model Architecture
865	Feature primitives Basically which functions are we going to use to create features
495	Function to Aggregate Numeric Data
321	Now a look at Italy
623	Creating submission file
526	Set data loading parameters
442	Learning Rate Distribution
101	Is there a correlation between description length and price
5	Detect and Correct Outliers
409	Creating Ordinal Variables
179	Some stats using jpg exif
238	Librairies and data
662	Replace to UCF data
211	CatBoost is RAM expensive so I prefer to utilize GPU
278	How many orders users generally made
682	Train Our Linear Regression Model
437	Evaluate Best Model from Random Search
853	Create Magic features
590	Running the model on a Sample Image
363	Create variables of interest
679	Rolling monthly and yearly store means
374	Exception value processing
335	Most important or common words in neutral data
486	Putting it all Together
163	Make a Prediction
23	Defining DataBunch for FastAI
226	Imputing Missing variable
223	Meter Readings over time
386	Draw network graph to see which ingredients are linked together
85	We can now print the results
247	Document Vectors with HashingVectorizer
339	Load and Explore Data
46	Submission data prediction
588	Build datasets objects
879	RF for feature selection
455	Combined Aggregation Function
116	Ensembling the solutions and submission
656	Leak Data Validation
193	Visualization of a single batch
837	If you like the content of this notebook , please consider upvoting it
772	phone per family features
397	Here is the distribution of the maximum value for the remaining features
344	Looks like there are no missing values in the dataframe
513	Now train the models with a partial fit approach
549	Finding best alpha
322	Comparison between Brazil and Italy
178	Apply skin segmentation on all training data and visualize the result
89	Combine it into a single function
22	Seed everything for reproducibility
311	For the same window we superimpose the masks above the image
669	They are very similar to each other
807	Only a small proportion of clicks were followed by a download
830	Inspect the data at different time scale
412	Redundant Individual Variables
454	Categorical Aggregation Function
613	Reproducing simple baseline
289	Correlation Between Price and Other Features
557	Load Packages and Data
487	Kernel Density Estimate Plots
319	Some сustom Loss functions
70	Hist Graph of scores
171	FS with SelectFromModel and RandomForestRegressor
256	Checking the Imbalance of Target Variable
786	Predict null data based on statistical method
646	Fast data loading
24	Unfreeze all layers and find best learning rate
237	Loading the data
164	Process the Predictions
456	Aggregate Grandchild Data Tables
707	Split into train and test sets
366	Data Exploration The label distribution shows clear label imbalance
208	Use the images from our validation dataset to check the precdictions
425	Empirical Cumulative Distribution Function Plot
428	The test distribution seems to be similar to the training distribution
753	Dealing with missed variables
616	Result of my new models
241	MERGE , MISSING VALUE , FILL NA
673	Dense Added Model
8	Read data set
743	Define the number of repetitions for each class
58	Prepare Traning Data
135	How many images are in each folder
641	Leak Data loading and concat
696	View Single Image
230	Variable Description , Identification , and Correction
293	Top Features Selection
330	Lets gets started
779	Check null data
650	Train model by each meter type
775	Remove feature with only one value
851	Function which creates set of images for each axis
383	High cardinality features
413	For example , we can divide the years of schooling by the age
328	Select the models to run setting bool variables below
33	Check Validation Log Loss
7	Now there appears to be one feature that is not gaussian
111	Comparison of the all feature importance diagrams
286	Visualizing Interest Level Vs Bedrooms
166	What is a python generator
810	Conversions by OS
10	Text preprosesing source
854	Predict on test
295	No Of Storey Over The Years
251	Convolutional Neural Network
670	Importing Library Files
39	Show and save column comparision matrix and save row sets
522	extract different column types
774	Mix region and education
817	Start positions and end positions of selected texts in tokenized source texts
609	Losses and Metrics
457	Merge with the main dataframe
731	Try to load the latest checkpoint
790	the difficuly of training different mask type is different
860	Explore distribution of single variable
477	Hyperparameters versus Iteration
528	Perform check on randomly chosen mask and prediction
678	Adding categorical features
463	Learning Rate Domain
189	Define some constants for data location
496	Function to Calculate Categorical Counts
113	FS with the Pearson correlation
727	Distribution of product among different genders
242	Loading the data
37	Ability to Detect Face
244	Splitting train into training and validation set
204	Confusion Matrix for Test Data Predictions
601	Create new labels
387	Remove Extreme Prices
479	Now for the next four hyperparameters versus the score
277	When Do People Generally Reorder
186	Display similar cars
260	Checking the Correlation Between The Features for Application Train Dataset
401	Examples of different hemorrhage subtypes
421	Lets first check the Train Target Distribution
716	Make a Baseline model
146	Set up the generator
651	Replace to UCF and UCL data
644	Train model by each meter type
783	Check the dataset
569	First downsize all the images
723	Compare timing for MixUp
414	Feature Engineering through Aggregations
173	Set up the folds for cross validation
472	Visualize Distribution of Correlated Variables
261	Merging the bureau dataset along with application train dataset to do more analysis
884	After we impute it , we can observe standard fluctuation
745	A method to get oversampled training dataset
323	China scenario since first entry
376	y的异常值 drop samples which have exception value in y
604	Create test generator
132	Training prediction result visualization
331	Full data Analysis
434	Test Time Features
596	Save model and best hyperparams
170	FS with SelectFromModel and LinearSVR
15	Maybe if we used the log plot things would be better
489	Function for Numeric Aggregations
310	Now we can read the masks for the specific image
765	Check null data
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
730	Choose the model to use
338	Import Packages and Functions
754	Starting importance variables evaluation
760	Split training set
826	cut down features to avoid the kernel die
628	Ensemble with my historical best
175	Get the dupplicate clicks with different target values
432	Explore Time Variables
316	Display train and test signals
402	Demonstration how it works
815	Judge machine learning model
597	Create Dataset objects
848	Find final Thresshold
544	inspect datagen output
488	Correlations of Aggregated Values with Target
633	Plotting errors for one sample
866	Label encoding Making it machine readable
445	Applied to Full Dataset
534	Distribution of months in train and test
302	Loading and preprocessing data
606	Interest based on geographical location
176	Display all test images
3	Imputations and Data Transformation
375	The following is features with fine hist
844	SAVE DATASET TO DISK
32	The data is not balanced
497	Function for KDE Plots of Variable
305	Thx Stackoverflow for realization
579	Refit and Submit
13	And now we embed each chunk individually
408	Redundant Household Variables
129	Code from notebook
94	More details on brands with a treemap
92	Prices of the first level of categories
192	Load tabular data and create new features
870	That is the size of one test example that we ought to predict
536	Get important features according to SHAP
209	Data load and process functions
128	Showing Confusion Matrices
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
813	Preparing the data
750	Data transformation and helper functions
635	Averaging over all instances with standard deviation as errorbar
341	Build the Model
405	Exploring Label Distribution
415	Next we can rename the columns to make it easier to keep track
121	Ridge Regression for one country
875	Now that we have dataset in desired form , i.e
222	Primary Use and Meter Reading
219	Meter Reading and Meter Type
827	At the scale of stores
245	Create Document Vectors
235	Seting X and Y
757	Test data preparation
711	Using all features for model training
658	Fast data loading
869	Train the model , predict , etc
480	First we need to format the data and extract the labels
759	Convert DCM to PNG
249	Keras Tokenizer API
130	My upgrade of parameters
880	Evaluate the Model
82	Number of clicks from the IP during the last minute
612	Infer using trained model
21	Importing all Libraries
701	process training images
250	Creating the Model
739	Try to load the latest checkpoint
99	What words do people use
422	Filling missing and infinite data by zeroes
464	Grid Search Implementation
736	Try the demo model
649	Adding some lag feature
632	This plot shows summarized information about feature impact against shap output
202	Using RandomForest Classifier
734	Run on test dataset
57	We should give CatBoost names of categorical features
86	Dealing with color
576	Load Model into TPU
574	Padding process and resizing with OpenCV
265	Apply reduction on some samples and visualize the results
184	Display a single car with its mask
90	So , some categories are expensive , but most are cheap
1	Testing Time Augmentation
561	Add the actors to the renderer , set the background and size
766	roof and electricity
440	Complete Bayesian Domain
177	Basic skin detection
403	Combinations of TTA
149	Create Binary Targets
718	CNN Model for multiclass classification
468	Sequence of Search Values
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
451	Identify Correlated Variables
156	Create a submission file
198	The number of samples in each cluster is the following
381	Density plot of numeric features
722	Compare timing for CutMix
840	Is a program solution
721	Prediction for test
370	Check Unique Label
377	Divide the test set and the training set
814	Calculate extra features for test set
728	Hugging Face pretrained Bert model names
829	Other special events
617	Import the modules
685	targets in labels.csv
705	we add some squared features for some model flexability
393	Hit Rate and Charge Distribution
811	Conversions by Device
697	Number of Patients and Images in Training Images Folder
71	I updated importation for a faster version
518	Loading the data
239	MERGE , MISSING VALUE , FILL NA
347	Random Forest Regressor
684	Sampling the train data since too much data
640	Fast data loading
530	Map extracted timestamps to columns
781	Credit day prolong
702	process test images
138	Balance the target distribution
668	Model Evaluation and Validation
577	Group and Reduce
882	We can safely store the two types into separate dataframes
183	Here is a plot of sorted category counts
749	Random Forest model
559	Outlier Analysis and Feature Scaling
798	Predict by Specify Province
543	inspect validation samples
78	How many times , each categories of clickers download the app
503	Split into training and validation groups
726	Visualising the distribution of each product by age by boxplot
504	Prediction for one image
181	Thanks for the example of ensemling different models from
80	Download rate by hour
490	Function to Handle Categorical Variables
217	Importing Packages and Collecting Data
720	Define dataset and model
213	Importing necessary libraries
816	Use machine learning model
529	Run length encoding to reduce predictions size
196	Newer products or products from newer stores are shorter than the oldest ones
782	This parted was taken from the helpful kernel
371	Non physical data augmentation
629	This is a simple modify from
153	Set Up the Generators
470	DFS with Default Primitives
631	Split Trian and Valid
31	Initialize Mobilenet Face Extractor
314	Prediction on test set
567	Load Model into TPU
787	Onehot encoding for categorical data
424	Data Exploration and Data Cleaning
645	Replace to Leak data
584	Build datasets objects
372	Check if valid data looks all right
575	Pad and resize all the images
838	Composition of functions
246	Document Vectors with TfidfVectorizer
803	Impact of bmi over old and young patients
75	What proportion of IP download the app
298	Room Count Vs Log Error
134	Using my notebook
117	Implementing the SIR model
493	An important consideration is the missing values in the dataframe
180	Its also builds on kernel functions but is appropriate for unsupervised learning
147	Make a prediction on the test images
587	Load text data into memory
820	Write a problem file
59	See sample image
49	Count occurance of words
465	First , we need to put our data into a long format dataframe
199	Using DecisionTree Classifier
301	Composition of Augmentations
864	Relationships betweeen the sets
571	Load and freeze DenseNet
709	Create dataset with look back
