571	Load and freeze DenseNet
747	Common things for training
47	FVC Progression by Sex
514	Now predict the result for each toxic level
766	roof and electricity
23	Defining DataBunch for FastAI
630	Pick some frames to display
468	Sequence of Search Values
315	We can now create a submission file
691	Loading and Visualization of Data
375	The following is features with fine hist
39	Show and save column comparision matrix and save row sets
505	Train and validate
733	Get metrics for validation dataset
585	Load model into the TPU
716	Make a Baseline model
239	MERGE , MISSING VALUE , FILL NA
189	Define some constants for data location
226	Imputing Missing variable
436	Visualize Validation Predicted Target
352	Bookings by year
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
633	Plotting errors for one sample
568	Create fake filepaths dataframe
59	See sample image
401	Examples of different hemorrhage subtypes
768	Ratio feature can have infinite values
407	Families without Heads of Household
419	Recursive Feature Elimination with Random Forest
11	Model Validation on train data set
739	Try to load the latest checkpoint
701	process training images
638	evaluation solved tasks
217	Importing Packages and Collecting Data
298	Room Count Vs Log Error
300	Gaussian Noise on Target
871	Let us proceede with further interesting EDA
27	GPU version It is just function verification , not for performance evaluation
228	Prediction and Submission
516	Predict validation and test set masks
449	Now we want to combine the data without creating any duplicate rows
635	Averaging over all instances with standard deviation as errorbar
539	Exponential Growth Curves
561	Add the actors to the renderer , set the background and size
608	Save results as CSV files
124	Parameters and LB score visualization
184	Display a single car with its mask
268	Interpreting ROC Plot
669	They are very similar to each other
553	Visualize processed samples , resize
800	Predict all country greater than
866	Label encoding Making it machine readable
222	Primary Use and Meter Reading
359	Read the csv files on the Johns Hopkins CSSE database on github
794	Logistic Regression seems to be a good classification algorithm for this dataset
802	Age distribution of male and female patients
603	Focal loss is good for unbalanced datasets , like this one
161	Set up the Model Architecture
596	Save model and best hyperparams
387	Remove Extreme Prices
412	Redundant Individual Variables
17	Do some simple plots for exploration
637	train solved tasks
369	using outliers column as labels instead of target column
259	Analysis based Averages values
838	Composition of functions
146	Set up the generator
664	make hour column from transactionDT
362	Join all dataframes
338	Import Packages and Functions
383	High cardinality features
447	Bayesian Optimization on the Full Dataset
149	Create Binary Targets
484	Previous Credit and Cash
105	Loading the files
190	Code from here and below is commented out because the kernel dies
690	Get Model into TPU
232	Total Time Stopped
793	It seems Goblins are a little similar to Ghouls
600	Saving as JPEG
370	Check Unique Label
133	Using my notebook
499	Function to Calculate Missing Values
595	Unhide below to see all trials results
640	Fast data loading
379	Save objects for next step
684	Sampling the train data since too much data
546	Custom LR schedule
221	Time of Day and Meter Reading
450	Admit and Correct Mistakes
444	Evolution of Search
611	Load Test dataframe
101	Is there a correlation between description length and price
314	Prediction on test set
294	Dependent variable logerror follows nice normal distribution
475	Distribution of Scores
103	Generating Graph Matrices from the Structures
574	Padding process and resizing with OpenCV
62	Create Testing Generator
167	How to make a generator run infinitely
488	Correlations of Aggregated Values with Target
339	Load and Explore Data
78	How many times , each categories of clickers download the app
524	KFold LGB model training
295	No Of Storey Over The Years
847	The method for training is borrowed from
6	No surprises , since this is all presumably artificial data
570	Create real file paths dataframe
550	Mismatches on a validation data
819	For neutral samples , use original texts as they are
591	Inference on Test Set
806	this graph is adapted from
463	Learning Rate Domain
187	Display some of similar cars
858	The competition metric relies only on the order of recods ignoring IDs
495	Function to Aggregate Numeric Data
276	At What Day Of The Week People Order
255	Identifying Missing Value Present in Application Train Dataset
526	Set data loading parameters
185	How many different cars in train dataset
10	Text preprosesing source
316	Display train and test signals
243	Training the model on CPU
420	Visualize Tree with No Maximum Depth
688	train valid split
164	Process the Predictions
140	Set Up the Generators
301	Composition of Augmentations
521	add breed mapping
281	Which item do people put into the cart first
577	Group and Reduce
341	Build the Model
330	Lets gets started
658	Fast data loading
645	Replace to Leak data
632	This plot shows summarized information about feature impact against shap output
438	Now we can evaluate the baseline model on the testing data
95	What are their top categories
318	Trivial segmentation stuff
81	Last click from the IP analysis
437	Evaluate Best Model from Random Search
388	A good item price binning should be based on the price distribution
586	Create fast tokenizer
825	Stacking models and training
479	Now for the next four hyperparameters versus the score
734	Run on test dataset
617	Import the modules
377	Divide the test set and the training set
286	Visualizing Interest Level Vs Bedrooms
312	Train a simple CNN architecture
457	Merge with the main dataframe
258	Analysis Based on EXter Source Types
598	Load Model into TPU
519	and batch aggregations examples for the rest of the tables ..
192	Load tabular data and create new features
789	Target , prediction process
723	Compare timing for MixUp
174	Genetic program model , main code loop
70	Hist Graph of scores
844	SAVE DATASET TO DISK
646	Fast data loading
460	Aggregate Cash previous loans
180	Its also builds on kernel functions but is appropriate for unsupervised learning
639	All train tasks predictions
166	What is a python generator
381	Density plot of numeric features
83	Importation of a entire day data
132	Training prediction result visualization
687	These labels are not in train
671	Binary Focal Loss
799	Predict by Specify Country
695	Visualize by heatmap
522	extract different column types
365	Show one Example of landmark images
682	Train Our Linear Regression Model
878	Replace infs and imputing missing values by mean
356	a quick check if demand distribution changes week to week
859	Lib and Load data
136	Create a Dataframe containing all images
815	Judge machine learning model
491	Putting the Functions Together
80	Download rate by hour
693	Making Feature Matrices
181	Thanks for the example of ensemling different models from
762	Divide data into training and validation sets
814	Calculate extra features for test set
85	We can now print the results
498	Function to Convert Data Types
534	Distribution of months in train and test
129	Code from notebook
325	Iran since first case
75	What proportion of IP download the app
501	Monthly Cash Data
829	Other special events
657	Find Best Weight
781	Credit day prolong
418	Comparing Model Performance
622	Display the dropped images
270	Fit an XGBoost classifier model
557	Load Packages and Data
121	Ridge Regression for one country
200	Confusion Matrix for Train Data Predictions
564	A simple function from stack overflow that crops the image
309	Let us load one image and its masks
761	Predictions class distribution
204	Confusion Matrix for Test Data Predictions
5	Detect and Correct Outliers
661	Train model by each meter type
732	Run on validation dataset
206	Converting the Input images to plot using plt
147	Make a prediction on the test images
65	Create and set up the model
655	Train model by each meter type
605	Inference on test set
84	The magical function
242	Loading the data
113	FS with the Pearson correlation
76	Does bots download the app
721	Prediction for test
873	What should good EDA be capable of
245	Create Document Vectors
563	Predict Test Set and Submit Result
846	The mean of the two is used as the final embedding matrix
32	The data is not balanced
446	Random Search on the Full Dataset
703	process submission images
704	process tabular features
371	Non physical data augmentation
678	Adding categorical features
470	DFS with Default Primitives
337	It fills our perfect submission with n randomly distributed random answers i.e
659	Leak Data loading and concat
87	Deriving individual masks for each object
368	filtering out outliers
862	Getting Prime Cities
818	This notebook will deal with positive , negative and neutral samples independently
562	OSIC training data Example
12	Roc AUC curve
355	expanding the aggregate
252	Recurrent Neural Network
112	Thanks to Automatic FE The main code for basic FE
769	Room per family features
334	Most important or common negative words
191	Lets validate the test files
241	MERGE , MISSING VALUE , FILL NA
111	Comparison of the all feature importance diagrams
392	Affected Surface Object
754	Starting importance variables evaluation
439	The number of leaves on the other hand is a discrete uniform distribution
307	So a unique operator will give us the unique filenames that contain ships
583	Load text data into memory
855	Loading libraries and data
366	Data Exploration The label distribution shows clear label imbalance
4	Impute any values will significantly affect the RMSE score for test set
229	Importing Packages and Collecting Data
594	Load and preprocess data
199	Using DecisionTree Classifier
336	and target vector that correspond to the test data size
507	Granted applications per number of children
234	Encoding Cordinal Direction
272	Visualize the default split and gains for all models
584	Build datasets objects
590	Running the model on a Sample Image
482	Properly Representing Variable Types
811	Conversions by Device
706	Random Search Confidence
531	Create DFs imitating public and private test subsets
218	Variable Description and Identification
751	Putting the principles in practice
543	inspect validation samples
322	Comparison between Brazil and Italy
508	Income distribution and target value
602	Pad and resize all the images
183	Here is a plot of sorted category counts
724	Compare timing for GridMask
725	Data Loading and Cleaning
130	My upgrade of parameters
867	NaN imputation will be skipped in this tutorial
662	Replace to UCF data
69	Make a simple restart of runtime at this point
489	Function for Numeric Aggregations
30	And finally lets look at the class distribution
812	Conversions by Channel
123	Thanks for the example of ensemling different models from
304	Text Processing of text data easily
445	Applied to Full Dataset
156	Create a submission file
45	test prediction by LGBM and feature importance check
613	Reproducing simple baseline
485	Create Custom Feature Primitives
145	MAKE A TEST SET PREDICTION
88	Convert each labeled object to Run Line Encoding
467	The following code repeats this plot for all the of the numeric hyperparameters
607	Reducing Image Size
138	Balance the target distribution
541	load mapping dictionaries
197	Now , the clusters will be created using just the test set
66	Counting the metric score
326	USA since first case
785	Find Null data
500	Function to Aggregate Stats at the Client Level
49	Count occurance of words
195	Test on the data that is not seen by the network during training
416	Machine Learning Modeling
148	Create a submission file
319	Some сustom Loss functions
74	Zoom on this IP
20	Visualizing Raw Variables
778	Wiki News FastText Embeddings
665	At first , I made Europe future
327	Getting population for each country
250	Creating the Model
748	Results from my own training
394	Initial Position and Momentum
434	Test Time Features
452	Drop Correlated Variables
150	Balance the target distribution
290	Main Config Variables
566	Create Dataset objects
641	Leak Data loading and concat
310	Now we can read the masks for the specific image
581	The filtration step for RGB images may take a lot of time
587	Load text data into memory
672	Efficient Net Architecture
770	BedRoom per family features
414	Feature Engineering through Aggregations
788	Prediction with xgboost
700	Get Tabular Data
776	Feature selection using shap
730	Choose the model to use
576	Load Model into TPU
807	Only a small proportion of clicks were followed by a download
373	missing value statistics
248	Document Vectors with hashing trick
647	Leak Data loading and concat
745	A method to get oversampled training dataset
628	Ensemble with my historical best
451	Identify Correlated Variables
106	plotting the scan
244	Splitting train into training and validation set
289	Correlation Between Price and Other Features
504	Prediction for one image
176	Display all test images
765	Check null data
627	Blend and smooth for submission
424	Data Exploration and Data Cleaning
676	Then transform to a datetime object supposing that it is an ordinal datetime
120	Add country details
593	Evaluate training history
44	Unique count of Categorical values
756	Set Model for prediction
625	Predict with pure text models
346	Modeling and Prediction
877	Read and Explore
428	The test distribution seems to be similar to the training distribution
875	Now that we have dataset in desired form , i.e
331	Full data Analysis
28	Define a Convolutional Neural Network following Yoon Kim model
530	Map extracted timestamps to columns
348	Dimensionality Reduction Techniques
18	Getting to Know the Data
599	Will need those folders later for storing our jpegs
413	For example , we can divide the years of schooling by the age
510	Check the typical length of a comment
99	What words do people use
335	Most important or common words in neutral data
178	Apply skin segmentation on all training data and visualize the result
395	Correlation with Deal Probability
186	Display similar cars
689	TPU Strategy and other configs
552	Inspection of created samples , with normalization
89	Combine it into a single function
575	Pad and resize all the images
433	We can make the same plot by day of the week
472	Visualize Distribution of Correlated Variables
729	Make TF record file for test dataset
560	and background color definition
201	Confusion Matrix for Test Data Predictions
249	Keras Tokenizer API
332	Seperating the data into different data frame based on the labels
764	Check the dataset
597	Create Dataset objects
116	Ensembling the solutions and submission
227	Encoding Categorical Variable
538	New Daily Cases
8	Read data set
675	Construct the graph and plot it
619	Check some augmentation effect
629	This is a simple modify from
119	Compute lags and trends
471	DFS with Selected Aggregation Primitives
750	Data transformation and helper functions
422	Filling missing and infinite data by zeroes
621	Drop the blurry image
303	Preprocessing of features
720	Define dataset and model
773	combination using three features
34	Apply Underbalancing Techinique
474	Align Train and Test Sets
715	These have their kitchen area larger than the total area of the house
347	Random Forest Regressor
231	City and Time features
144	Create a Classification Report
527	Define data loading
588	Build datasets objects
1	Testing Time Augmentation
345	Exploratory Data Analysis
141	Plot the Training Curves
654	Adding some lag feature
795	You only have two areas to work on
578	Adding mode as feature
257	Types Of Features
674	OUTPUT OF AUGMENTATED IMAGES
746	Check oversampled dataset
589	Load model into the TPU
743	Define the number of repetitions for each class
421	Lets first check the Train Target Distribution
816	Use machine learning model
215	Featurization of Training Data
285	Visuallizing Interest Level Vs Bathroom
288	Bedrooms Vs Bathrooms Vs Interest Level
90	So , some categories are expensive , but most are cheap
856	You can choose many palettes , which makes the graphs visually nice
266	Hit Rate Bar Chart
573	Save model and weights
417	The data has no missing values and is scaled between zero and one
547	This images from validation data seem to be really strange labeled ...
458	Aggregate previous loans at Home Credit
253	Importing The Dataset
831	Disable fastai randomness
841	Solve the task
735	Hugging Face pretrained Bert model names
321	Now a look at Italy
712	Function to convert series to supervised learning
572	Creating and Training the Model
154	Plot the Training Curves
282	Visualizing Distribution Of Price Before and After Removing Outliers
313	Training and callbacs
813	Preparing the data
653	FIX Time Zone
663	what already is known
60	See how our generator work
188	Display some of similar cars
784	Moving average is so simple
759	Convert DCM to PNG
797	Add active column
760	Split training set
796	Get data from
709	Create dataset with look back
320	Replacing Mainland china with just China
317	removing columns where correlation is high
50	All contraction are known
523	Prepare for training
549	Finding best alpha
494	Calculate Information for Testing Data
213	Importing necessary libraries
826	cut down features to avoid the kernel die
102	Data Info Method
763	Now , we can downcast numeric columns in the same way
264	Group signals metadata accroding to target
840	Is a program solution
82	Number of clicks from the IP during the last minute
870	That is the size of one test example that we ought to predict
850	Add leak to test
406	Addressing Wrong Labels
749	Random Forest model
652	Fast data loading
340	Create the embedding layer
57	We should give CatBoost names of categorical features
774	Mix region and education
208	Use the images from our validation dataset to check the precdictions
142	What is the AUC Score
175	Get the dupplicate clicks with different target values
615	Relevant attributes of identified objects are stored
822	Made a mask using the tour
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
857	Plot several examples of input images
354	Interactive booking , click , and percentage of booking trends with Bokeh
9	Target varaible distribution
624	Build the original and translated test data
454	Categorical Aggregation Function
626	Predict with mixed language models
757	Test data preparation
33	Check Validation Log Loss
260	Checking the Correlation Between The Features for Application Train Dataset
650	Train model by each meter type
558	Exploratory Data Analysis
476	Score versus Iteration
610	Training the model
40	Preparing the training data
384	Ordinal features mapping
853	Create Magic features
869	Train the model , predict , etc
755	Best parameters are searched by GridSearchCV on my Laptop
465	First , we need to put our data into a long format dataframe
426	Rides on Map of NYC
246	Document Vectors with TfidfVectorizer
41	Training on the complete Dataset now
512	Choose and train a classifier
464	Grid Search Implementation
404	Read in Data and Look at Summary Information
601	Create new labels
798	Predict by Specify Province
821	Plot the obtained tour
487	Kernel Density Estimate Plots
220	Weekday and Meter Reading
323	China scenario since first entry
364	Compare our forecast with actual evolution both for training and validation sets
518	Loading the data
374	Exception value processing
114	FS with SelectFromModel and LinearSVR
410	Per Capita Features
461	Aggregate Credit previous loans
517	Train the LGBM model
532	train and test rows fraction intersection
810	Conversions by OS
42	Data loading and checking
196	Newer products or products from newer stores are shorter than the oldest ones
823	Import libraries and data , reduce memory usage
493	An important consideration is the missing values in the dataframe
618	Other columns are the digital value of pixels of kannada mnist
240	Loading the data
104	Graph Representation of RNA structure
780	Credit day overdue
173	Set up the folds for cross validation
305	Thx Stackoverflow for realization
548	Load Model into TPU
718	CNN Model for multiclass classification
24	Unfreeze all layers and find best learning rate
311	For the same window we superimpose the masks above the image
772	phone per family features
429	Create Training and Validation Set
77	Does standard users download the app
506	Locating a face within an image
634	Some correlation is indeed present
828	Perspective of Time
360	Transpose the dataframes
403	Combinations of TTA
533	differences between public and private test
159	Load the pre processed data
193	Visualization of a single batch
513	Now train the models with a partial fit approach
681	Merge seed for each team
296	Bedroom Count Vs Log Error
79	Attributed time analysis
480	First we need to format the data and extract the labels
448	Standard imports for data science work
431	Use More Features
363	Create variables of interest
740	Check saved checkpoints
473	Remove Low Importance Features
151	Train Test Split
623	Creating submission file
262	analyzing the numerical features disturbion in previous application dataset
219	Meter Reading and Meter Type
198	The number of samples in each cluster is the following
291	Resnext initialize functions
580	Plotting some random images to check how cleaning works
58	Prepare Traning Data
344	Looks like there are no missing values in the dataframe
758	Data preparation for test
753	Dealing with missed variables
399	Start by pivoting the DataFrame to explore the label distribution over slices
293	Top Features Selection
126	Showing Confusion Matrices
736	Try the demo model
824	Some Feature Engineering
273	Bounded region of parameter space
333	most important or common positive words
251	Convolutional Neural Network
169	FS with the Pearson correlation
804	Difference varialbes were created to describe the difference beween maximum and minimum value
127	Divide features into groups
137	Display a random sample of train images by class
287	Visualizing Interest Level Vs Hour
783	Check the dataset
872	Save some memory
233	Encoding Street Names
0	Load the metadata of each file
53	Predict submission dates
299	No Of Storeys Vs Log Error
441	Example of Sampling from the Domain
158	Thanks for the example of ensemling different models from
503	Split into training and validation groups
168	Thanks to Automatic FE The main code for basic FE
210	CatBoost Pool and Regression
722	Compare timing for CutMix
357	Same series of charts but for returns
631	Split Trian and Valid
216	Fitting Logistic Regression with OneVsRest Classifier
35	The data is not balanced
442	Learning Rate Distribution
408	Redundant Household Variables
843	LOAD PROCESSED TRAINING DATA FROM DISK
172	Load data files
63	See predicted result with images
742	Get labels and their countings
832	Load train and test dataframes and add length columns for Description and Name
37	Ability to Detect Face
782	This parted was taken from the helpful kernel
122	Its also builds on kernel functions but is appropriate for unsupervised learning
861	We can see above the counts of higher damageDealt smoothly decrease
125	Prepare Training Data
536	Get important features according to SHAP
680	Fitting the trend on the yearly time series
109	Test Input Pipeline
554	Visualize test processed samples , resize
660	Adding some lag feature
393	Hit Rate and Charge Distribution
692	Making Vocabulary and Text Conversion
389	Use Ad Image to Identify Item Category
425	Empirical Cumulative Distribution Function Plot
165	Create the submission csv file
194	Idea is to use clustering on images of one type to group data
697	Number of Patients and Images in Training Images Folder
91	Zoom on the second level
698	Number of Patients and Images in Test Images Folder
386	Draw network graph to see which ingredients are linked together
699	Create Image Augmentation Generator
744	Define the number of repetitions for each training example
711	Using all features for model training
25	Predicting for test data
256	Checking the Imbalance of Target Variable
135	How many images are in each folder
535	SHAP Interaction Values
343	Imputing missing values
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
275	When Do People Generally Order
830	Inspect the data at different time scale
380	Import necessary libraries
98	Can we get some informations out of the item description
54	Using LabelEncoding we just change string values to numbers
835	The Definition of Opacity
864	Relationships betweeen the sets
481	Read in Data and Create Smaller Datasets
378	y hist with defferent timestamps are similar
427	Calculate Distance between points using Haversine distance
46	Submission data prediction
860	Explore distribution of single variable
36	Take a look at predictions
100	Can the length of the description give us some informations
833	What Does a Normal Image Look Like
791	Show some examples of different mask
328	Select the models to run setting bool variables below
710	Make prediction and apply invert scaling
719	Create Inference Dataset
265	Apply reduction on some samples and visualize the results
453	Numeric Aggregation Function
134	Using my notebook
579	Refit and Submit
752	Show influence of economical factors on housing prices
139	Create a Directory Structure
525	Initialize train and test DataFrames to access IDs and depth information
478	Plots of Hyperparameters vs Score
520	load mapping dictionaries
385	Predict test set and make submission
367	How much does this trust interval change over the real value for kappa
490	Function to Handle Categorical Variables
153	Set Up the Generators
834	What are Lung Opacities
48	FVC Progression by SmokingStatus
143	Create a Confusion Matrix
805	Here is a base model without parameter tuning .
731	Try to load the latest checkpoint
714	Apply invert scaling
61	Prepare Testing Data
209	Data load and process functions
56	Using embedding in NN we can change dimensionality of categorical features
656	Leak Data Validation
261	Merging the bureau dataset along with application train dataset to do more analysis
849	Add train leak
254	Function for find out Numerical and categeical Variables
614	Comparing various kappa scoring
93	Which brands are most expensive
565	TPU Strategy and other configs
865	Feature primitives Basically which functions are we going to use to create features
726	Visualising the distribution of each product by age by boxplot
16	Look at the data types and some basic info about the different columns
94	More details on brands with a treemap
648	FIX Time Zone
128	Showing Confusion Matrices
540	Gaussian Approximation of Active Cases
883	Displaying sample image by host
52	Train on full data
398	Show Original Image
727	Distribution of product among different genders
118	Join data , filter dates and clean missings
155	Define X and y
673	Dense Added Model
409	Creating Ordinal Variables
22	Seed everything for reproducibility
651	Replace to UCF and UCL data
702	process test images
43	Unique value counts
435	Try with All Time Variables
55	We should split our dataset to create validation and train parts
685	targets in labels.csv
68	You can state below link to your copy of this MMDetection repo
696	View Single Image
397	Here is the distribution of the maximum value for the remaining features
567	Load Model into TPU
767	Make new features using continuous feature
842	Ensure determinism in the results
86	Dealing with color
738	Get variables to apply weight decay in AdamW optimizer
171	FS with SelectFromModel and RandomForestRegressor
396	All Zero Features
72	How many different values does our categorial variables take
284	Visualizing Interest Level Vs Price
694	Count game trainsition
845	LOAD DATASET FROM DISK
350	Predict on test set
207	Defining our Model
677	Most of the dates overlap
29	Data is still small enough for memory so read to memory using pandas
612	Infer using trained model
230	Variable Description , Identification , and Correction
214	Word map for most frequent Tags
582	Load and process data
306	Let us read the masks
808	Explore ip counts
224	Meter Readings over time And Primary Use
679	Rolling monthly and yearly store means
179	Some stats using jpg exif
15	Maybe if we used the log plot things would be better
73	What proportion of click generate downloads
38	Loading data etc
777	Load and preprocess data
882	We can safely store the two types into separate dataframes
683	Next , we will make prediction with our LR Model
390	Price Variance Within Identified Items
775	Remove feature with only one value
115	Parameters and LB score visualization
542	inspect training samples
202	Using RandomForest Classifier
537	Examining the Growth Curves
592	Load and preprocess data
223	Meter Readings over time
515	Define helper functions
643	Adding some lag feature
666	There is a gap between them
162	Plot the Loss Curves
528	Perform check on randomly chosen mask and prediction
203	Confusion Matrix for Train Data Predictions
616	Result of my new models
67	Saving the model
277	When Do People Generally Reorder
667	We will also evaluate the position of the data points using the coordinates
620	Validation on real world data
497	Function for KDE Plots of Variable
372	Check if valid data looks all right
131	Code from notebook
876	Applying it on text
411	In most cases , the values are very similar
492	Aggregated Stats of Bureau Balance by Client
569	First downsize all the images
790	the difficuly of training different mask type is different
801	Predict all province greater than
874	Reading in the data , as usual
415	Next we can rename the columns to make it easier to keep track
351	Bookings per day of week
71	I updated importation for a faster version
443	Distribution of all Numeric Hyperparameters
556	Process test data in parallel
237	Loading the data
376	y的异常值 drop samples which have exception value in y
455	Combined Aggregation Function
642	FIX Time Zone
502	Monthly Credit Data
848	Find final Thresshold
235	Seting X and Y
868	Let us split the variables one more time
827	At the scale of stores
26	Load pneumonia locations
2	Seems like a very wide range of values , relatively spaking
342	We can finally define the CNN architecture
391	Price Variance in param
361	Create dataframe listing the starting date of lockdowns
817	Start positions and end positions of selected texts in tokenized source texts
205	Transformations and Data Augmentation
19	The Shape of the Data
686	targets in train.csv
7	Now there appears to be one feature that is not gaussian
644	Train model by each meter type
324	Spain since first recorded case
649	Adding some lag feature
96	What are the most expensive items
529	Run length encoding to reduce predictions size
157	Its also builds on kernel functions but is appropriate for unsupervised learning
707	Split into train and test sets
477	Hyperparameters versus Iteration
247	Document Vectors with HashingVectorizer
803	Impact of bmi over old and young patients
483	Plot for a sanity check
863	NOTE Even tough it is automatic , we can incorporate some manual features
786	Predict null data based on statistical method
278	How many orders users generally made
456	Aggregate Grandchild Data Tables
880	Evaluate the Model
292	Create final submission DF
405	Exploring Label Distribution
308	Let us plot some bounding boxes right from the dictionary we just created
717	Create dataset for training and Validation
263	Paths to data and metadata
297	Bathroom Count Vs Log Error
462	Hyperparameter Tuning Implementation
225	Square feet size is positively Skewed
705	we add some squared features for some model flexability
469	Testing Results on Full Data
836	Opacities That Are Not Related to Pneumonia
551	Inspection of created samples , without normalization
509	Read the data
636	Ploting one sample with the corresponding error as error bars
283	Visualizing Outliers In Data
737	Choose the model to use
820	Write a problem file
353	Bookings by month
108	Read the data
466	Distribution of Search Values
170	FS with SelectFromModel and LinearSVR
64	Split the data into train and validation parts
606	Interest based on geographical location
432	Explore Time Variables
238	Librairies and data
13	And now we embed each chunk individually
402	Demonstration how it works
741	An example usage
839	The evaluation method
881	Load CSV files
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
423	Submitting our Predictions
609	Losses and Metrics
555	Process train data in parallel
771	Tabulet per family features
279	Best Selling Products
107	Import Required Libraries
329	Calculating the day when the number of infected individuals is max
302	Loading and preprocessing data
496	Function to Calculate Categorical Counts
459	Aggregate Installments Data
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
236	Which Team Wins And Lost The Most Championships
787	Onehot encoding for categorical data
511	Split comments into array of words
545	Finally , we are ready to load the whole series into one matrix
559	Outlier Analysis and Feature Scaling
440	Complete Bayesian Domain
884	After we impute it , we can observe standard fluctuation
163	Make a Prediction
349	Feature Agglomeration Results
837	If you like the content of this notebook , please consider upvoting it
182	Manager function to call the create features functions in multiple processes
604	Create test generator
809	Conversions by App
852	Function which creates final video from list of images
851	Function which creates set of images for each axis
211	CatBoost is RAM expensive so I prefer to utilize GPU
708	Convert an array of values into a dataset matrix
92	Prices of the first level of categories
269	Load data and fit some models
668	Model Evaluation and Validation
358	Read the csv files from kaggle
31	Initialize Mobilenet Face Extractor
728	Hugging Face pretrained Bert model names
779	Check null data
486	Putting it all Together
160	Initialize the generators
117	Implementing the SIR model
280	Top Reordered Products
274	Lets Read In Data Files
854	Predict on test
792	Null data check
713	Split into train and test sets
382	Let take some small visualizations with these bool features
3	Imputations and Data Transformation
430	Train with Simple Features
97	Does shipping depends of price
879	RF for feature selection
271	Visualize the feature interaction
21	Importing all Libraries
177	Basic skin detection
110	Apply Logistic Regression
544	inspect datagen output
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
670	Importing Library Files
