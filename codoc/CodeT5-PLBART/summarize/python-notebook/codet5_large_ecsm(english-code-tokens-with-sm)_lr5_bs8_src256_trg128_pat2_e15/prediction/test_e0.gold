796	Get data from
451	Identify Correlated Variables
119	Compute lags and trends
7	Now there appears to be one feature that is not gaussian
92	Prices of the first level of categories
826	cut down features to avoid the kernel die
596	Save model and best hyperparams
35	The data is not balanced
687	These labels are not in train
709	Create dataset with look back
85	We can now print the results
100	Can the length of the description give us some informations
784	Moving average is so simple
363	Create variables of interest
242	Loading the data
17	Do some simple plots for exploration
31	Initialize Mobilenet Face Extractor
807	Only a small proportion of clicks were followed by a download
16	Look at the data types and some basic info about the different columns
354	Interactive booking , click , and percentage of booking trends with Bokeh
663	what already is known
638	evaluation solved tasks
495	Function to Aggregate Numeric Data
630	Pick some frames to display
474	Align Train and Test Sets
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
93	Which brands are most expensive
187	Display some of similar cars
730	Choose the model to use
117	Implementing the SIR model
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
515	Define helper functions
498	Function to Convert Data Types
255	Identifying Missing Value Present in Application Train Dataset
66	Counting the metric score
683	Next , we will make prediction with our LR Model
554	Visualize test processed samples , resize
477	Hyperparameters versus Iteration
70	Hist Graph of scores
615	Relevant attributes of identified objects are stored
691	Loading and Visualization of Data
91	Zoom on the second level
527	Define data loading
592	Load and preprocess data
47	FVC Progression by Sex
276	At What Day Of The Week People Order
569	First downsize all the images
64	Split the data into train and validation parts
660	Adding some lag feature
309	Let us load one image and its masks
492	Aggregated Stats of Bureau Balance by Client
871	Let us proceede with further interesting EDA
272	Visualize the default split and gains for all models
851	Function which creates set of images for each axis
671	Binary Focal Loss
204	Confusion Matrix for Test Data Predictions
464	Grid Search Implementation
542	inspect training samples
681	Merge seed for each team
19	The Shape of the Data
520	load mapping dictionaries
72	How many different values does our categorial variables take
5	Detect and Correct Outliers
341	Build the Model
147	Make a prediction on the test images
727	Distribution of product among different genders
484	Previous Credit and Cash
673	Dense Added Model
386	Draw network graph to see which ingredients are linked together
171	FS with SelectFromModel and RandomForestRegressor
55	We should split our dataset to create validation and train parts
78	How many times , each categories of clickers download the app
601	Create new labels
508	Income distribution and target value
167	How to make a generator run infinitely
77	Does standard users download the app
570	Create real file paths dataframe
220	Weekday and Meter Reading
820	Write a problem file
27	GPU version It is just function verification , not for performance evaluation
865	Feature primitives Basically which functions are we going to use to create features
789	Target , prediction process
113	FS with the Pearson correlation
827	At the scale of stores
144	Create a Classification Report
686	targets in train.csv
312	Train a simple CNN architecture
465	First , we need to put our data into a long format dataframe
40	Preparing the training data
426	Rides on Map of NYC
283	Visualizing Outliers In Data
678	Adding categorical features
41	Training on the complete Dataset now
181	Thanks for the example of ensemling different models from
278	How many orders users generally made
158	Thanks for the example of ensemling different models from
307	So a unique operator will give us the unique filenames that contain ships
803	Impact of bmi over old and young patients
475	Distribution of Scores
42	Data loading and checking
576	Load Model into TPU
395	Correlation with Deal Probability
782	This parted was taken from the helpful kernel
357	Same series of charts but for returns
507	Granted applications per number of children
349	Feature Agglomeration Results
878	Replace infs and imputing missing values by mean
479	Now for the next four hyperparameters versus the score
487	Kernel Density Estimate Plots
46	Submission data prediction
482	Properly Representing Variable Types
609	Losses and Metrics
174	Genetic program model , main code loop
450	Admit and Correct Mistakes
751	Putting the principles in practice
531	Create DFs imitating public and private test subsets
448	Standard imports for data science work
302	Loading and preprocessing data
281	Which item do people put into the cart first
126	Showing Confusion Matrices
190	Code from here and below is commented out because the kernel dies
795	You only have two areas to work on
446	Random Search on the Full Dataset
122	Its also builds on kernel functions but is appropriate for unsupervised learning
801	Predict all province greater than
105	Loading the files
496	Function to Calculate Categorical Counts
385	Predict test set and make submission
672	Efficient Net Architecture
261	Merging the bureau dataset along with application train dataset to do more analysis
656	Leak Data Validation
196	Newer products or products from newer stores are shorter than the oldest ones
353	Bookings by month
110	Apply Logistic Regression
719	Create Inference Dataset
716	Make a Baseline model
160	Initialize the generators
594	Load and preprocess data
275	When Do People Generally Order
787	Onehot encoding for categorical data
737	Choose the model to use
331	Full data Analysis
457	Merge with the main dataframe
744	Define the number of repetitions for each training example
823	Import libraries and data , reduce memory usage
80	Download rate by hour
404	Read in Data and Look at Summary Information
219	Meter Reading and Meter Type
48	FVC Progression by SmokingStatus
293	Top Features Selection
38	Loading data etc
224	Meter Readings over time And Primary Use
518	Loading the data
89	Combine it into a single function
749	Random Forest model
324	Spain since first recorded case
798	Predict by Specify Province
471	DFS with Selected Aggregation Primitives
67	Saving the model
599	Will need those folders later for storing our jpegs
263	Paths to data and metadata
74	Zoom on this IP
705	we add some squared features for some model flexability
436	Visualize Validation Predicted Target
206	Converting the Input images to plot using plt
103	Generating Graph Matrices from the Structures
406	Addressing Wrong Labels
199	Using DecisionTree Classifier
470	DFS with Default Primitives
512	Choose and train a classifier
241	MERGE , MISSING VALUE , FILL NA
369	using outliers column as labels instead of target column
210	CatBoost Pool and Regression
842	Ensure determinism in the results
431	Use More Features
178	Apply skin segmentation on all training data and visualize the result
598	Load Model into TPU
208	Use the images from our validation dataset to check the precdictions
835	The Definition of Opacity
61	Prepare Testing Data
360	Transpose the dataframes
547	This images from validation data seem to be really strange labeled ...
156	Create a submission file
511	Split comments into array of words
562	OSIC training data Example
483	Plot for a sanity check
821	Plot the obtained tour
142	What is the AUC Score
134	Using my notebook
49	Count occurance of words
639	All train tasks predictions
169	FS with the Pearson correlation
148	Create a submission file
559	Outlier Analysis and Feature Scaling
71	I updated importation for a faster version
333	most important or common positive words
175	Get the dupplicate clicks with different target values
1	Testing Time Augmentation
684	Sampling the train data since too much data
62	Create Testing Generator
653	FIX Time Zone
731	Try to load the latest checkpoint
151	Train Test Split
222	Primary Use and Meter Reading
884	After we impute it , we can observe standard fluctuation
443	Distribution of all Numeric Hyperparameters
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
332	Seperating the data into different data frame based on the labels
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
390	Price Variance Within Identified Items
286	Visualizing Interest Level Vs Bedrooms
550	Mismatches on a validation data
647	Leak Data loading and concat
311	For the same window we superimpose the masks above the image
432	Explore Time Variables
326	USA since first case
591	Inference on Test Set
155	Define X and y
545	Finally , we are ready to load the whole series into one matrix
95	What are their top categories
266	Hit Rate Bar Chart
284	Visualizing Interest Level Vs Price
420	Visualize Tree with No Maximum Depth
409	Creating Ordinal Variables
578	Adding mode as feature
794	Logistic Regression seems to be a good classification algorithm for this dataset
538	New Daily Cases
116	Ensembling the solutions and submission
384	Ordinal features mapping
280	Top Reordered Products
741	An example usage
304	Text Processing of text data easily
812	Conversions by Channel
407	Families without Heads of Household
53	Predict submission dates
781	Credit day prolong
883	Displaying sample image by host
238	Librairies and data
502	Monthly Credit Data
693	Making Feature Matrices
389	Use Ad Image to Identify Item Category
315	We can now create a submission file
2	Seems like a very wide range of values , relatively spaking
75	What proportion of IP download the app
491	Putting the Functions Together
738	Get variables to apply weight decay in AdamW optimizer
305	Thx Stackoverflow for realization
439	The number of leaves on the other hand is a discrete uniform distribution
640	Fast data loading
764	Check the dataset
410	Per Capita Features
489	Function for Numeric Aggregations
748	Results from my own training
288	Bedrooms Vs Bathrooms Vs Interest Level
605	Inference on test set
378	y hist with defferent timestamps are similar
614	Comparing various kappa scoring
804	Difference varialbes were created to describe the difference beween maximum and minimum value
211	CatBoost is RAM expensive so I prefer to utilize GPU
173	Set up the folds for cross validation
769	Room per family features
581	The filtration step for RGB images may take a lot of time
468	Sequence of Search Values
485	Create Custom Feature Primitives
28	Define a Convolutional Neural Network following Yoon Kim model
777	Load and preprocess data
106	plotting the scan
805	Here is a base model without parameter tuning .
375	The following is features with fine hist
776	Feature selection using shap
850	Add leak to test
143	Create a Confusion Matrix
602	Pad and resize all the images
339	Load and Explore Data
649	Adding some lag feature
296	Bedroom Count Vs Log Error
863	NOTE Even tough it is automatic , we can incorporate some manual features
597	Create Dataset objects
338	Import Packages and Functions
872	Save some memory
300	Gaussian Noise on Target
861	We can see above the counts of higher damageDealt smoothly decrease
717	Create dataset for training and Validation
521	add breed mapping
285	Visuallizing Interest Level Vs Bathroom
723	Compare timing for MixUp
546	Custom LR schedule
707	Split into train and test sets
347	Random Forest Regressor
522	extract different column types
342	We can finally define the CNN architecture
328	Select the models to run setting bool variables below
469	Testing Results on Full Data
273	Bounded region of parameter space
86	Dealing with color
539	Exponential Growth Curves
561	Add the actors to the renderer , set the background and size
761	Predictions class distribution
251	Convolutional Neural Network
724	Compare timing for GridMask
380	Import necessary libraries
140	Set Up the Generators
29	Data is still small enough for memory so read to memory using pandas
694	Count game trainsition
734	Run on test dataset
45	test prediction by LGBM and feature importance check
213	Importing necessary libraries
745	A method to get oversampled training dataset
320	Replacing Mainland china with just China
528	Perform check on randomly chosen mask and prediction
833	What Does a Normal Image Look Like
444	Evolution of Search
711	Using all features for model training
846	The mean of the two is used as the final embedding matrix
728	Hugging Face pretrained Bert model names
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
497	Function for KDE Plots of Variable
733	Get metrics for validation dataset
356	a quick check if demand distribution changes week to week
516	Predict validation and test set masks
84	The magical function
18	Getting to Know the Data
611	Load Test dataframe
235	Seting X and Y
166	What is a python generator
633	Plotting errors for one sample
701	process training images
613	Reproducing simple baseline
666	There is a gap between them
69	Make a simple restart of runtime at this point
149	Create Binary Targets
544	inspect datagen output
249	Keras Tokenizer API
168	Thanks to Automatic FE The main code for basic FE
732	Run on validation dataset
517	Train the LGBM model
402	Demonstration how it works
334	Most important or common negative words
132	Training prediction result visualization
742	Get labels and their countings
792	Null data check
584	Build datasets objects
571	Load and freeze DenseNet
377	Divide the test set and the training set
418	Comparing Model Performance
579	Refit and Submit
740	Check saved checkpoints
321	Now a look at Italy
233	Encoding Street Names
202	Using RandomForest Classifier
627	Blend and smooth for submission
533	differences between public and private test
388	A good item price binning should be based on the price distribution
504	Prediction for one image
650	Train model by each meter type
30	And finally lets look at the class distribution
458	Aggregate previous loans at Home Credit
82	Number of clicks from the IP during the last minute
604	Create test generator
721	Prediction for test
348	Dimensionality Reduction Techniques
682	Train Our Linear Regression Model
568	Create fake filepaths dataframe
247	Document Vectors with HashingVectorizer
529	Run length encoding to reduce predictions size
365	Show one Example of landmark images
543	inspect validation samples
424	Data Exploration and Data Cleaning
875	Now that we have dataset in desired form , i.e
76	Does bots download the app
563	Predict Test Set and Submit Result
217	Importing Packages and Collecting Data
201	Confusion Matrix for Test Data Predictions
800	Predict all country greater than
256	Checking the Imbalance of Target Variable
758	Data preparation for test
726	Visualising the distribution of each product by age by boxplot
345	Exploratory Data Analysis
466	Distribution of Search Values
130	My upgrade of parameters
689	TPU Strategy and other configs
817	Start positions and end positions of selected texts in tokenized source texts
25	Predicting for test data
480	First we need to format the data and extract the labels
467	The following code repeats this plot for all the of the numeric hyperparameters
788	Prediction with xgboost
239	MERGE , MISSING VALUE , FILL NA
185	How many different cars in train dataset
306	Let us read the masks
373	missing value statistics
635	Averaging over all instances with standard deviation as errorbar
806	this graph is adapted from
203	Confusion Matrix for Train Data Predictions
607	Reducing Image Size
398	Show Original Image
188	Display some of similar cars
882	We can safely store the two types into separate dataframes
146	Set up the generator
4	Impute any values will significantly affect the RMSE score for test set
460	Aggregate Cash previous loans
632	This plot shows summarized information about feature impact against shap output
298	Room Count Vs Log Error
136	Create a Dataframe containing all images
722	Compare timing for CutMix
790	the difficuly of training different mask type is different
499	Function to Calculate Missing Values
514	Now predict the result for each toxic level
442	Learning Rate Distribution
111	Comparison of the all feature importance diagrams
668	Model Evaluation and Validation
292	Create final submission DF
303	Preprocessing of features
189	Define some constants for data location
746	Check oversampled dataset
94	More details on brands with a treemap
164	Process the Predictions
848	Find final Thresshold
595	Unhide below to see all trials results
429	Create Training and Validation Set
139	Create a Directory Structure
364	Compare our forecast with actual evolution both for training and validation sets
355	expanding the aggregate
329	Calculating the day when the number of infected individuals is max
90	So , some categories are expensive , but most are cheap
536	Get important features according to SHAP
590	Running the model on a Sample Image
768	Ratio feature can have infinite values
876	Applying it on text
501	Monthly Cash Data
566	Create Dataset objects
209	Data load and process functions
587	Load text data into memory
98	Can we get some informations out of the item description
227	Encoding Categorical Variable
797	Add active column
763	Now , we can downcast numeric columns in the same way
573	Save model and weights
372	Check if valid data looks all right
849	Add train leak
791	Show some examples of different mask
379	Save objects for next step
526	Set data loading parameters
416	Machine Learning Modeling
433	We can make the same plot by day of the week
454	Categorical Aggregation Function
271	Visualize the feature interaction
248	Document Vectors with hashing trick
816	Use machine learning model
509	Read the data
679	Rolling monthly and yearly store means
246	Document Vectors with TfidfVectorizer
423	Submitting our Predictions
245	Create Document Vectors
585	Load model into the TPU
648	FIX Time Zone
370	Check Unique Label
862	Getting Prime Cities
411	In most cases , the values are very similar
376	y的异常值 drop samples which have exception value in y
494	Calculate Information for Testing Data
316	Display train and test signals
52	Train on full data
519	and batch aggregations examples for the rest of the tables ..
780	Credit day overdue
270	Fit an XGBoost classifier model
205	Transformations and Data Augmentation
773	combination using three features
65	Create and set up the model
54	Using LabelEncoding we just change string values to numbers
401	Examples of different hemorrhage subtypes
240	Loading the data
552	Inspection of created samples , with normalization
695	Visualize by heatmap
279	Best Selling Products
600	Saving as JPEG
811	Conversions by Device
394	Initial Position and Momentum
131	Code from notebook
453	Numeric Aggregation Function
610	Training the model
36	Take a look at predictions
815	Judge machine learning model
200	Confusion Matrix for Train Data Predictions
150	Balance the target distribution
828	Perspective of Time
838	Composition of functions
445	Applied to Full Dataset
207	Defining our Model
655	Train model by each meter type
96	What are the most expensive items
310	Now we can read the masks for the specific image
870	That is the size of one test example that we ought to predict
421	Lets first check the Train Target Distribution
392	Affected Surface Object
756	Set Model for prediction
163	Make a Prediction
226	Imputing Missing variable
268	Interpreting ROC Plot
814	Calculate extra features for test set
839	The evaluation method
237	Loading the data
43	Unique value counts
580	Plotting some random images to check how cleaning works
101	Is there a correlation between description length and price
461	Aggregate Credit previous loans
830	Inspect the data at different time scale
403	Combinations of TTA
88	Convert each labeled object to Run Line Encoding
193	Visualization of a single batch
771	Tabulet per family features
463	Learning Rate Domain
102	Data Info Method
135	How many images are in each folder
15	Maybe if we used the log plot things would be better
739	Try to load the latest checkpoint
606	Interest based on geographical location
161	Set up the Model Architecture
308	Let us plot some bounding boxes right from the dictionary we just created
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
23	Defining DataBunch for FastAI
620	Validation on real world data
778	Wiki News FastText Embeddings
133	Using my notebook
513	Now train the models with a partial fit approach
165	Create the submission csv file
772	phone per family features
157	Its also builds on kernel functions but is appropriate for unsupervised learning
473	Remove Low Importance Features
879	RF for feature selection
295	No Of Storey Over The Years
524	KFold LGB model training
874	Reading in the data , as usual
192	Load tabular data and create new features
535	SHAP Interaction Values
486	Putting it all Together
692	Making Vocabulary and Text Conversion
608	Save results as CSV files
799	Predict by Specify Country
145	MAKE A TEST SET PREDICTION
162	Plot the Loss Curves
808	Explore ip counts
127	Divide features into groups
79	Attributed time analysis
99	What words do people use
344	Looks like there are no missing values in the dataframe
231	City and Time features
408	Redundant Household Variables
430	Train with Simple Features
836	Opacities That Are Not Related to Pneumonia
510	Check the typical length of a comment
172	Load data files
399	Start by pivoting the DataFrame to explore the label distribution over slices
137	Display a random sample of train images by class
455	Combined Aggregation Function
548	Load Model into TPU
708	Convert an array of values into a dataset matrix
294	Dependent variable logerror follows nice normal distribution
252	Recurrent Neural Network
368	filtering out outliers
765	Check null data
845	LOAD DATASET FROM DISK
506	Locating a face within an image
83	Importation of a entire day data
712	Function to convert series to supervised learning
323	China scenario since first entry
869	Train the model , predict , etc
488	Correlations of Aggregated Values with Target
374	Exception value processing
427	Calculate Distance between points using Haversine distance
490	Function to Handle Categorical Variables
456	Aggregate Grandchild Data Tables
759	Convert DCM to PNG
867	NaN imputation will be skipped in this tutorial
337	It fills our perfect submission with n randomly distributed random answers i.e
12	Roc AUC curve
766	roof and electricity
397	Here is the distribution of the maximum value for the remaining features
877	Read and Explore
32	The data is not balanced
623	Creating submission file
125	Prepare Training Data
195	Test on the data that is not seen by the network during training
438	Now we can evaluate the baseline model on the testing data
194	Idea is to use clustering on images of one type to group data
121	Ridge Regression for one country
154	Plot the Training Curves
262	analyzing the numerical features disturbion in previous application dataset
810	Conversions by OS
265	Apply reduction on some samples and visualize the results
540	Gaussian Approximation of Active Cases
700	Get Tabular Data
525	Initialize train and test DataFrames to access IDs and depth information
667	We will also evaluate the position of the data points using the coordinates
13	And now we embed each chunk individually
335	Most important or common words in neutral data
880	Evaluate the Model
73	What proportion of click generate downloads
641	Leak Data loading and concat
352	Bookings by year
654	Adding some lag feature
503	Split into training and validation groups
662	Replace to UCF data
760	Split training set
299	No Of Storeys Vs Log Error
736	Try the demo model
250	Creating the Model
757	Test data preparation
629	This is a simple modify from
68	You can state below link to your copy of this MMDetection repo
774	Mix region and education
340	Create the embedding layer
714	Apply invert scaling
697	Number of Patients and Images in Training Images Folder
669	They are very similar to each other
752	Show influence of economical factors on housing prices
33	Check Validation Log Loss
567	Load Model into TPU
855	Loading libraries and data
532	train and test rows fraction intersection
343	Imputing missing values
34	Apply Underbalancing Techinique
819	For neutral samples , use original texts as they are
747	Common things for training
583	Load text data into memory
725	Data Loading and Cleaning
715	These have their kitchen area larger than the total area of the house
476	Score versus Iteration
428	The test distribution seems to be similar to the training distribution
260	Checking the Correlation Between The Features for Application Train Dataset
108	Read the data
87	Deriving individual masks for each object
500	Function to Aggregate Stats at the Client Level
625	Predict with pure text models
577	Group and Reduce
313	Training and callbacs
327	Getting population for each country
0	Load the metadata of each file
462	Hyperparameter Tuning Implementation
244	Splitting train into training and validation set
541	load mapping dictionaries
225	Square feet size is positively Skewed
396	All Zero Features
841	Solve the task
57	We should give CatBoost names of categorical features
215	Featurization of Training Data
141	Plot the Training Curves
350	Predict on test set
675	Construct the graph and plot it
387	Remove Extreme Prices
289	Correlation Between Price and Other Features
440	Complete Bayesian Domain
112	Thanks to Automatic FE The main code for basic FE
60	See how our generator work
359	Read the csv files on the Johns Hopkins CSSE database on github
405	Exploring Label Distribution
642	FIX Time Zone
618	Other columns are the digital value of pixels of kannada mnist
831	Disable fastai randomness
317	removing columns where correlation is high
107	Import Required Libraries
564	A simple function from stack overflow that crops the image
560	and background color definition
622	Display the dropped images
652	Fast data loading
63	See predicted result with images
449	Now we want to combine the data without creating any duplicate rows
415	Next we can rename the columns to make it easier to keep track
197	Now , the clusters will be created using just the test set
493	An important consideration is the missing values in the dataframe
612	Infer using trained model
184	Display a single car with its mask
558	Exploratory Data Analysis
124	Parameters and LB score visualization
813	Preparing the data
120	Add country details
523	Prepare for training
754	Starting importance variables evaluation
822	Made a mask using the tour
290	Main Config Variables
565	TPU Strategy and other configs
346	Modeling and Prediction
868	Let us split the variables one more time
115	Parameters and LB score visualization
729	Make TF record file for test dataset
301	Composition of Augmentations
685	targets in labels.csv
381	Density plot of numeric features
434	Test Time Features
530	Map extracted timestamps to columns
10	Text preprosesing source
770	BedRoom per family features
873	What should good EDA be capable of
793	It seems Goblins are a little similar to Ghouls
549	Finding best alpha
589	Load model into the TPU
44	Unique count of Categorical values
702	process test images
478	Plots of Hyperparameters vs Score
214	Word map for most frequent Tags
856	You can choose many palettes , which makes the graphs visually nice
383	High cardinality features
58	Prepare Traning Data
866	Label encoding Making it machine readable
651	Replace to UCF and UCL data
97	Does shipping depends of price
8	Read data set
735	Hugging Face pretrained Bert model names
314	Prediction on test set
703	process submission images
128	Showing Confusion Matrices
881	Load CSV files
670	Importing Library Files
505	Train and validate
371	Non physical data augmentation
282	Visualizing Distribution Of Price Before and After Removing Outliers
221	Time of Day and Meter Reading
636	Ploting one sample with the corresponding error as error bars
11	Model Validation on train data set
191	Lets validate the test files
123	Thanks for the example of ensemling different models from
593	Evaluate training history
631	Split Trian and Valid
775	Remove feature with only one value
59	See sample image
159	Load the pre processed data
574	Padding process and resizing with OpenCV
216	Fitting Logistic Regression with OneVsRest Classifier
277	When Do People Generally Reorder
287	Visualizing Interest Level Vs Hour
414	Feature Engineering through Aggregations
114	FS with SelectFromModel and LinearSVR
624	Build the original and translated test data
472	Visualize Distribution of Correlated Variables
661	Train model by each meter type
553	Visualize processed samples , resize
228	Prediction and Submission
699	Create Image Augmentation Generator
362	Join all dataframes
229	Importing Packages and Collecting Data
720	Define dataset and model
322	Comparison between Brazil and Italy
441	Example of Sampling from the Domain
840	Is a program solution
179	Some stats using jpg exif
626	Predict with mixed language models
664	make hour column from transactionDT
551	Inspection of created samples , without normalization
575	Pad and resize all the images
218	Variable Description and Identification
258	Analysis Based on EXter Source Types
459	Aggregate Installments Data
644	Train model by each meter type
24	Unfreeze all layers and find best learning rate
20	Visualizing Raw Variables
361	Create dataframe listing the starting date of lockdowns
659	Leak Data loading and concat
9	Target varaible distribution
104	Graph Representation of RNA structure
435	Try with All Time Variables
56	Using embedding in NN we can change dimensionality of categorical features
234	Encoding Cordinal Direction
422	Filling missing and infinite data by zeroes
366	Data Exploration The label distribution shows clear label imbalance
291	Resnext initialize functions
690	Get Model into TPU
351	Bookings per day of week
628	Ensemble with my historical best
785	Find Null data
336	and target vector that correspond to the test data size
844	SAVE DATASET TO DISK
118	Join data , filter dates and clean missings
177	Basic skin detection
645	Replace to Leak data
657	Find Best Weight
706	Random Search Confidence
713	Split into train and test sets
50	All contraction are known
297	Bathroom Count Vs Log Error
680	Fitting the trend on the yearly time series
762	Divide data into training and validation sets
417	The data has no missing values and is scaled between zero and one
182	Manager function to call the create features functions in multiple processes
81	Last click from the IP analysis
688	train valid split
572	Creating and Training the Model
634	Some correlation is indeed present
153	Set Up the Generators
588	Build datasets objects
755	Best parameters are searched by GridSearchCV on my Laptop
481	Read in Data and Create Smaller Datasets
269	Load data and fit some models
198	The number of samples in each cluster is the following
852	Function which creates final video from list of images
809	Conversions by App
786	Predict null data based on statistical method
783	Check the dataset
556	Process test data in parallel
425	Empirical Cumulative Distribution Function Plot
138	Balance the target distribution
318	Trivial segmentation stuff
223	Meter Readings over time
617	Import the modules
325	Iran since first case
864	Relationships betweeen the sets
170	FS with SelectFromModel and LinearSVR
22	Seed everything for reproducibility
586	Create fast tokenizer
367	How much does this trust interval change over the real value for kappa
264	Group signals metadata accroding to target
837	If you like the content of this notebook , please consider upvoting it
829	Other special events
718	CNN Model for multiclass classification
39	Show and save column comparision matrix and save row sets
696	View Single Image
186	Display similar cars
555	Process train data in parallel
603	Focal loss is good for unbalanced datasets , like this one
447	Bayesian Optimization on the Full Dataset
176	Display all test images
834	What are Lung Opacities
109	Test Input Pipeline
382	Let take some small visualizations with these bool features
413	For example , we can divide the years of schooling by the age
537	Examining the Growth Curves
843	LOAD PROCESSED TRAINING DATA FROM DISK
860	Explore distribution of single variable
753	Dealing with missed variables
825	Stacking models and training
619	Check some augmentation effect
658	Fast data loading
779	Check null data
437	Evaluate Best Model from Random Search
802	Age distribution of male and female patients
743	Define the number of repetitions for each class
676	Then transform to a datetime object supposing that it is an ordinal datetime
183	Here is a plot of sorted category counts
637	train solved tasks
646	Fast data loading
582	Load and process data
232	Total Time Stopped
698	Number of Patients and Images in Test Images Folder
254	Function for find out Numerical and categeical Variables
847	The method for training is borrowed from
710	Make prediction and apply invert scaling
21	Importing all Libraries
452	Drop Correlated Variables
621	Drop the blurry image
412	Redundant Individual Variables
6	No surprises , since this is all presumably artificial data
243	Training the model on CPU
180	Its also builds on kernel functions but is appropriate for unsupervised learning
853	Create Magic features
674	OUTPUT OF AUGMENTATED IMAGES
37	Ability to Detect Face
616	Result of my new models
704	process tabular features
665	At first , I made Europe future
3	Imputations and Data Transformation
818	This notebook will deal with positive , negative and neutral samples independently
253	Importing The Dataset
857	Plot several examples of input images
557	Load Packages and Data
26	Load pneumonia locations
257	Types Of Features
230	Variable Description , Identification , and Correction
319	Some сustom Loss functions
358	Read the csv files from kaggle
259	Analysis based Averages values
750	Data transformation and helper functions
859	Lib and Load data
643	Adding some lag feature
391	Price Variance in param
767	Make new features using continuous feature
534	Distribution of months in train and test
274	Lets Read In Data Files
677	Most of the dates overlap
832	Load train and test dataframes and add length columns for Description and Name
236	Which Team Wins And Lost The Most Championships
419	Recursive Feature Elimination with Random Forest
330	Lets gets started
824	Some Feature Engineering
858	The competition metric relies only on the order of recods ignoring IDs
129	Code from notebook
854	Predict on test
393	Hit Rate and Charge Distribution
