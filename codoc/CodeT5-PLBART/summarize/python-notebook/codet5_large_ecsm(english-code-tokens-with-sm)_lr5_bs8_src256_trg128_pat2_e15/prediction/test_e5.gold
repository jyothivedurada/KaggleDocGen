616	Result of my new models
238	Librairies and data
7	Now there appears to be one feature that is not gaussian
445	Applied to Full Dataset
35	The data is not balanced
645	Replace to Leak data
560	and background color definition
284	Visualizing Interest Level Vs Price
553	Visualize processed samples , resize
467	The following code repeats this plot for all the of the numeric hyperparameters
709	Create dataset with look back
137	Display a random sample of train images by class
857	Plot several examples of input images
660	Adding some lag feature
91	Zoom on the second level
883	Displaying sample image by host
791	Show some examples of different mask
85	We can now print the results
347	Random Forest Regressor
26	Load pneumonia locations
672	Efficient Net Architecture
872	Save some memory
210	CatBoost Pool and Regression
684	Sampling the train data since too much data
681	Merge seed for each team
288	Bedrooms Vs Bathrooms Vs Interest Level
574	Padding process and resizing with OpenCV
769	Room per family features
842	Ensure determinism in the results
269	Load data and fit some models
661	Train model by each meter type
317	removing columns where correlation is high
827	At the scale of stores
743	Define the number of repetitions for each class
689	TPU Strategy and other configs
623	Creating submission file
163	Make a Prediction
359	Read the csv files on the Johns Hopkins CSSE database on github
237	Loading the data
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
749	Random Forest model
343	Imputing missing values
299	No Of Storeys Vs Log Error
748	Results from my own training
47	FVC Progression by Sex
336	and target vector that correspond to the test data size
157	Its also builds on kernel functions but is appropriate for unsupervised learning
328	Select the models to run setting bool variables below
756	Set Model for prediction
798	Predict by Specify Province
668	Model Evaluation and Validation
844	SAVE DATASET TO DISK
411	In most cases , the values are very similar
584	Build datasets objects
10	Text preprosesing source
484	Previous Credit and Cash
192	Load tabular data and create new features
495	Function to Aggregate Numeric Data
563	Predict Test Set and Submit Result
650	Train model by each meter type
221	Time of Day and Meter Reading
275	When Do People Generally Order
532	train and test rows fraction intersection
95	What are their top categories
725	Data Loading and Cleaning
714	Apply invert scaling
239	MERGE , MISSING VALUE , FILL NA
530	Map extracted timestamps to columns
50	All contraction are known
335	Most important or common words in neutral data
428	The test distribution seems to be similar to the training distribution
302	Loading and preprocessing data
315	We can now create a submission file
514	Now predict the result for each toxic level
555	Process train data in parallel
202	Using RandomForest Classifier
150	Balance the target distribution
866	Label encoding Making it machine readable
205	Transformations and Data Augmentation
476	Score versus Iteration
4	Impute any values will significantly affect the RMSE score for test set
219	Meter Reading and Meter Type
745	A method to get oversampled training dataset
136	Create a Dataframe containing all images
583	Load text data into memory
687	These labels are not in train
25	Predicting for test data
483	Plot for a sanity check
248	Document Vectors with hashing trick
620	Validation on real world data
370	Check Unique Label
573	Save model and weights
488	Correlations of Aggregated Values with Target
73	What proportion of click generate downloads
206	Converting the Input images to plot using plt
711	Using all features for model training
79	Attributed time analysis
747	Common things for training
479	Now for the next four hyperparameters versus the score
318	Trivial segmentation stuff
614	Comparing various kappa scoring
855	Loading libraries and data
490	Function to Handle Categorical Variables
766	roof and electricity
818	This notebook will deal with positive , negative and neutral samples independently
220	Weekday and Meter Reading
124	Parameters and LB score visualization
364	Compare our forecast with actual evolution both for training and validation sets
16	Look at the data types and some basic info about the different columns
826	cut down features to avoid the kernel die
305	Thx Stackoverflow for realization
626	Predict with mixed language models
439	The number of leaves on the other hand is a discrete uniform distribution
109	Test Input Pipeline
258	Analysis Based on EXter Source Types
64	Split the data into train and validation parts
33	Check Validation Log Loss
829	Other special events
75	What proportion of IP download the app
348	Dimensionality Reduction Techniques
368	filtering out outliers
122	Its also builds on kernel functions but is appropriate for unsupervised learning
46	Submission data prediction
431	Use More Features
809	Conversions by App
8	Read data set
209	Data load and process functions
387	Remove Extreme Prices
246	Document Vectors with TfidfVectorizer
719	Create Inference Dataset
380	Import necessary libraries
511	Split comments into array of words
297	Bathroom Count Vs Log Error
706	Random Search Confidence
496	Function to Calculate Categorical Counts
524	KFold LGB model training
320	Replacing Mainland china with just China
43	Unique value counts
40	Preparing the training data
231	City and Time features
621	Drop the blurry image
29	Data is still small enough for memory so read to memory using pandas
688	train valid split
786	Predict null data based on statistical method
487	Kernel Density Estimate Plots
851	Function which creates set of images for each axis
218	Variable Description and Identification
125	Prepare Training Data
657	Find Best Weight
12	Roc AUC curve
191	Lets validate the test files
603	Focal loss is good for unbalanced datasets , like this one
761	Predictions class distribution
550	Mismatches on a validation data
144	Create a Classification Report
384	Ordinal features mapping
393	Hit Rate and Charge Distribution
177	Basic skin detection
245	Create Document Vectors
146	Set up the generator
727	Distribution of product among different genders
695	Visualize by heatmap
68	You can state below link to your copy of this MMDetection repo
414	Feature Engineering through Aggregations
811	Conversions by Device
802	Age distribution of male and female patients
18	Getting to Know the Data
230	Variable Description , Identification , and Correction
679	Rolling monthly and yearly store means
13	And now we embed each chunk individually
601	Create new labels
797	Add active column
804	Difference varialbes were created to describe the difference beween maximum and minimum value
458	Aggregate previous loans at Home Credit
600	Saving as JPEG
767	Make new features using continuous feature
87	Deriving individual masks for each object
22	Seed everything for reproducibility
402	Demonstration how it works
416	Machine Learning Modeling
280	Top Reordered Products
701	process training images
293	Top Features Selection
858	The competition metric relies only on the order of recods ignoring IDs
581	The filtration step for RGB images may take a lot of time
286	Visualizing Interest Level Vs Bedrooms
38	Loading data etc
622	Display the dropped images
565	TPU Strategy and other configs
66	Counting the metric score
659	Leak Data loading and concat
105	Loading the files
419	Recursive Feature Elimination with Random Forest
759	Convert DCM to PNG
702	process test images
276	At What Day Of The Week People Order
504	Prediction for one image
787	Onehot encoding for categorical data
576	Load Model into TPU
869	Train the model , predict , etc
578	Adding mode as feature
518	Loading the data
639	All train tasks predictions
590	Running the model on a Sample Image
256	Checking the Imbalance of Target Variable
554	Visualize test processed samples , resize
558	Exploratory Data Analysis
610	Training the model
308	Let us plot some bounding boxes right from the dictionary we just created
651	Replace to UCF and UCL data
277	When Do People Generally Reorder
599	Will need those folders later for storing our jpegs
261	Merging the bureau dataset along with application train dataset to do more analysis
625	Predict with pure text models
551	Inspection of created samples , without normalization
342	We can finally define the CNN architecture
424	Data Exploration and Data Cleaning
251	Convolutional Neural Network
264	Group signals metadata accroding to target
226	Imputing Missing variable
323	China scenario since first entry
464	Grid Search Implementation
332	Seperating the data into different data frame based on the labels
627	Blend and smooth for submission
228	Prediction and Submission
870	That is the size of one test example that we ought to predict
24	Unfreeze all layers and find best learning rate
698	Number of Patients and Images in Test Images Folder
48	FVC Progression by SmokingStatus
591	Inference on Test Set
666	There is a gap between them
92	Prices of the first level of categories
830	Inspect the data at different time scale
448	Standard imports for data science work
589	Load model into the TPU
260	Checking the Correlation Between The Features for Application Train Dataset
160	Initialize the generators
294	Dependent variable logerror follows nice normal distribution
307	So a unique operator will give us the unique filenames that contain ships
792	Null data check
404	Read in Data and Look at Summary Information
394	Initial Position and Momentum
592	Load and preprocess data
418	Comparing Model Performance
378	y hist with defferent timestamps are similar
292	Create final submission DF
81	Last click from the IP analysis
331	Full data Analysis
572	Creating and Training the Model
637	train solved tasks
45	test prediction by LGBM and feature importance check
585	Load model into the TPU
88	Convert each labeled object to Run Line Encoding
586	Create fast tokenizer
316	Display train and test signals
485	Create Custom Feature Primitives
120	Add country details
174	Genetic program model , main code loop
537	Examining the Growth Curves
427	Calculate Distance between points using Haversine distance
582	Load and process data
98	Can we get some informations out of the item description
443	Distribution of all Numeric Hyperparameters
327	Getting population for each country
814	Calculate extra features for test set
716	Make a Baseline model
227	Encoding Categorical Variable
376	y的异常值 drop samples which have exception value in y
382	Let take some small visualizations with these bool features
272	Visualize the default split and gains for all models
765	Check null data
100	Can the length of the description give us some informations
774	Mix region and education
295	No Of Storey Over The Years
847	The method for training is borrowed from
117	Implementing the SIR model
475	Distribution of Scores
536	Get important features according to SHAP
667	We will also evaluate the position of the data points using the coordinates
271	Visualize the feature interaction
796	Get data from
278	How many orders users generally made
175	Get the dupplicate clicks with different target values
836	Opacities That Are Not Related to Pneumonia
129	Code from notebook
629	This is a simple modify from
83	Importation of a entire day data
771	Tabulet per family features
201	Confusion Matrix for Test Data Predictions
708	Convert an array of values into a dataset matrix
542	inspect training samples
516	Predict validation and test set masks
819	For neutral samples , use original texts as they are
736	Try the demo model
59	See sample image
564	A simple function from stack overflow that crops the image
877	Read and Explore
806	this graph is adapted from
822	Made a mask using the tour
613	Reproducing simple baseline
121	Ridge Regression for one country
477	Hyperparameters versus Iteration
696	View Single Image
671	Binary Focal Loss
678	Adding categorical features
444	Evolution of Search
399	Start by pivoting the DataFrame to explore the label distribution over slices
171	FS with SelectFromModel and RandomForestRegressor
529	Run length encoding to reduce predictions size
141	Plot the Training Curves
170	FS with SelectFromModel and LinearSVR
390	Price Variance Within Identified Items
834	What are Lung Opacities
140	Set Up the Generators
106	plotting the scan
501	Monthly Cash Data
102	Data Info Method
835	The Definition of Opacity
321	Now a look at Italy
783	Check the dataset
413	For example , we can divide the years of schooling by the age
249	Keras Tokenizer API
636	Ploting one sample with the corresponding error as error bars
669	They are very similar to each other
138	Balance the target distribution
108	Read the data
234	Encoding Cordinal Direction
593	Evaluate training history
641	Leak Data loading and concat
823	Import libraries and data , reduce memory usage
346	Modeling and Prediction
785	Find Null data
724	Compare timing for GridMask
577	Group and Reduce
580	Plotting some random images to check how cleaning works
507	Granted applications per number of children
778	Wiki News FastText Embeddings
547	This images from validation data seem to be really strange labeled ...
466	Distribution of Search Values
720	Define dataset and model
734	Run on test dataset
155	Define X and y
676	Then transform to a datetime object supposing that it is an ordinal datetime
473	Remove Low Importance Features
179	Some stats using jpg exif
93	Which brands are most expensive
107	Import Required Libraries
162	Plot the Loss Curves
158	Thanks for the example of ensemling different models from
224	Meter Readings over time And Primary Use
143	Create a Confusion Matrix
721	Prediction for test
236	Which Team Wins And Lost The Most Championships
436	Visualize Validation Predicted Target
164	Process the Predictions
118	Join data , filter dates and clean missings
852	Function which creates final video from list of images
322	Comparison between Brazil and Italy
541	load mapping dictionaries
217	Importing Packages and Collecting Data
351	Bookings per day of week
493	An important consideration is the missing values in the dataframe
301	Composition of Augmentations
752	Show influence of economical factors on housing prices
290	Main Config Variables
69	Make a simple restart of runtime at this point
710	Make prediction and apply invert scaling
196	Newer products or products from newer stores are shorter than the oldest ones
630	Pick some frames to display
662	Replace to UCF data
283	Visualizing Outliers In Data
546	Custom LR schedule
154	Plot the Training Curves
151	Train Test Split
340	Create the embedding layer
42	Data loading and checking
371	Non physical data augmentation
658	Fast data loading
728	Hugging Face pretrained Bert model names
450	Admit and Correct Mistakes
303	Preprocessing of features
800	Predict all country greater than
742	Get labels and their countings
813	Preparing the data
21	Importing all Libraries
846	The mean of the two is used as the final embedding matrix
795	You only have two areas to work on
597	Create Dataset objects
374	Exception value processing
649	Adding some lag feature
750	Data transformation and helper functions
37	Ability to Detect Face
358	Read the csv files from kaggle
570	Create real file paths dataframe
506	Locating a face within an image
805	Here is a base model without parameter tuning .
469	Testing Results on Full Data
758	Data preparation for test
779	Check null data
255	Identifying Missing Value Present in Application Train Dataset
53	Predict submission dates
739	Try to load the latest checkpoint
545	Finally , we are ready to load the whole series into one matrix
799	Predict by Specify Country
878	Replace infs and imputing missing values by mean
663	what already is known
421	Lets first check the Train Target Distribution
397	Here is the distribution of the maximum value for the remaining features
788	Prediction with xgboost
768	Ratio feature can have infinite values
208	Use the images from our validation dataset to check the precdictions
311	For the same window we superimpose the masks above the image
185	How many different cars in train dataset
52	Train on full data
232	Total Time Stopped
690	Get Model into TPU
523	Prepare for training
67	Saving the model
861	We can see above the counts of higher damageDealt smoothly decrease
415	Next we can rename the columns to make it easier to keep track
874	Reading in the data , as usual
426	Rides on Map of NYC
528	Perform check on randomly chosen mask and prediction
452	Drop Correlated Variables
172	Load data files
186	Display similar cars
848	Find final Thresshold
531	Create DFs imitating public and private test subsets
65	Create and set up the model
114	FS with SelectFromModel and LinearSVR
195	Test on the data that is not seen by the network during training
472	Visualize Distribution of Correlated Variables
770	BedRoom per family features
775	Remove feature with only one value
72	How many different values does our categorial variables take
640	Fast data loading
265	Apply reduction on some samples and visualize the results
777	Load and preprocess data
440	Complete Bayesian Domain
634	Some correlation is indeed present
96	What are the most expensive items
618	Other columns are the digital value of pixels of kannada mnist
11	Model Validation on train data set
753	Dealing with missed variables
442	Learning Rate Distribution
471	DFS with Selected Aggregation Primitives
76	Does bots download the app
156	Create a submission file
615	Relevant attributes of identified objects are stored
82	Number of clicks from the IP during the last minute
306	Let us read the masks
451	Identify Correlated Variables
833	What Does a Normal Image Look Like
517	Train the LGBM model
647	Leak Data loading and concat
135	How many images are in each folder
808	Explore ip counts
423	Submitting our Predictions
207	Defining our Model
223	Meter Readings over time
824	Some Feature Engineering
149	Create Binary Targets
190	Code from here and below is commented out because the kernel dies
692	Making Vocabulary and Text Conversion
57	We should give CatBoost names of categorical features
772	phone per family features
738	Get variables to apply weight decay in AdamW optimizer
538	New Daily Cases
145	MAKE A TEST SET PREDICTION
425	Empirical Cumulative Distribution Function Plot
361	Create dataframe listing the starting date of lockdowns
882	We can safely store the two types into separate dataframes
548	Load Model into TPU
352	Bookings by year
252	Recurrent Neural Network
386	Draw network graph to see which ingredients are linked together
204	Confusion Matrix for Test Data Predictions
481	Read in Data and Create Smaller Datasets
503	Split into training and validation groups
607	Reducing Image Size
849	Add train leak
534	Distribution of months in train and test
89	Combine it into a single function
398	Show Original Image
241	MERGE , MISSING VALUE , FILL NA
314	Prediction on test set
17	Do some simple plots for exploration
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
36	Take a look at predictions
633	Plotting errors for one sample
396	All Zero Features
642	FIX Time Zone
675	Construct the graph and plot it
468	Sequence of Search Values
816	Use machine learning model
549	Finding best alpha
119	Compute lags and trends
460	Aggregate Cash previous loans
181	Thanks for the example of ensemling different models from
291	Resnext initialize functions
70	Hist Graph of scores
862	Getting Prime Cities
557	Load Packages and Data
515	Define helper functions
401	Examples of different hemorrhage subtypes
831	Disable fastai randomness
568	Create fake filepaths dataframe
133	Using my notebook
875	Now that we have dataset in desired form , i.e
86	Dealing with color
433	We can make the same plot by day of the week
193	Visualization of a single batch
535	SHAP Interaction Values
126	Showing Confusion Matrices
746	Check oversampled dataset
722	Compare timing for CutMix
648	FIX Time Zone
337	It fills our perfect submission with n randomly distributed random answers i.e
552	Inspection of created samples , with normalization
438	Now we can evaluate the baseline model on the testing data
268	Interpreting ROC Plot
391	Price Variance in param
300	Gaussian Noise on Target
744	Define the number of repetitions for each training example
762	Divide data into training and validation sets
880	Evaluate the Model
513	Now train the models with a partial fit approach
682	Train Our Linear Regression Model
161	Set up the Model Architecture
575	Pad and resize all the images
330	Lets gets started
606	Interest based on geographical location
715	These have their kitchen area larger than the total area of the house
864	Relationships betweeen the sets
349	Feature Agglomeration Results
619	Check some augmentation effect
362	Join all dataframes
740	Check saved checkpoints
544	inspect datagen output
341	Build the Model
229	Importing Packages and Collecting Data
9	Target varaible distribution
198	The number of samples in each cluster is the following
840	Is a program solution
296	Bedroom Count Vs Log Error
242	Loading the data
807	Only a small proportion of clicks were followed by a download
101	Is there a correlation between description length and price
203	Confusion Matrix for Train Data Predictions
562	OSIC training data Example
213	Importing necessary libraries
737	Choose the model to use
309	Let us load one image and its masks
55	We should split our dataset to create validation and train parts
222	Primary Use and Meter Reading
521	add breed mapping
388	A good item price binning should be based on the price distribution
365	Show one Example of landmark images
383	High cardinality features
456	Aggregate Grandchild Data Tables
604	Create test generator
266	Hit Rate Bar Chart
319	Some сustom Loss functions
509	Read the data
153	Set Up the Generators
61	Prepare Testing Data
707	Split into train and test sets
569	First downsize all the images
617	Import the modules
131	Code from notebook
588	Build datasets objects
437	Evaluate Best Model from Random Search
732	Run on validation dataset
406	Addressing Wrong Labels
270	Fit an XGBoost classifier model
643	Adding some lag feature
432	Explore Time Variables
78	How many times , each categories of clickers download the app
178	Apply skin segmentation on all training data and visualize the result
462	Hyperparameter Tuning Implementation
486	Putting it all Together
491	Putting the Functions Together
273	Bounded region of parameter space
62	Create Testing Generator
139	Create a Directory Structure
860	Explore distribution of single variable
39	Show and save column comparision matrix and save row sets
697	Number of Patients and Images in Training Images Folder
357	Same series of charts but for returns
782	This parted was taken from the helpful kernel
654	Adding some lag feature
188	Display some of similar cars
784	Moving average is so simple
19	The Shape of the Data
111	Comparison of the all feature importance diagrams
828	Perspective of Time
367	How much does this trust interval change over the real value for kappa
395	Correlation with Deal Probability
233	Encoding Street Names
793	It seems Goblins are a little similar to Ghouls
254	Function for find out Numerical and categeical Variables
522	extract different column types
871	Let us proceede with further interesting EDA
519	and batch aggregations examples for the rest of the tables ..
168	Thanks to Automatic FE The main code for basic FE
754	Starting importance variables evaluation
363	Create variables of interest
856	You can choose many palettes , which makes the graphs visually nice
449	Now we want to combine the data without creating any duplicate rows
44	Unique count of Categorical values
244	Splitting train into training and validation set
115	Parameters and LB score visualization
211	CatBoost is RAM expensive so I prefer to utilize GPU
392	Affected Surface Object
165	Create the submission csv file
624	Build the original and translated test data
789	Target , prediction process
718	CNN Model for multiclass classification
253	Importing The Dataset
520	load mapping dictionaries
713	Split into train and test sets
169	FS with the Pearson correlation
250	Creating the Model
631	Split Trian and Valid
492	Aggregated Stats of Bureau Balance by Client
837	If you like the content of this notebook , please consider upvoting it
489	Function for Numeric Aggregations
2	Seems like a very wide range of values , relatively spaking
457	Merge with the main dataframe
853	Create Magic features
63	See predicted result with images
712	Function to convert series to supervised learning
470	DFS with Default Primitives
644	Train model by each meter type
200	Confusion Matrix for Train Data Predictions
369	using outliers column as labels instead of target column
235	Seting X and Y
571	Load and freeze DenseNet
355	expanding the aggregate
180	Its also builds on kernel functions but is appropriate for unsupervised learning
594	Load and preprocess data
281	Which item do people put into the cart first
429	Create Training and Validation Set
259	Analysis based Averages values
417	The data has no missing values and is scaled between zero and one
312	Train a simple CNN architecture
184	Display a single car with its mask
598	Load Model into TPU
123	Thanks for the example of ensemling different models from
285	Visuallizing Interest Level Vs Bathroom
262	analyzing the numerical features disturbion in previous application dataset
71	I updated importation for a faster version
407	Families without Heads of Household
730	Choose the model to use
526	Set data loading parameters
1	Testing Time Augmentation
609	Losses and Metrics
304	Text Processing of text data easily
673	Dense Added Model
216	Fitting Logistic Regression with OneVsRest Classifier
142	What is the AUC Score
116	Ensembling the solutions and submission
733	Get metrics for validation dataset
334	Most important or common negative words
408	Redundant Household Variables
841	Solve the task
197	Now , the clusters will be created using just the test set
344	Looks like there are no missing values in the dataframe
345	Exploratory Data Analysis
763	Now , we can downcast numeric columns in the same way
409	Creating Ordinal Variables
680	Fitting the trend on the yearly time series
474	Align Train and Test Sets
434	Test Time Features
360	Transpose the dataframes
703	process submission images
525	Initialize train and test DataFrames to access IDs and depth information
717	Create dataset for training and Validation
324	Spain since first recorded case
540	Gaussian Approximation of Active Cases
646	Fast data loading
453	Numeric Aggregation Function
103	Generating Graph Matrices from the Structures
30	And finally lets look at the class distribution
704	process tabular features
801	Predict all province greater than
32	The data is not balanced
665	At first , I made Europe future
243	Training the model on CPU
677	Most of the dates overlap
454	Categorical Aggregation Function
729	Make TF record file for test dataset
879	RF for feature selection
373	missing value statistics
764	Check the dataset
656	Leak Data Validation
459	Aggregate Installments Data
632	This plot shows summarized information about feature impact against shap output
366	Data Exploration The label distribution shows clear label imbalance
326	USA since first case
726	Visualising the distribution of each product by age by boxplot
683	Next , we will make prediction with our LR Model
94	More details on brands with a treemap
735	Hugging Face pretrained Bert model names
566	Create Dataset objects
325	Iran since first case
686	targets in train.csv
480	First we need to format the data and extract the labels
167	How to make a generator run infinitely
670	Importing Library Files
773	combination using three features
60	See how our generator work
873	What should good EDA be capable of
84	The magical function
412	Redundant Individual Variables
441	Example of Sampling from the Domain
27	GPU version It is just function verification , not for performance evaluation
859	Lib and Load data
74	Zoom on this IP
130	My upgrade of parameters
699	Create Image Augmentation Generator
820	Write a problem file
863	NOTE Even tough it is automatic , we can incorporate some manual features
189	Define some constants for data location
353	Bookings by month
602	Pad and resize all the images
803	Impact of bmi over old and young patients
28	Define a Convolutional Neural Network following Yoon Kim model
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
579	Refit and Submit
693	Making Feature Matrices
567	Load Model into TPU
247	Document Vectors with HashingVectorizer
723	Compare timing for MixUp
3	Imputations and Data Transformation
543	inspect validation samples
825	Stacking models and training
0	Load the metadata of each file
539	Exponential Growth Curves
279	Best Selling Products
41	Training on the complete Dataset now
405	Exploring Label Distribution
148	Create a submission file
80	Download rate by hour
533	differences between public and private test
257	Types Of Features
23	Defining DataBunch for FastAI
482	Properly Representing Variable Types
99	What words do people use
187	Display some of similar cars
478	Plots of Hyperparameters vs Score
97	Does shipping depends of price
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
49	Count occurance of words
527	Define data loading
465	First , we need to put our data into a long format dataframe
113	FS with the Pearson correlation
821	Plot the obtained tour
422	Filling missing and infinite data by zeroes
868	Let us split the variables one more time
127	Divide features into groups
176	Display all test images
403	Combinations of TTA
608	Save results as CSV files
447	Bayesian Optimization on the Full Dataset
817	Start positions and end positions of selected texts in tokenized source texts
110	Apply Logistic Regression
605	Inference on test set
559	Outlier Analysis and Feature Scaling
508	Income distribution and target value
183	Here is a plot of sorted category counts
497	Function for KDE Plots of Variable
350	Predict on test set
780	Credit day overdue
199	Using DecisionTree Classifier
446	Random Search on the Full Dataset
500	Function to Aggregate Stats at the Client Level
225	Square feet size is positively Skewed
653	FIX Time Zone
104	Graph Representation of RNA structure
812	Conversions by Channel
867	NaN imputation will be skipped in this tutorial
354	Interactive booking , click , and percentage of booking trends with Bokeh
595	Unhide below to see all trials results
741	An example usage
612	Infer using trained model
510	Check the typical length of a comment
420	Visualize Tree with No Maximum Depth
652	Fast data loading
5	Detect and Correct Outliers
289	Correlation Between Price and Other Features
194	Idea is to use clustering on images of one type to group data
865	Feature primitives Basically which functions are we going to use to create features
502	Monthly Credit Data
755	Best parameters are searched by GridSearchCV on my Laptop
329	Calculating the day when the number of infected individuals is max
54	Using LabelEncoding we just change string values to numbers
166	What is a python generator
843	LOAD PROCESSED TRAINING DATA FROM DISK
499	Function to Calculate Missing Values
282	Visualizing Distribution Of Price Before and After Removing Outliers
128	Showing Confusion Matrices
274	Lets Read In Data Files
463	Learning Rate Domain
611	Load Test dataframe
790	the difficuly of training different mask type is different
435	Try with All Time Variables
56	Using embedding in NN we can change dimensionality of categorical features
561	Add the actors to the renderer , set the background and size
182	Manager function to call the create features functions in multiple processes
263	Paths to data and metadata
310	Now we can read the masks for the specific image
685	targets in labels.csv
512	Choose and train a classifier
377	Divide the test set and the training set
845	LOAD DATASET FROM DISK
705	we add some squared features for some model flexability
838	Composition of functions
31	Initialize Mobilenet Face Extractor
587	Load text data into memory
760	Split training set
375	The following is features with fine hist
134	Using my notebook
410	Per Capita Features
147	Make a prediction on the test images
884	After we impute it , we can observe standard fluctuation
173	Set up the folds for cross validation
20	Visualizing Raw Variables
876	Applying it on text
731	Try to load the latest checkpoint
379	Save objects for next step
215	Featurization of Training Data
674	OUTPUT OF AUGMENTATED IMAGES
839	The evaluation method
214	Word map for most frequent Tags
757	Test data preparation
112	Thanks to Automatic FE The main code for basic FE
664	make hour column from transactionDT
494	Calculate Information for Testing Data
628	Ensemble with my historical best
77	Does standard users download the app
159	Load the pre processed data
638	evaluation solved tasks
381	Density plot of numeric features
751	Putting the principles in practice
781	Credit day prolong
389	Use Ad Image to Identify Item Category
6	No surprises , since this is all presumably artificial data
430	Train with Simple Features
635	Averaging over all instances with standard deviation as errorbar
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
850	Add leak to test
556	Process test data in parallel
34	Apply Underbalancing Techinique
313	Training and callbacs
810	Conversions by OS
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
881	Load CSV files
700	Get Tabular Data
655	Train model by each meter type
58	Prepare Traning Data
240	Loading the data
794	Logistic Regression seems to be a good classification algorithm for this dataset
596	Save model and best hyperparams
461	Aggregate Credit previous loans
339	Load and Explore Data
815	Judge machine learning model
505	Train and validate
356	a quick check if demand distribution changes week to week
333	most important or common positive words
455	Combined Aggregation Function
776	Feature selection using shap
15	Maybe if we used the log plot things would be better
90	So , some categories are expensive , but most are cheap
385	Predict test set and make submission
372	Check if valid data looks all right
287	Visualizing Interest Level Vs Hour
832	Load train and test dataframes and add length columns for Description and Name
298	Room Count Vs Log Error
338	Import Packages and Functions
694	Count game trainsition
854	Predict on test
498	Function to Convert Data Types
132	Training prediction result visualization
691	Loading and Visualization of Data
