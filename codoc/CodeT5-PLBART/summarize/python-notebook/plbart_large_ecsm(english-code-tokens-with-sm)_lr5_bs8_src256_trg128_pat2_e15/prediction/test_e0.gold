23	Defining DataBunch for FastAI
444	Evolution of Search
182	Manager function to call the create features functions in multiple processes
522	extract different column types
247	Document Vectors with HashingVectorizer
201	Confusion Matrix for Test Data Predictions
281	Which item do people put into the cart first
770	BedRoom per family features
125	Prepare Training Data
339	Load and Explore Data
516	Predict validation and test set masks
352	Bookings by year
858	The competition metric relies only on the order of recods ignoring IDs
706	Random Search Confidence
285	Visuallizing Interest Level Vs Bathroom
26	Load pneumonia locations
880	Evaluate the Model
822	Made a mask using the tour
610	Training the model
788	Prediction with xgboost
305	Thx Stackoverflow for realization
250	Creating the Model
117	Implementing the SIR model
646	Fast data loading
343	Imputing missing values
164	Process the Predictions
594	Load and preprocess data
310	Now we can read the masks for the specific image
429	Create Training and Validation Set
599	Will need those folders later for storing our jpegs
180	Its also builds on kernel functions but is appropriate for unsupervised learning
528	Perform check on randomly chosen mask and prediction
105	Loading the files
236	Which Team Wins And Lost The Most Championships
742	Get labels and their countings
468	Sequence of Search Values
419	Recursive Feature Elimination with Random Forest
93	Which brands are most expensive
229	Importing Packages and Collecting Data
377	Divide the test set and the training set
584	Build datasets objects
552	Inspection of created samples , with normalization
153	Set Up the Generators
652	Fast data loading
278	How many orders users generally made
321	Now a look at Italy
732	Run on validation dataset
313	Training and callbacs
877	Read and Explore
875	Now that we have dataset in desired form , i.e
249	Keras Tokenizer API
660	Adding some lag feature
176	Display all test images
103	Generating Graph Matrices from the Structures
24	Unfreeze all layers and find best learning rate
106	plotting the scan
627	Blend and smooth for submission
546	Custom LR schedule
534	Distribution of months in train and test
688	train valid split
282	Visualizing Distribution Of Price Before and After Removing Outliers
695	Visualize by heatmap
453	Numeric Aggregation Function
121	Ridge Regression for one country
80	Download rate by hour
790	the difficuly of training different mask type is different
323	China scenario since first entry
290	Main Config Variables
286	Visualizing Interest Level Vs Bedrooms
338	Import Packages and Functions
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
387	Remove Extreme Prices
692	Making Vocabulary and Text Conversion
744	Define the number of repetitions for each training example
796	Get data from
647	Leak Data loading and concat
204	Confusion Matrix for Test Data Predictions
558	Exploratory Data Analysis
167	How to make a generator run infinitely
55	We should split our dataset to create validation and train parts
820	Write a problem file
696	View Single Image
527	Define data loading
158	Thanks for the example of ensemling different models from
484	Previous Credit and Cash
866	Label encoding Making it machine readable
686	targets in train.csv
813	Preparing the data
729	Make TF record file for test dataset
432	Explore Time Variables
838	Composition of functions
792	Null data check
719	Create Inference Dataset
264	Group signals metadata accroding to target
298	Room Count Vs Log Error
469	Testing Results on Full Data
515	Define helper functions
460	Aggregate Cash previous loans
773	combination using three features
426	Rides on Map of NYC
119	Compute lags and trends
379	Save objects for next step
625	Predict with pure text models
525	Initialize train and test DataFrames to access IDs and depth information
572	Creating and Training the Model
526	Set data loading parameters
138	Balance the target distribution
805	Here is a base model without parameter tuning .
362	Join all dataframes
148	Create a submission file
568	Create fake filepaths dataframe
609	Losses and Metrics
674	OUTPUT OF AUGMENTATED IMAGES
220	Weekday and Meter Reading
133	Using my notebook
257	Types Of Features
495	Function to Aggregate Numeric Data
618	Other columns are the digital value of pixels of kannada mnist
545	Finally , we are ready to load the whole series into one matrix
687	These labels are not in train
611	Load Test dataframe
474	Align Train and Test Sets
188	Display some of similar cars
713	Split into train and test sets
750	Data transformation and helper functions
746	Check oversampled dataset
392	Affected Surface Object
391	Price Variance in param
446	Random Search on the Full Dataset
12	Roc AUC curve
1	Testing Time Augmentation
418	Comparing Model Performance
383	High cardinality features
488	Correlations of Aggregated Values with Target
489	Function for Numeric Aggregations
355	expanding the aggregate
621	Drop the blurry image
564	A simple function from stack overflow that crops the image
30	And finally lets look at the class distribution
373	missing value statistics
254	Function for find out Numerical and categeical Variables
370	Check Unique Label
848	Find final Thresshold
123	Thanks for the example of ensemling different models from
563	Predict Test Set and Submit Result
369	using outliers column as labels instead of target column
502	Monthly Credit Data
65	Create and set up the model
165	Create the submission csv file
128	Showing Confusion Matrices
438	Now we can evaluate the baseline model on the testing data
94	More details on brands with a treemap
466	Distribution of Search Values
211	CatBoost is RAM expensive so I prefer to utilize GPU
784	Moving average is so simple
47	FVC Progression by Sex
5	Detect and Correct Outliers
328	Select the models to run setting bool variables below
655	Train model by each meter type
242	Loading the data
234	Encoding Cordinal Direction
63	See predicted result with images
375	The following is features with fine hist
322	Comparison between Brazil and Italy
118	Join data , filter dates and clean missings
794	Logistic Regression seems to be a good classification algorithm for this dataset
514	Now predict the result for each toxic level
659	Leak Data loading and concat
72	How many different values does our categorial variables take
707	Split into train and test sets
705	we add some squared features for some model flexability
60	See how our generator work
209	Data load and process functions
507	Granted applications per number of children
666	There is a gap between them
856	You can choose many palettes , which makes the graphs visually nice
179	Some stats using jpg exif
228	Prediction and Submission
577	Group and Reduce
302	Loading and preprocessing data
639	All train tasks predictions
459	Aggregate Installments Data
882	We can safely store the two types into separate dataframes
720	Define dataset and model
157	Its also builds on kernel functions but is appropriate for unsupervised learning
359	Read the csv files on the Johns Hopkins CSSE database on github
540	Gaussian Approximation of Active Cases
870	That is the size of one test example that we ought to predict
191	Lets validate the test files
860	Explore distribution of single variable
475	Distribution of Scores
13	And now we embed each chunk individually
380	Import necessary libraries
142	What is the AUC Score
738	Get variables to apply weight decay in AdamW optimizer
146	Set up the generator
619	Check some augmentation effect
162	Plot the Loss Curves
830	Inspect the data at different time scale
827	At the scale of stores
450	Admit and Correct Mistakes
829	Other special events
345	Exploratory Data Analysis
463	Learning Rate Domain
855	Loading libraries and data
395	Correlation with Deal Probability
136	Create a Dataframe containing all images
368	filtering out outliers
97	Does shipping depends of price
99	What words do people use
443	Distribution of all Numeric Hyperparameters
15	Maybe if we used the log plot things would be better
300	Gaussian Noise on Target
831	Disable fastai randomness
685	targets in labels.csv
276	At What Day Of The Week People Order
114	FS with SelectFromModel and LinearSVR
700	Get Tabular Data
748	Results from my own training
366	Data Exploration The label distribution shows clear label imbalance
786	Predict null data based on statistical method
807	Only a small proportion of clicks were followed by a download
740	Check saved checkpoints
826	cut down features to avoid the kernel die
614	Comparing various kappa scoring
642	FIX Time Zone
192	Load tabular data and create new features
622	Display the dropped images
308	Let us plot some bounding boxes right from the dictionary we just created
657	Find Best Weight
608	Save results as CSV files
143	Create a Confusion Matrix
726	Visualising the distribution of each product by age by boxplot
102	Data Info Method
755	Best parameters are searched by GridSearchCV on my Laptop
120	Add country details
586	Create fast tokenizer
543	inspect validation samples
73	What proportion of click generate downloads
43	Unique value counts
361	Create dataframe listing the starting date of lockdowns
669	They are very similar to each other
448	Standard imports for data science work
221	Time of Day and Meter Reading
678	Adding categorical features
376	y的异常值 drop samples which have exception value in y
32	The data is not balanced
850	Add leak to test
680	Fitting the trend on the yearly time series
38	Loading data etc
457	Merge with the main dataframe
728	Hugging Face pretrained Bert model names
31	Initialize Mobilenet Face Extractor
436	Visualize Validation Predicted Target
252	Recurrent Neural Network
21	Importing all Libraries
861	We can see above the counts of higher damageDealt smoothly decrease
141	Plot the Training Curves
768	Ratio feature can have infinite values
344	Looks like there are no missing values in the dataframe
765	Check null data
721	Prediction for test
40	Preparing the training data
71	I updated importation for a faster version
539	Exponential Growth Curves
506	Locating a face within an image
154	Plot the Training Curves
195	Test on the data that is not seen by the network during training
871	Let us proceede with further interesting EDA
757	Test data preparation
810	Conversions by OS
294	Dependent variable logerror follows nice normal distribution
405	Exploring Label Distribution
301	Composition of Augmentations
271	Visualize the feature interaction
581	The filtration step for RGB images may take a lot of time
45	test prediction by LGBM and feature importance check
9	Target varaible distribution
77	Does standard users download the app
81	Last click from the IP analysis
407	Families without Heads of Household
872	Save some memory
480	First we need to format the data and extract the labels
817	Start positions and end positions of selected texts in tokenized source texts
433	We can make the same plot by day of the week
565	TPU Strategy and other configs
194	Idea is to use clustering on images of one type to group data
632	This plot shows summarized information about feature impact against shap output
296	Bedroom Count Vs Log Error
789	Target , prediction process
396	All Zero Features
712	Function to convert series to supervised learning
303	Preprocessing of features
591	Inference on Test Set
420	Visualize Tree with No Maximum Depth
22	Seed everything for reproducibility
130	My upgrade of parameters
427	Calculate Distance between points using Haversine distance
166	What is a python generator
672	Efficient Net Architecture
390	Price Variance Within Identified Items
334	Most important or common negative words
287	Visualizing Interest Level Vs Hour
603	Focal loss is good for unbalanced datasets , like this one
623	Creating submission file
596	Save model and best hyperparams
662	Replace to UCF data
583	Load text data into memory
411	In most cases , the values are very similar
243	Training the model on CPU
804	Difference varialbes were created to describe the difference beween maximum and minimum value
799	Predict by Specify Country
869	Train the model , predict , etc
174	Genetic program model , main code loop
307	So a unique operator will give us the unique filenames that contain ships
210	CatBoost Pool and Regression
585	Load model into the TPU
340	Create the embedding layer
381	Density plot of numeric features
878	Replace infs and imputing missing values by mean
837	If you like the content of this notebook , please consider upvoting it
189	Define some constants for data location
175	Get the dupplicate clicks with different target values
87	Deriving individual masks for each object
760	Split training set
0	Load the metadata of each file
207	Defining our Model
441	Example of Sampling from the Domain
414	Feature Engineering through Aggregations
779	Check null data
590	Running the model on a Sample Image
802	Age distribution of male and female patients
588	Build datasets objects
879	RF for feature selection
172	Load data files
631	Split Trian and Valid
315	We can now create a submission file
291	Resnext initialize functions
227	Encoding Categorical Variable
245	Create Document Vectors
530	Map extracted timestamps to columns
410	Per Capita Features
439	The number of leaves on the other hand is a discrete uniform distribution
654	Adding some lag feature
617	Import the modules
576	Load Model into TPU
769	Room per family features
230	Variable Description , Identification , and Correction
613	Reproducing simple baseline
673	Dense Added Model
365	Show one Example of landmark images
783	Check the dataset
115	Parameters and LB score visualization
316	Display train and test signals
442	Learning Rate Distribution
378	y hist with defferent timestamps are similar
187	Display some of similar cars
319	Some сustom Loss functions
592	Load and preprocess data
434	Test Time Features
170	FS with SelectFromModel and LinearSVR
668	Model Evaluation and Validation
676	Then transform to a datetime object supposing that it is an ordinal datetime
266	Hit Rate Bar Chart
318	Trivial segmentation stuff
629	This is a simple modify from
354	Interactive booking , click , and percentage of booking trends with Bokeh
435	Try with All Time Variables
325	Iran since first case
299	No Of Storeys Vs Log Error
95	What are their top categories
462	Hyperparameter Tuning Implementation
605	Inference on test set
479	Now for the next four hyperparameters versus the score
704	process tabular features
265	Apply reduction on some samples and visualize the results
25	Predicting for test data
233	Encoding Street Names
824	Some Feature Engineering
48	FVC Progression by SmokingStatus
691	Loading and Visualization of Data
548	Load Model into TPU
268	Interpreting ROC Plot
734	Run on test dataset
494	Calculate Information for Testing Data
694	Count game trainsition
137	Display a random sample of train images by class
177	Basic skin detection
292	Create final submission DF
431	Use More Features
521	add breed mapping
324	Spain since first recorded case
551	Inspection of created samples , without normalization
853	Create Magic features
246	Document Vectors with TfidfVectorizer
473	Remove Low Importance Features
258	Analysis Based on EXter Source Types
634	Some correlation is indeed present
417	The data has no missing values and is scaled between zero and one
733	Get metrics for validation dataset
256	Checking the Imbalance of Target Variable
645	Replace to Leak data
288	Bedrooms Vs Bathrooms Vs Interest Level
624	Build the original and translated test data
701	process training images
320	Replacing Mainland china with just China
337	It fills our perfect submission with n randomly distributed random answers i.e
46	Submission data prediction
702	process test images
17	Do some simple plots for exploration
508	Income distribution and target value
29	Data is still small enough for memory so read to memory using pandas
832	Load train and test dataframes and add length columns for Description and Name
840	Is a program solution
96	What are the most expensive items
498	Function to Convert Data Types
10	Text preprosesing source
223	Meter Readings over time
762	Divide data into training and validation sets
76	Does bots download the app
587	Load text data into memory
8	Read data set
640	Fast data loading
532	train and test rows fraction intersection
327	Getting population for each country
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
537	Examining the Growth Curves
597	Create Dataset objects
535	SHAP Interaction Values
66	Counting the metric score
116	Ensembling the solutions and submission
451	Identify Correlated Variables
4	Impute any values will significantly affect the RMSE score for test set
578	Adding mode as feature
841	Solve the task
554	Visualize test processed samples , resize
573	Save model and weights
612	Infer using trained model
314	Prediction on test set
37	Ability to Detect Face
458	Aggregate previous loans at Home Credit
225	Square feet size is positively Skewed
430	Train with Simple Features
149	Create Binary Targets
821	Plot the obtained tour
111	Comparison of the all feature importance diagrams
186	Display similar cars
394	Initial Position and Momentum
504	Prediction for one image
295	No Of Storey Over The Years
693	Making Feature Matrices
815	Judge machine learning model
217	Importing Packages and Collecting Data
270	Fit an XGBoost classifier model
449	Now we want to combine the data without creating any duplicate rows
279	Best Selling Products
764	Check the dataset
653	FIX Time Zone
168	Thanks to Automatic FE The main code for basic FE
399	Start by pivoting the DataFrame to explore the label distribution over slices
665	At first , I made Europe future
214	Word map for most frequent Tags
767	Make new features using continuous feature
635	Averaging over all instances with standard deviation as errorbar
235	Seting X and Y
371	Non physical data augmentation
607	Reducing Image Size
863	NOTE Even tough it is automatic , we can incorporate some manual features
311	For the same window we superimpose the masks above the image
491	Putting the Functions Together
683	Next , we will make prediction with our LR Model
689	TPU Strategy and other configs
671	Binary Focal Loss
109	Test Input Pipeline
75	What proportion of IP download the app
873	What should good EDA be capable of
7	Now there appears to be one feature that is not gaussian
78	How many times , each categories of clickers download the app
566	Create Dataset objects
589	Load model into the TPU
570	Create real file paths dataframe
304	Text Processing of text data easily
661	Train model by each meter type
248	Document Vectors with hashing trick
517	Train the LGBM model
808	Explore ip counts
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
481	Read in Data and Create Smaller Datasets
58	Prepare Traning Data
557	Load Packages and Data
500	Function to Aggregate Stats at the Client Level
520	load mapping dictionaries
771	Tabulet per family features
2	Seems like a very wide range of values , relatively spaking
240	Loading the data
364	Compare our forecast with actual evolution both for training and validation sets
555	Process train data in parallel
486	Putting it all Together
797	Add active column
772	phone per family features
470	DFS with Default Primitives
542	inspect training samples
798	Predict by Specify Province
11	Model Validation on train data set
523	Prepare for training
490	Function to Handle Categorical Variables
88	Convert each labeled object to Run Line Encoding
620	Validation on real world data
222	Primary Use and Meter Reading
169	FS with the Pearson correlation
198	The number of samples in each cluster is the following
716	Make a Baseline model
336	and target vector that correspond to the test data size
847	The method for training is borrowed from
641	Leak Data loading and concat
574	Padding process and resizing with OpenCV
126	Showing Confusion Matrices
98	Can we get some informations out of the item description
679	Rolling monthly and yearly store means
89	Combine it into a single function
386	Draw network graph to see which ingredients are linked together
91	Zoom on the second level
782	This parted was taken from the helpful kernel
836	Opacities That Are Not Related to Pneumonia
425	Empirical Cumulative Distribution Function Plot
559	Outlier Analysis and Feature Scaling
331	Full data Analysis
306	Let us read the masks
181	Thanks for the example of ensemling different models from
455	Combined Aggregation Function
6	No surprises , since this is all presumably artificial data
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
812	Conversions by Channel
397	Here is the distribution of the maximum value for the remaining features
844	SAVE DATASET TO DISK
261	Merging the bureau dataset along with application train dataset to do more analysis
70	Hist Graph of scores
284	Visualizing Interest Level Vs Price
714	Apply invert scaling
600	Saving as JPEG
360	Transpose the dataframes
262	analyzing the numerical features disturbion in previous application dataset
86	Dealing with color
59	See sample image
834	What are Lung Opacities
251	Convolutional Neural Network
272	Visualize the default split and gains for all models
129	Code from notebook
638	evaluation solved tasks
341	Build the Model
461	Aggregate Credit previous loans
867	NaN imputation will be skipped in this tutorial
758	Data preparation for test
259	Analysis based Averages values
723	Compare timing for MixUp
275	When Do People Generally Order
644	Train model by each meter type
447	Bayesian Optimization on the Full Dataset
398	Show Original Image
203	Confusion Matrix for Train Data Predictions
171	FS with SelectFromModel and RandomForestRegressor
601	Create new labels
561	Add the actors to the renderer , set the background and size
722	Compare timing for CutMix
82	Number of clicks from the IP during the last minute
54	Using LabelEncoding we just change string values to numbers
606	Interest based on geographical location
513	Now train the models with a partial fit approach
593	Evaluate training history
208	Use the images from our validation dataset to check the precdictions
64	Split the data into train and validation parts
108	Read the data
69	Make a simple restart of runtime at this point
766	roof and electricity
636	Ploting one sample with the corresponding error as error bars
389	Use Ad Image to Identify Item Category
795	You only have two areas to work on
238	Librairies and data
388	A good item price binning should be based on the price distribution
780	Credit day overdue
710	Make prediction and apply invert scaling
68	You can state below link to your copy of this MMDetection repo
553	Visualize processed samples , resize
550	Mismatches on a validation data
184	Display a single car with its mask
846	The mean of the two is used as the final embedding matrix
763	Now , we can downcast numeric columns in the same way
289	Correlation Between Price and Other Features
580	Plotting some random images to check how cleaning works
351	Bookings per day of week
415	Next we can rename the columns to make it easier to keep track
226	Imputing Missing variable
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
737	Choose the model to use
511	Split comments into array of words
330	Lets gets started
626	Predict with mixed language models
541	load mapping dictionaries
562	OSIC training data Example
806	this graph is adapted from
16	Look at the data types and some basic info about the different columns
656	Leak Data Validation
150	Balance the target distribution
483	Plot for a sanity check
445	Applied to Full Dataset
382	Let take some small visualizations with these bool features
274	Lets Read In Data Files
34	Apply Underbalancing Techinique
356	a quick check if demand distribution changes week to week
876	Applying it on text
747	Common things for training
651	Replace to UCF and UCL data
416	Machine Learning Modeling
724	Compare timing for GridMask
857	Plot several examples of input images
112	Thanks to Automatic FE The main code for basic FE
487	Kernel Density Estimate Plots
124	Parameters and LB score visualization
3	Imputations and Data Transformation
424	Data Exploration and Data Cleaning
332	Seperating the data into different data frame based on the labels
690	Get Model into TPU
454	Categorical Aggregation Function
816	Use machine learning model
317	removing columns where correlation is high
842	Ensure determinism in the results
409	Creating Ordinal Variables
145	MAKE A TEST SET PREDICTION
650	Train model by each meter type
134	Using my notebook
253	Importing The Dataset
718	CNN Model for multiclass classification
406	Addressing Wrong Labels
774	Mix region and education
412	Redundant Individual Variables
144	Create a Classification Report
781	Credit day prolong
224	Meter Readings over time And Primary Use
163	Make a Prediction
19	The Shape of the Data
571	Load and freeze DenseNet
467	The following code repeats this plot for all the of the numeric hyperparameters
736	Try the demo model
814	Calculate extra features for test set
413	For example , we can divide the years of schooling by the age
104	Graph Representation of RNA structure
496	Function to Calculate Categorical Counts
754	Starting importance variables evaluation
604	Create test generator
803	Impact of bmi over old and young patients
196	Newer products or products from newer stores are shorter than the oldest ones
244	Splitting train into training and validation set
92	Prices of the first level of categories
549	Finding best alpha
643	Adding some lag feature
510	Check the typical length of a comment
791	Show some examples of different mask
852	Function which creates final video from list of images
57	We should give CatBoost names of categorical features
44	Unique count of Categorical values
708	Convert an array of values into a dataset matrix
160	Initialize the generators
85	We can now print the results
283	Visualizing Outliers In Data
139	Create a Directory Structure
79	Attributed time analysis
664	make hour column from transactionDT
741	An example usage
778	Wiki News FastText Embeddings
385	Predict test set and make submission
202	Using RandomForest Classifier
501	Monthly Cash Data
859	Lib and Load data
293	Top Features Selection
263	Paths to data and metadata
478	Plots of Hyperparameters vs Score
602	Pad and resize all the images
422	Filling missing and infinite data by zeroes
50	All contraction are known
711	Using all features for model training
216	Fitting Logistic Regression with OneVsRest Classifier
173	Set up the folds for cross validation
547	This images from validation data seem to be really strange labeled ...
628	Ensemble with my historical best
232	Total Time Stopped
147	Make a prediction on the test images
423	Submitting our Predictions
35	The data is not balanced
205	Transformations and Data Augmentation
27	GPU version It is just function verification , not for performance evaluation
793	It seems Goblins are a little similar to Ghouls
598	Load Model into TPU
538	New Daily Cases
753	Dealing with missed variables
273	Bounded region of parameter space
493	An important consideration is the missing values in the dataframe
630	Pick some frames to display
648	FIX Time Zone
402	Demonstration how it works
346	Modeling and Prediction
62	Create Testing Generator
529	Run length encoding to reduce predictions size
206	Converting the Input images to plot using plt
809	Conversions by App
800	Predict all country greater than
536	Get important features according to SHAP
825	Stacking models and training
456	Aggregate Grandchild Data Tables
698	Number of Patients and Images in Test Images Folder
477	Hyperparameters versus Iteration
633	Plotting errors for one sample
519	and batch aggregations examples for the rest of the tables ..
329	Calculating the day when the number of infected individuals is max
703	process submission images
83	Importation of a entire day data
682	Train Our Linear Regression Model
785	Find Null data
670	Importing Library Files
326	USA since first case
357	Same series of charts but for returns
155	Define X and y
465	First , we need to put our data into a long format dataframe
53	Predict submission dates
533	differences between public and private test
193	Visualization of a single batch
159	Load the pre processed data
440	Complete Bayesian Domain
743	Define the number of repetitions for each class
342	We can finally define the CNN architecture
854	Predict on test
277	When Do People Generally Reorder
347	Random Forest Regressor
241	MERGE , MISSING VALUE , FILL NA
49	Count occurance of words
839	The evaluation method
833	What Does a Normal Image Look Like
20	Visualizing Raw Variables
260	Checking the Correlation Between The Features for Application Train Dataset
353	Bookings by month
787	Onehot encoding for categorical data
100	Can the length of the description give us some informations
42	Data loading and checking
28	Define a Convolutional Neural Network following Yoon Kim model
297	Bathroom Count Vs Log Error
190	Code from here and below is commented out because the kernel dies
556	Process test data in parallel
90	So , some categories are expensive , but most are cheap
110	Apply Logistic Regression
437	Evaluate Best Model from Random Search
749	Random Forest model
709	Create dataset with look back
828	Perspective of Time
531	Create DFs imitating public and private test subsets
819	For neutral samples , use original texts as they are
185	How many different cars in train dataset
663	what already is known
560	and background color definition
717	Create dataset for training and Validation
476	Score versus Iteration
881	Load CSV files
183	Here is a plot of sorted category counts
883	Displaying sample image by host
372	Check if valid data looks all right
864	Relationships betweeen the sets
215	Featurization of Training Data
39	Show and save column comparision matrix and save row sets
393	Hit Rate and Charge Distribution
637	train solved tasks
874	Reading in the data , as usual
255	Identifying Missing Value Present in Application Train Dataset
759	Convert DCM to PNG
408	Redundant Household Variables
218	Variable Description and Identification
36	Take a look at predictions
84	The magical function
452	Drop Correlated Variables
649	Adding some lag feature
677	Most of the dates overlap
811	Conversions by Device
751	Putting the principles in practice
699	Create Image Augmentation Generator
197	Now , the clusters will be created using just the test set
472	Visualize Distribution of Correlated Variables
868	Let us split the variables one more time
219	Meter Reading and Meter Type
213	Importing necessary libraries
471	DFS with Selected Aggregation Primitives
818	This notebook will deal with positive , negative and neutral samples independently
384	Ordinal features mapping
127	Divide features into groups
421	Lets first check the Train Target Distribution
518	Loading the data
512	Choose and train a classifier
735	Hugging Face pretrained Bert model names
681	Merge seed for each team
199	Using DecisionTree Classifier
335	Most important or common words in neutral data
843	LOAD PROCESSED TRAINING DATA FROM DISK
675	Construct the graph and plot it
67	Saving the model
865	Feature primitives Basically which functions are we going to use to create features
715	These have their kitchen area larger than the total area of the house
777	Load and preprocess data
401	Examples of different hemorrhage subtypes
727	Distribution of product among different genders
503	Split into training and validation groups
269	Load data and fit some models
280	Top Reordered Products
312	Train a simple CNN architecture
575	Pad and resize all the images
18	Getting to Know the Data
113	FS with the Pearson correlation
309	Let us load one image and its masks
524	KFold LGB model training
497	Function for KDE Plots of Variable
505	Train and validate
151	Train Test Split
835	The Definition of Opacity
845	LOAD DATASET FROM DISK
739	Try to load the latest checkpoint
492	Aggregated Stats of Bureau Balance by Client
582	Load and process data
509	Read the data
823	Import libraries and data , reduce memory usage
464	Grid Search Implementation
745	A method to get oversampled training dataset
849	Add train leak
616	Result of my new models
156	Create a submission file
178	Apply skin segmentation on all training data and visualize the result
350	Predict on test set
579	Refit and Submit
482	Properly Representing Variable Types
428	The test distribution seems to be similar to the training distribution
667	We will also evaluate the position of the data points using the coordinates
52	Train on full data
403	Combinations of TTA
862	Getting Prime Cities
569	First downsize all the images
122	Its also builds on kernel functions but is appropriate for unsupervised learning
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
200	Confusion Matrix for Train Data Predictions
132	Training prediction result visualization
851	Function which creates set of images for each axis
333	most important or common positive words
74	Zoom on this IP
485	Create Custom Feature Primitives
775	Remove feature with only one value
761	Predictions class distribution
348	Dimensionality Reduction Techniques
135	How many images are in each folder
697	Number of Patients and Images in Training Images Folder
363	Create variables of interest
499	Function to Calculate Missing Values
140	Set Up the Generators
358	Read the csv files from kaggle
615	Relevant attributes of identified objects are stored
41	Training on the complete Dataset now
131	Code from notebook
56	Using embedding in NN we can change dimensionality of categorical features
752	Show influence of economical factors on housing prices
33	Check Validation Log Loss
107	Import Required Libraries
801	Predict all province greater than
776	Feature selection using shap
61	Prepare Testing Data
101	Is there a correlation between description length and price
567	Load Model into TPU
544	inspect datagen output
595	Unhide below to see all trials results
684	Sampling the train data since too much data
725	Data Loading and Cleaning
161	Set up the Model Architecture
349	Feature Agglomeration Results
404	Read in Data and Look at Summary Information
374	Exception value processing
367	How much does this trust interval change over the real value for kappa
658	Fast data loading
231	City and Time features
730	Choose the model to use
731	Try to load the latest checkpoint
756	Set Model for prediction
884	After we impute it , we can observe standard fluctuation
239	MERGE , MISSING VALUE , FILL NA
237	Loading the data
