858	The competition metric relies only on the order of recods ignoring IDs
123	Thanks for the example of ensemling different models from
34	Apply Underbalancing Techinique
144	Create a Classification Report
35	The data is not balanced
472	Visualize Distribution of Correlated Variables
461	Aggregate Credit previous loans
489	Function for Numeric Aggregations
486	Putting it all Together
278	How many orders users generally made
431	Use More Features
596	Save model and best hyperparams
705	we add some squared features for some model flexability
265	Apply reduction on some samples and visualize the results
9	Target varaible distribution
629	This is a simple modify from
689	TPU Strategy and other configs
249	Keras Tokenizer API
527	Define data loading
420	Visualize Tree with No Maximum Depth
863	NOTE Even tough it is automatic , we can incorporate some manual features
786	Predict null data based on statistical method
246	Document Vectors with TfidfVectorizer
668	Model Evaluation and Validation
109	Test Input Pipeline
63	See predicted result with images
189	Define some constants for data location
840	Is a program solution
384	Ordinal features mapping
423	Submitting our Predictions
103	Generating Graph Matrices from the Structures
272	Visualize the default split and gains for all models
230	Variable Description , Identification , and Correction
455	Combined Aggregation Function
591	Inference on Test Set
232	Total Time Stopped
203	Confusion Matrix for Train Data Predictions
853	Create Magic features
283	Visualizing Outliers In Data
539	Exponential Growth Curves
293	Top Features Selection
16	Look at the data types and some basic info about the different columns
691	Loading and Visualization of Data
728	Hugging Face pretrained Bert model names
125	Prepare Training Data
533	differences between public and private test
703	process submission images
769	Room per family features
229	Importing Packages and Collecting Data
791	Show some examples of different mask
457	Merge with the main dataframe
432	Explore Time Variables
761	Predictions class distribution
396	All Zero Features
584	Build datasets objects
392	Affected Surface Object
523	Prepare for training
179	Some stats using jpg exif
52	Train on full data
251	Convolutional Neural Network
274	Lets Read In Data Files
98	Can we get some informations out of the item description
317	removing columns where correlation is high
75	What proportion of IP download the app
850	Add leak to test
86	Dealing with color
208	Use the images from our validation dataset to check the precdictions
20	Visualizing Raw Variables
7	Now there appears to be one feature that is not gaussian
655	Train model by each meter type
443	Distribution of all Numeric Hyperparameters
195	Test on the data that is not seen by the network during training
538	New Daily Cases
10	Text preprosesing source
333	most important or common positive words
436	Visualize Validation Predicted Target
385	Predict test set and make submission
181	Thanks for the example of ensemling different models from
522	extract different column types
568	Create fake filepaths dataframe
747	Common things for training
309	Let us load one image and its masks
28	Define a Convolutional Neural Network following Yoon Kim model
616	Result of my new models
454	Categorical Aggregation Function
589	Load model into the TPU
569	First downsize all the images
0	Load the metadata of each file
449	Now we want to combine the data without creating any duplicate rows
764	Check the dataset
383	High cardinality features
40	Preparing the training data
238	Librairies and data
320	Replacing Mainland china with just China
657	Find Best Weight
92	Prices of the first level of categories
58	Prepare Traning Data
767	Make new features using continuous feature
650	Train model by each meter type
175	Get the dupplicate clicks with different target values
775	Remove feature with only one value
54	Using LabelEncoding we just change string values to numbers
721	Prediction for test
359	Read the csv files on the Johns Hopkins CSSE database on github
339	Load and Explore Data
5	Detect and Correct Outliers
305	Thx Stackoverflow for realization
281	Which item do people put into the cart first
811	Conversions by Device
219	Meter Reading and Meter Type
740	Check saved checkpoints
727	Distribution of product among different genders
234	Encoding Cordinal Direction
407	Families without Heads of Household
682	Train Our Linear Regression Model
415	Next we can rename the columns to make it easier to keep track
197	Now , the clusters will be created using just the test set
483	Plot for a sanity check
559	Outlier Analysis and Feature Scaling
636	Ploting one sample with the corresponding error as error bars
530	Map extracted timestamps to columns
763	Now , we can downcast numeric columns in the same way
255	Identifying Missing Value Present in Application Train Dataset
857	Plot several examples of input images
627	Blend and smooth for submission
18	Getting to Know the Data
331	Full data Analysis
634	Some correlation is indeed present
313	Training and callbacs
480	First we need to format the data and extract the labels
414	Feature Engineering through Aggregations
693	Making Feature Matrices
342	We can finally define the CNN architecture
594	Load and preprocess data
171	FS with SelectFromModel and RandomForestRegressor
70	Hist Graph of scores
372	Check if valid data looks all right
349	Feature Agglomeration Results
168	Thanks to Automatic FE The main code for basic FE
25	Predicting for test data
490	Function to Handle Categorical Variables
47	FVC Progression by Sex
259	Analysis based Averages values
642	FIX Time Zone
447	Bayesian Optimization on the Full Dataset
285	Visuallizing Interest Level Vs Bathroom
247	Document Vectors with HashingVectorizer
834	What are Lung Opacities
513	Now train the models with a partial fit approach
833	What Does a Normal Image Look Like
79	Attributed time analysis
262	analyzing the numerical features disturbion in previous application dataset
654	Adding some lag feature
29	Data is still small enough for memory so read to memory using pandas
368	filtering out outliers
211	CatBoost is RAM expensive so I prefer to utilize GPU
106	plotting the scan
116	Ensembling the solutions and submission
471	DFS with Selected Aggregation Primitives
699	Create Image Augmentation Generator
631	Split Trian and Valid
216	Fitting Logistic Regression with OneVsRest Classifier
741	An example usage
310	Now we can read the masks for the specific image
681	Merge seed for each team
717	Create dataset for training and Validation
746	Check oversampled dataset
856	You can choose many palettes , which makes the graphs visually nice
614	Comparing various kappa scoring
687	These labels are not in train
658	Fast data loading
662	Replace to UCF data
397	Here is the distribution of the maximum value for the remaining features
517	Train the LGBM model
301	Composition of Augmentations
145	MAKE A TEST SET PREDICTION
99	What words do people use
803	Impact of bmi over old and young patients
102	Data Info Method
838	Composition of functions
882	We can safely store the two types into separate dataframes
702	process test images
190	Code from here and below is commented out because the kernel dies
279	Best Selling Products
780	Credit day overdue
355	expanding the aggregate
698	Number of Patients and Images in Test Images Folder
217	Importing Packages and Collecting Data
137	Display a random sample of train images by class
621	Drop the blurry image
865	Feature primitives Basically which functions are we going to use to create features
617	Import the modules
346	Modeling and Prediction
599	Will need those folders later for storing our jpegs
308	Let us plot some bounding boxes right from the dictionary we just created
832	Load train and test dataframes and add length columns for Description and Name
178	Apply skin segmentation on all training data and visualize the result
825	Stacking models and training
3	Imputations and Data Transformation
880	Evaluate the Model
316	Display train and test signals
623	Creating submission file
193	Visualization of a single batch
96	What are the most expensive items
15	Maybe if we used the log plot things would be better
156	Create a submission file
408	Redundant Household Variables
312	Train a simple CNN architecture
95	What are their top categories
606	Interest based on geographical location
280	Top Reordered Products
511	Split comments into array of words
521	add breed mapping
870	That is the size of one test example that we ought to predict
337	It fills our perfect submission with n randomly distributed random answers i.e
142	What is the AUC Score
450	Admit and Correct Mistakes
528	Perform check on randomly chosen mask and prediction
67	Saving the model
80	Download rate by hour
19	The Shape of the Data
146	Set up the generator
330	Lets gets started
386	Draw network graph to see which ingredients are linked together
120	Add country details
788	Prediction with xgboost
55	We should split our dataset to create validation and train parts
44	Unique count of Categorical values
253	Importing The Dataset
500	Function to Aggregate Stats at the Client Level
113	FS with the Pearson correlation
360	Transpose the dataframes
182	Manager function to call the create features functions in multiple processes
438	Now we can evaluate the baseline model on the testing data
6	No surprises , since this is all presumably artificial data
169	FS with the Pearson correlation
225	Square feet size is positively Skewed
221	Time of Day and Meter Reading
297	Bathroom Count Vs Log Error
464	Grid Search Implementation
76	Does bots download the app
874	Reading in the data , as usual
61	Prepare Testing Data
652	Fast data loading
801	Predict all province greater than
875	Now that we have dataset in desired form , i.e
338	Import Packages and Functions
501	Monthly Cash Data
524	KFold LGB model training
556	Process test data in parallel
307	So a unique operator will give us the unique filenames that contain ships
685	targets in labels.csv
484	Previous Credit and Cash
509	Read the data
121	Ridge Regression for one country
836	Opacities That Are Not Related to Pneumonia
542	inspect training samples
288	Bedrooms Vs Bathrooms Vs Interest Level
802	Age distribution of male and female patients
417	The data has no missing values and is scaled between zero and one
209	Data load and process functions
141	Plot the Training Curves
503	Split into training and validation groups
860	Explore distribution of single variable
32	The data is not balanced
604	Create test generator
754	Starting importance variables evaluation
267	Rescaling the Image Most image preprocessing functions want the image as grayscale
723	Compare timing for MixUp
554	Visualize test processed samples , resize
376	y的异常值 drop samples which have exception value in y
243	Training the model on CPU
446	Random Search on the Full Dataset
645	Replace to Leak data
326	USA since first case
735	Hugging Face pretrained Bert model names
11	Model Validation on train data set
166	What is a python generator
537	Examining the Growth Curves
465	First , we need to put our data into a long format dataframe
818	This notebook will deal with positive , negative and neutral samples independently
49	Count occurance of words
81	Last click from the IP analysis
426	Rides on Map of NYC
468	Sequence of Search Values
677	Most of the dates overlap
726	Visualising the distribution of each product by age by boxplot
852	Function which creates final video from list of images
797	Add active column
319	Some сustom Loss functions
268	Interpreting ROC Plot
8	Read data set
412	Redundant Individual Variables
91	Zoom on the second level
812	Conversions by Channel
245	Create Document Vectors
64	Split the data into train and validation parts
628	Ensemble with my historical best
600	Saving as JPEG
228	Prediction and Submission
502	Monthly Credit Data
17	Do some simple plots for exploration
12	Roc AUC curve
154	Plot the Training Curves
62	Create Testing Generator
544	inspect datagen output
732	Run on validation dataset
534	Distribution of months in train and test
506	Locating a face within an image
286	Visualizing Interest Level Vs Bedrooms
452	Drop Correlated Variables
199	Using DecisionTree Classifier
382	Let take some small visualizations with these bool features
602	Pad and resize all the images
115	Parameters and LB score visualization
846	The mean of the two is used as the final embedding matrix
344	Looks like there are no missing values in the dataframe
126	Showing Confusion Matrices
329	Calculating the day when the number of infected individuals is max
23	Defining DataBunch for FastAI
526	Set data loading parameters
38	Loading data etc
378	y hist with defferent timestamps are similar
433	We can make the same plot by day of the week
205	Transformations and Data Augmentation
425	Empirical Cumulative Distribution Function Plot
318	Trivial segmentation stuff
585	Load model into the TPU
855	Loading libraries and data
800	Predict all country greater than
485	Create Custom Feature Primitives
638	evaluation solved tasks
595	Unhide below to see all trials results
665	At first , I made Europe future
771	Tabulet per family features
762	Divide data into training and validation sets
859	Lib and Load data
806	this graph is adapted from
273	Bounded region of parameter space
844	SAVE DATASET TO DISK
418	Comparing Model Performance
535	SHAP Interaction Values
669	They are very similar to each other
89	Combine it into a single function
427	Calculate Distance between points using Haversine distance
877	Read and Explore
612	Infer using trained model
633	Plotting errors for one sample
357	Same series of charts but for returns
282	Visualizing Distribution Of Price Before and After Removing Outliers
129	Code from notebook
795	You only have two areas to work on
674	OUTPUT OF AUGMENTATED IMAGES
573	Save model and weights
813	Preparing the data
105	Loading the files
289	Correlation Between Price and Other Features
177	Basic skin detection
353	Bookings by month
256	Checking the Imbalance of Target Variable
222	Primary Use and Meter Reading
112	Thanks to Automatic FE The main code for basic FE
881	Load CSV files
453	Numeric Aggregation Function
148	Create a submission file
356	a quick check if demand distribution changes week to week
708	Convert an array of values into a dataset matrix
358	Read the csv files from kaggle
478	Plots of Hyperparameters vs Score
403	Combinations of TTA
2	Seems like a very wide range of values , relatively spaking
552	Inspection of created samples , with normalization
215	Featurization of Training Data
822	Made a mask using the tour
541	load mapping dictionaries
39	Show and save column comparision matrix and save row sets
660	Adding some lag feature
167	How to make a generator run infinitely
620	Validation on real world data
776	Feature selection using shap
369	using outliers column as labels instead of target column
212	Use of Bayesian Block in Santander Customer Transaction Prediction Challenge
809	Conversions by App
296	Bedroom Count Vs Log Error
187	Display some of similar cars
30	And finally lets look at the class distribution
241	MERGE , MISSING VALUE , FILL NA
755	Best parameters are searched by GridSearchCV on my Laptop
610	Training the model
827	At the scale of stores
163	Make a Prediction
409	Creating Ordinal Variables
149	Create Binary Targets
716	Make a Baseline model
36	Take a look at predictions
772	phone per family features
68	You can state below link to your copy of this MMDetection repo
757	Test data preparation
828	Perspective of Time
532	train and test rows fraction intersection
266	Hit Rate Bar Chart
463	Learning Rate Domain
750	Data transformation and helper functions
153	Set Up the Generators
184	Display a single car with its mask
493	An important consideration is the missing values in the dataframe
298	Room Count Vs Log Error
731	Try to load the latest checkpoint
111	Comparison of the all feature importance diagrams
656	Leak Data Validation
174	Genetic program model , main code loop
571	Load and freeze DenseNet
648	FIX Time Zone
354	Interactive booking , click , and percentage of booking trends with Bokeh
710	Make prediction and apply invert scaling
590	Running the model on a Sample Image
547	This images from validation data seem to be really strange labeled ...
861	We can see above the counts of higher damageDealt smoothly decrease
678	Adding categorical features
26	Load pneumonia locations
227	Encoding Categorical Variable
738	Get variables to apply weight decay in AdamW optimizer
59	See sample image
462	Hyperparameter Tuning Implementation
704	process tabular features
546	Custom LR schedule
210	CatBoost Pool and Regression
624	Build the original and translated test data
499	Function to Calculate Missing Values
161	Set up the Model Architecture
577	Group and Reduce
440	Complete Bayesian Domain
473	Remove Low Importance Features
531	Create DFs imitating public and private test subsets
46	Submission data prediction
737	Choose the model to use
514	Now predict the result for each toxic level
729	Make TF record file for test dataset
351	Bookings per day of week
567	Load Model into TPU
94	More details on brands with a treemap
821	Plot the obtained tour
87	Deriving individual masks for each object
345	Exploratory Data Analysis
751	Putting the principles in practice
837	If you like the content of this notebook , please consider upvoting it
653	FIX Time Zone
823	Import libraries and data , reduce memory usage
482	Properly Representing Variable Types
13	And now we embed each chunk individually
734	Run on test dataset
504	Prediction for one image
445	Applied to Full Dataset
413	For example , we can divide the years of schooling by the age
519	and batch aggregations examples for the rest of the tables ..
829	Other special events
22	Seed everything for reproducibility
561	Add the actors to the renderer , set the background and size
1	Testing Time Augmentation
725	Data Loading and Cleaning
680	Fitting the trend on the yearly time series
643	Adding some lag feature
365	Show one Example of landmark images
588	Build datasets objects
603	Focal loss is good for unbalanced datasets , like this one
824	Some Feature Engineering
21	Importing all Libraries
183	Here is a plot of sorted category counts
411	In most cases , the values are very similar
239	MERGE , MISSING VALUE , FILL NA
579	Refit and Submit
56	Using embedding in NN we can change dimensionality of categorical features
477	Hyperparameters versus Iteration
550	Mismatches on a validation data
876	Applying it on text
684	Sampling the train data since too much data
82	Number of clicks from the IP during the last minute
632	This plot shows summarized information about feature impact against shap output
815	Judge machine learning model
138	Balance the target distribution
781	Credit day prolong
393	Hit Rate and Charge Distribution
807	Only a small proportion of clicks were followed by a download
814	Calculate extra features for test set
742	Get labels and their countings
785	Find Null data
644	Train model by each meter type
794	Logistic Regression seems to be a good classification algorithm for this dataset
362	Join all dataframes
164	Process the Predictions
421	Lets first check the Train Target Distribution
176	Display all test images
758	Data preparation for test
695	Visualize by heatmap
27	GPU version It is just function verification , not for performance evaluation
713	Split into train and test sets
640	Fast data loading
399	Start by pivoting the DataFrame to explore the label distribution over slices
630	Pick some frames to display
334	Most important or common negative words
749	Random Forest model
768	Ratio feature can have infinite values
290	Main Config Variables
694	Count game trainsition
826	cut down features to avoid the kernel die
260	Checking the Correlation Between The Features for Application Train Dataset
494	Calculate Information for Testing Data
580	Plotting some random images to check how cleaning works
304	Text Processing of text data easily
566	Create Dataset objects
444	Evolution of Search
583	Load text data into memory
578	Adding mode as feature
670	Importing Library Files
469	Testing Results on Full Data
43	Unique value counts
659	Leak Data loading and concat
401	Examples of different hemorrhage subtypes
204	Confusion Matrix for Test Data Predictions
878	Replace infs and imputing missing values by mean
398	Show Original Image
336	and target vector that correspond to the test data size
819	For neutral samples , use original texts as they are
718	CNN Model for multiclass classification
347	Random Forest Regressor
379	Save objects for next step
608	Save results as CSV files
808	Explore ip counts
180	Its also builds on kernel functions but is appropriate for unsupervised learning
314	Prediction on test set
536	Get important features according to SHAP
679	Rolling monthly and yearly store means
518	Loading the data
796	Get data from
416	Machine Learning Modeling
101	Is there a correlation between description length and price
793	It seems Goblins are a little similar to Ghouls
390	Price Variance Within Identified Items
370	Check Unique Label
325	Iran since first case
335	Most important or common words in neutral data
548	Load Model into TPU
277	When Do People Generally Reorder
558	Exploratory Data Analysis
743	Define the number of repetitions for each class
65	Create and set up the model
402	Demonstration how it works
375	The following is features with fine hist
430	Train with Simple Features
364	Compare our forecast with actual evolution both for training and validation sets
371	Non physical data augmentation
257	Types Of Features
619	Check some augmentation effect
198	The number of samples in each cluster is the following
607	Reducing Image Size
322	Comparison between Brazil and Italy
529	Run length encoding to reduce predictions size
341	Build the Model
244	Splitting train into training and validation set
565	TPU Strategy and other configs
207	Defining our Model
854	Predict on test
622	Display the dropped images
122	Its also builds on kernel functions but is appropriate for unsupervised learning
127	Divide features into groups
48	FVC Progression by SmokingStatus
429	Create Training and Validation Set
613	Reproducing simple baseline
410	Per Capita Features
481	Read in Data and Create Smaller Datasets
714	Apply invert scaling
367	How much does this trust interval change over the real value for kappa
831	Disable fastai randomness
582	Load and process data
664	make hour column from transactionDT
496	Function to Calculate Categorical Counts
647	Leak Data loading and concat
254	Function for find out Numerical and categeical Variables
498	Function to Convert Data Types
492	Aggregated Stats of Bureau Balance by Client
97	Does shipping depends of price
434	Test Time Features
651	Replace to UCF and UCL data
235	Seting X and Y
720	Define dataset and model
185	How many different cars in train dataset
572	Creating and Training the Model
676	Then transform to a datetime object supposing that it is an ordinal datetime
300	Gaussian Noise on Target
114	FS with SelectFromModel and LinearSVR
646	Fast data loading
37	Ability to Detect Face
226	Imputing Missing variable
605	Inference on test set
592	Load and preprocess data
625	Predict with pure text models
108	Read the data
551	Inspection of created samples , without normalization
830	Inspect the data at different time scale
661	Train model by each meter type
842	Ensure determinism in the results
845	LOAD DATASET FROM DISK
428	The test distribution seems to be similar to the training distribution
51	Convert to lower case Clean contractions Clean special charactor Convert small caps
269	Load data and fit some models
220	Weekday and Meter Reading
667	We will also evaluate the position of the data points using the coordinates
295	No Of Storey Over The Years
24	Unfreeze all layers and find best learning rate
69	Make a simple restart of runtime at this point
248	Document Vectors with hashing trick
871	Let us proceede with further interesting EDA
790	the difficuly of training different mask type is different
576	Load Model into TPU
294	Dependent variable logerror follows nice normal distribution
562	OSIC training data Example
872	Save some memory
14	And it looks like a fairly nice distribution , albeit still fairly asymetrical
373	missing value statistics
41	Training on the complete Dataset now
192	Load tabular data and create new features
223	Meter Readings over time
128	Showing Confusion Matrices
158	Thanks for the example of ensemling different models from
866	Label encoding Making it machine readable
84	The magical function
90	So , some categories are expensive , but most are cheap
700	Get Tabular Data
701	process training images
155	Define X and y
851	Function which creates set of images for each axis
849	Add train leak
350	Predict on test set
218	Variable Description and Identification
104	Graph Representation of RNA structure
745	A method to get oversampled training dataset
868	Let us split the variables one more time
213	Importing necessary libraries
869	Train the model , predict , etc
557	Load Packages and Data
73	What proportion of click generate downloads
553	Visualize processed samples , resize
270	Fit an XGBoost classifier model
848	Find final Thresshold
649	Adding some lag feature
782	This parted was taken from the helpful kernel
719	Create Inference Dataset
404	Read in Data and Look at Summary Information
883	Displaying sample image by host
327	Getting population for each country
133	Using my notebook
475	Distribution of Scores
107	Import Required Libraries
292	Create final submission DF
730	Choose the model to use
459	Aggregate Installments Data
437	Evaluate Best Model from Random Search
361	Create dataframe listing the starting date of lockdowns
688	train valid split
626	Predict with mixed language models
328	Select the models to run setting bool variables below
299	No Of Storeys Vs Log Error
756	Set Model for prediction
575	Pad and resize all the images
31	Initialize Mobilenet Face Extractor
816	Use machine learning model
202	Using RandomForest Classifier
520	load mapping dictionaries
152	Key No Diabetic Retinopathy Has Diabetic Retinopathy
495	Function to Aggregate Numeric Data
131	Code from notebook
93	Which brands are most expensive
779	Check null data
460	Aggregate Cash previous loans
264	Group signals metadata accroding to target
45	test prediction by LGBM and feature importance check
545	Finally , we are ready to load the whole series into one matrix
311	For the same window we superimpose the masks above the image
470	DFS with Default Primitives
505	Train and validate
315	We can now create a submission file
707	Split into train and test sets
323	China scenario since first entry
778	Wiki News FastText Embeddings
448	Standard imports for data science work
739	Try to load the latest checkpoint
451	Identify Correlated Variables
332	Seperating the data into different data frame based on the labels
765	Check null data
641	Leak Data loading and concat
712	Function to convert series to supervised learning
170	FS with SelectFromModel and LinearSVR
748	Results from my own training
261	Merging the bureau dataset along with application train dataset to do more analysis
157	Its also builds on kernel functions but is appropriate for unsupervised learning
236	Which Team Wins And Lost The Most Championships
119	Compute lags and trends
419	Recursive Feature Elimination with Random Forest
773	combination using three features
395	Correlation with Deal Probability
706	Random Search Confidence
783	Check the dataset
4	Impute any values will significantly affect the RMSE score for test set
458	Aggregate previous loans at Home Credit
165	Create the submission csv file
722	Compare timing for CutMix
752	Show influence of economical factors on housing prices
683	Next , we will make prediction with our LR Model
510	Check the typical length of a comment
186	Display similar cars
442	Learning Rate Distribution
597	Create Dataset objects
387	Remove Extreme Prices
841	Solve the task
83	Importation of a entire day data
843	LOAD PROCESSED TRAINING DATA FROM DISK
474	Align Train and Test Sets
525	Initialize train and test DataFrames to access IDs and depth information
130	My upgrade of parameters
135	How many images are in each folder
456	Aggregate Grandchild Data Tables
873	What should good EDA be capable of
151	Train Test Split
787	Onehot encoding for categorical data
400	As a Neuroradiologist , this distribution looks pretty true to daily practice
287	Visualizing Interest Level Vs Hour
810	Conversions by OS
760	Split training set
805	Here is a base model without parameter tuning .
422	Filling missing and infinite data by zeroes
147	Make a prediction on the test images
214	Word map for most frequent Tags
100	Can the length of the description give us some informations
744	Define the number of repetitions for each training example
598	Load Model into TPU
618	Other columns are the digital value of pixels of kannada mnist
820	Write a problem file
601	Create new labels
74	Zoom on this IP
250	Creating the Model
867	NaN imputation will be skipped in this tutorial
381	Density plot of numeric features
488	Correlations of Aggregated Values with Target
233	Encoding Street Names
560	and background color definition
466	Distribution of Search Values
639	All train tasks predictions
57	We should give CatBoost names of categorical features
78	How many times , each categories of clickers download the app
587	Load text data into memory
467	The following code repeats this plot for all the of the numeric hyperparameters
715	These have their kitchen area larger than the total area of the house
671	Binary Focal Loss
799	Predict by Specify Country
263	Paths to data and metadata
675	Construct the graph and plot it
515	Define helper functions
389	Use Ad Image to Identify Item Category
162	Plot the Loss Curves
884	After we impute it , we can observe standard fluctuation
777	Load and preprocess data
77	Does standard users download the app
770	BedRoom per family features
140	Set Up the Generators
42	Data loading and checking
792	Null data check
696	View Single Image
543	inspect validation samples
835	The Definition of Opacity
581	The filtration step for RGB images may take a lot of time
160	Initialize the generators
206	Converting the Input images to plot using plt
879	RF for feature selection
753	Dealing with missed variables
724	Compare timing for GridMask
173	Set up the folds for cross validation
766	roof and electricity
117	Implementing the SIR model
60	See how our generator work
593	Evaluate training history
864	Relationships betweeen the sets
686	targets in train.csv
508	Income distribution and target value
275	When Do People Generally Order
237	Loading the data
405	Exploring Label Distribution
479	Now for the next four hyperparameters versus the score
321	Now a look at Italy
132	Training prediction result visualization
194	Idea is to use clustering on images of one type to group data
303	Preprocessing of features
733	Get metrics for validation dataset
476	Score versus Iteration
839	The evaluation method
88	Convert each labeled object to Run Line Encoding
862	Getting Prime Cities
188	Display some of similar cars
804	Difference varialbes were created to describe the difference beween maximum and minimum value
666	There is a gap between them
271	Visualize the feature interaction
340	Create the embedding layer
242	Loading the data
348	Dimensionality Reduction Techniques
798	Predict by Specify Province
784	Moving average is so simple
134	Using my notebook
491	Putting the Functions Together
71	I updated importation for a faster version
391	Price Variance in param
635	Averaging over all instances with standard deviation as errorbar
406	Addressing Wrong Labels
512	Choose and train a classifier
697	Number of Patients and Images in Training Images Folder
224	Meter Readings over time And Primary Use
388	A good item price binning should be based on the price distribution
574	Padding process and resizing with OpenCV
240	Loading the data
302	Loading and preprocessing data
709	Create dataset with look back
136	Create a Dataframe containing all images
497	Function for KDE Plots of Variable
637	train solved tasks
150	Balance the target distribution
439	The number of leaves on the other hand is a discrete uniform distribution
615	Relevant attributes of identified objects are stored
570	Create real file paths dataframe
85	We can now print the results
343	Imputing missing values
324	Spain since first recorded case
711	Using all features for model training
609	Losses and Metrics
374	Exception value processing
759	Convert DCM to PNG
736	Try the demo model
847	The method for training is borrowed from
110	Apply Logistic Regression
377	Divide the test set and the training set
817	Start positions and end positions of selected texts in tokenized source texts
563	Predict Test Set and Submit Result
507	Granted applications per number of children
191	Lets validate the test files
231	City and Time features
487	Kernel Density Estimate Plots
441	Example of Sampling from the Domain
663	what already is known
172	Load data files
72	How many different values does our categorial variables take
394	Initial Position and Momentum
258	Analysis Based on EXter Source Types
555	Process train data in parallel
586	Create fast tokenizer
200	Confusion Matrix for Train Data Predictions
673	Dense Added Model
53	Predict submission dates
424	Data Exploration and Data Cleaning
291	Resnext initialize functions
363	Create variables of interest
516	Predict validation and test set masks
549	Finding best alpha
672	Efficient Net Architecture
276	At What Day Of The Week People Order
201	Confusion Matrix for Test Data Predictions
366	Data Exploration The label distribution shows clear label imbalance
252	Recurrent Neural Network
33	Check Validation Log Loss
690	Get Model into TPU
284	Visualizing Interest Level Vs Price
50	All contraction are known
196	Newer products or products from newer stores are shorter than the oldest ones
774	Mix region and education
692	Making Vocabulary and Text Conversion
564	A simple function from stack overflow that crops the image
139	Create a Directory Structure
789	Target , prediction process
352	Bookings by year
143	Create a Confusion Matrix
435	Try with All Time Variables
124	Parameters and LB score visualization
66	Counting the metric score
380	Import necessary libraries
118	Join data , filter dates and clean missings
540	Gaussian Approximation of Active Cases
611	Load Test dataframe
159	Load the pre processed data
306	Let us read the masks
