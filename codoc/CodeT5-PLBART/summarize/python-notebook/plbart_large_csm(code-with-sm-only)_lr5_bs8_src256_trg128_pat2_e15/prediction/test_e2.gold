591	Evaluate the Model
72	Graph Representation of RNA structure
561	Solve the task
134	Test on the data that is not seen by the network during training
563	LOAD PROCESSED TRAINING DATA FROM DISK
526	Moving average is so simple
236	Build the Model
54	How many different values does our categorial variables take
553	Disable fastai randomness
428	This is a simple modify from
166	MERGE , MISSING VALUE , FILL NA
103	Set Up the Generators
182	analyzing the numerical features disturbion in previous application dataset
262	Ordinal features mapping
367	Exponential Growth Curves
159	Prediction and Submission
117	FS with SelectFromModel and LinearSVR
437	Leak Data loading and concat
173	Document Vectors with hashing trick
79	Parameters and LB score visualization
73	Import Required Libraries
477	Split into train and test sets
557	Opacities That Are Not Related to Pneumonia
450	Importing Library Files
512	Data preparation for test
382	First downsize all the images
246	a quick check if demand distribution changes week to week
191	When Do People Generally Order
142	Converting the Input images to plot using plt
25	Take a look at predictions
507	Data transformation and helper functions
422	Display the dropped images
309	Applied to Full Dataset
290	Lets first check the Train Target Distribution
52	Hist Graph of scores
232	and target vector that correspond to the test data size
592	Load CSV files
318	Aggregate previous loans at Home Credit
518	Ratio feature can have infinite values
35	Count occurance of words
220	Spain since first recorded case
155	Meter Readings over time And Primary Use
89	Using my notebook
569	Add leak to test
581	NaN imputation will be skipped in this tutorial
226	Lets gets started
137	Confusion Matrix for Train Data Predictions
112	Create the submission csv file
412	Reducing Image Size
77	FS with the Pearson correlation
417	Comparing various kappa scoring
426	Predict with mixed language models
24	The data is not balanced
381	Create fake filepaths dataframe
355	Loading the data
401	Inference on Test Set
531	Null data check
509	Best parameters are searched by GridSearchCV on my Laptop
40	Using embedding in NN we can change dimensionality of categorical features
179	Analysis based Averages values
474	process test images
83	Thanks for the example of ensemling different models from
516	Check null data
390	Adding mode as feature
330	Visualize Distribution of Correlated Variables
165	Librairies and data
41	Prepare Traning Data
174	Keras Tokenizer API
124	Apply skin segmentation on all training data and visualize the result
203	Room Count Vs Log Error
50	You can state below link to your copy of this MMDetection repo
513	Convert DCM to PNG
168	MERGE , MISSING VALUE , FILL NA
482	These have their kitchen area larger than the total area of the house
533	Logistic Regression seems to be a good classification algorithm for this dataset
81	Implementing the SIR model
487	Define dataset and model
377	OSIC training data Example
148	Importing Packages and Collecting Data
299	Use More Features
161	Encoding Street Names
418	Relevant attributes of identified objects are stored
336	Properly Representing Variable Types
472	Get Tabular Data
467	Visualize by heatmap
371	This images from validation data seem to be really strange labeled ...
85	Prepare Training Data
190	Lets Read In Data Files
547	This notebook will deal with positive , negative and neutral samples independently
188	Load data and fit some models
574	Lib and Load data
57	Attributed time analysis
94	What is the AUC Score
251	filtering out outliers
19	Predicting for test data
333	Distribution of Scores
548	For neutral samples , use original texts as they are
46	Split the data into train and validation parts
278	Creating Ordinal Variables
128	Manager function to call the create features functions in multiple processes
241	Bookings per day of week
593	We can safely store the two types into separate dataframes
47	Create and set up the model
537	Predict by Specify Country
280	In most cases , the values are very similar
580	Label encoding Making it machine readable
590	RF for feature selection
126	Its also builds on kernel functions but is appropriate for unsupervised learning
386	Save model and weights
582	Let us split the variables one more time
405	Unhide below to see all trials results
202	Bathroom Count Vs Log Error
140	Confusion Matrix for Train Data Predictions
398	Load text data into memory
495	Run on validation dataset
466	Count game trainsition
530	Target , prediction process
556	What are Lung Opacities
470	Number of Patients and Images in Test Images Folder
534	You only have two areas to work on
153	Primary Use and Meter Reading
263	Predict test set and make submission
133	Idea is to use clustering on images of one type to group data
266	Price Variance Within Identified Items
69	What words do people use
257	y的异常值 drop samples which have exception value in y
237	Imputing missing values
439	Leak Data loading and concat
172	Document Vectors with HashingVectorizer
229	most important or common positive words
335	First we need to format the data and extract the labels
18	Unfreeze all layers and find best learning rate
476	we add some squared features for some model flexability
359	Prepare for training
338	Correlations of Aggregated Values with Target
579	Feature primitives Basically which functions are we going to use to create features
392	Plotting some random images to check how cleaning works
562	Ensure determinism in the results
295	Rides on Map of NYC
443	Leak Data loading and concat
341	Aggregated Stats of Bureau Balance by Client
58	Download rate by hour
504	Define the number of repetitions for each class
70	Can the length of the description give us some informations
51	Make a simple restart of runtime at this point
510	Set Model for prediction
185	Apply reduction on some samples and visualize the results
407	Load Model into TPU
458	targets in labels.csv
162	Encoding Cordinal Direction
508	Show influence of economical factors on housing prices
378	Predict Test Set and Submit Result
559	Composition of functions
38	Predict submission dates
136	Using DecisionTree Classifier
420	Other columns are the digital value of pixels of kannada mnist
501	Check saved checkpoints
56	Does bots download the app
99	Create a submission file
410	Pad and resize all the images
216	Replacing Mainland china with just China
221	Iran since first case
2	Impute any values will significantly affect the RMSE score for test set
105	Its also builds on kernel functions but is appropriate for unsupervised learning
167	Loading the data
502	An example usage
198	Main Config Variables
468	View Single Image
119	Load data files
294	Empirical Cumulative Distribution Function Plot
268	All Zero Features
545	Preparing the data
442	Fast data loading
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
456	Next , we will make prediction with our LR Model
306	Now we can evaluate the baseline model on the testing data
360	Initialize train and test DataFrames to access IDs and depth information
403	Evaluate training history
583	That is the size of one test example that we ought to predict
364	Distribution of months in train and test
279	Per Capita Features
498	Hugging Face pretrained Bert model names
488	Prediction for test
91	Create a Dataframe containing all images
416	Infer using trained model
350	Read the data
383	Create real file paths dataframe
334	Plots of Hyperparameters vs Score
423	Creating submission file
565	LOAD DATASET FROM DISK
374	Outlier Analysis and Feature Scaling
329	DFS with Selected Aggregation Primitives
505	Check oversampled dataset
138	Confusion Matrix for Test Data Predictions
276	Families without Heads of Household
55	Zoom on this IP
354	Train the LGBM model
14	The Shape of the Data
448	Model Evaluation and Validation
413	Save results as CSV files
400	Load model into the TPU
200	No Of Storey Over The Years
578	NOTE Even tough it is automatic , we can incorporate some manual features
430	Split Trian and Valid
415	Load Test dataframe
180	Checking the Correlation Between The Features for Application Train Dataset
345	Split into training and validation groups
303	Try with All Time Variables
464	Making Vocabulary and Text Conversion
444	what already is known
385	Creating and Training the Model
462	Get Model into TPU
211	So a unique operator will give us the unique filenames that contain ships
391	Refit and Submit
328	DFS with Default Primitives
459	targets in train.csv
427	Ensemble with my historical best
311	Bayesian Optimization on the Full Dataset
300	Explore Time Variables
59	Importation of a entire day data
527	Find Null data
520	Mix region and education
39	Using LabelEncoding we just change string values to numbers
68	Can we get some informations out of the item description
573	The competition metric relies only on the order of recods ignoring IDs
5	Now there appears to be one feature that is not gaussian
503	Get labels and their countings
130	Define some constants for data location
254	Non physical data augmentation
118	FS with SelectFromModel and RandomForestRegressor
577	Getting Prime Cities
8	Model Validation on train data set
42	See sample image
273	Combinations of TTA
469	Number of Patients and Images in Training Images Folder
376	Add the actors to the renderer , set the background and size
585	What should good EDA be capable of
461	TPU Strategy and other configs
1	Imputations and Data Transformation
152	Time of Day and Meter Reading
84	Parameters and LB score visualization
151	Weekday and Meter Reading
566	The mean of the two is used as the final embedding matrix
445	make hour column from transactionDT
288	Recursive Feature Elimination with Random Forest
92	Balance the target distribution
587	Applying it on text
7	Text preprosesing source
532	It seems Goblins are a little similar to Ghouls
108	Initialize the generators
551	Import libraries and data , reduce memory usage
365	SHAP Interaction Values
485	CNN Model for multiclass classification
540	Age distribution of male and female patients
434	evaluation solved tasks
455	Train Our Linear Regression Model
519	combination using three features
362	Perform check on randomly chosen mask and prediction
522	Feature selection using shap
429	Pick some frames to display
296	The test distribution seems to be similar to the training distribution
517	Make new features using continuous feature
261	High cardinality features
0	Seems like a very wide range of values , relatively spaking
49	Saving the model
215	Prediction on test set
446	At first , I made Europe future
259	Save objects for next step
560	The evaluation method
552	At the scale of stores
21	And finally lets look at the class distribution
63	Convert each labeled object to Run Line Encoding
154	Meter Readings over time
421	Drop the blurry image
493	Make TF record file for test dataset
253	Check Unique Label
121	Genetic program model , main code loop
277	Redundant Household Variables
486	Create Inference Dataset
313	Now we want to combine the data without creating any duplicate rows
322	Hyperparameter Tuning Implementation
301	We can make the same plot by day of the week
231	Most important or common words in neutral data
239	Feature Agglomeration Results
451	OUTPUT OF AUGMENTATED IMAGES
535	Add active column
544	Conversions by Device
139	Using RandomForest Classifier
440	Fast data loading
473	process training images
100	Create Binary Targets
29	Preparing the training data
431	This plot shows summarized information about feature impact against shap output
379	TPU Strategy and other configs
436	Fast data loading
312	Standard imports for data science work
317	Merge with the main dataframe
396	Load model into the TPU
145	Word map for most frequent Tags
586	Reading in the data , as usual
397	Create fast tokenizer
235	Create the embedding layer
177	Function for find out Numerical and categeical Variables
539	Predict all province greater than
370	inspect datagen output
157	Imputing Missing variable
283	Feature Engineering through Aggregations
575	Explore distribution of single variable
499	Choose the model to use
361	Set data loading parameters
230	Most important or common negative words
250	Join all dataframes
197	Correlation Between Price and Other Features
66	What are their top categories
287	Comparing Model Performance
411	Create test generator
228	Seperating the data into different data frame based on the labels
86	Divide features into groups
515	Check the dataset
194	How many orders users generally made
314	Identify Correlated Variables
30	Training on the complete Dataset now
115	Thanks to Automatic FE The main code for basic FE
447	There is a gap between them
380	Load Model into TPU
366	Get important features according to SHAP
460	These labels are not in train
27	Loading data etc
475	process submission images
11	Maybe if we used the log plot things would be better
242	Bookings by year
489	Compare timing for CutMix
178	Types Of Features
454	Rolling monthly and yearly store means
43	See how our generator work
181	Merging the bureau dataset along with application train dataset to do more analysis
90	How many images are in each folder
528	Predict null data based on statistical method
541	Difference varialbes were created to describe the difference beween maximum and minimum value
275	Addressing Wrong Labels
206	Composition of Augmentations
326	Distribution of Search Values
208	Preprocessing of features
109	Plot the Loss Curves
480	Make prediction and apply invert scaling
33	FVC Progression by Sex
189	Bounded region of parameter space
584	Save some memory
111	Process the Predictions
193	When Do People Generally Reorder
267	Affected Surface Object
347	Train and validate
218	Comparison between Brazil and Italy
160	Variable Description , Identification , and Correction
286	The data has no missing values and is scaled between zero and one
96	MAKE A TEST SET PREDICTION
492	Hugging Face pretrained Bert model names
23	Apply Underbalancing Techinique
524	Check null data
356	and batch aggregations examples for the rest of the tables ..
358	extract different column types
554	Load train and test dataframes and add length columns for Description and Name
196	Visualizing Interest Level Vs Bedrooms
222	USA since first case
80	Ensembling the solutions and submission
274	Read in Data and Look at Summary Information
48	Counting the metric score
143	Data load and process functions
432	Plotting errors for one sample
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
433	train solved tasks
484	Create dataset for training and Validation
144	CatBoost is RAM expensive so I prefer to utilize GPU
247	Read the csv files from kaggle
65	Prices of the first level of categories
164	Loading the data
244	Interactive booking , click , and percentage of booking trends with Bokeh
169	Loading the data
307	Example of Sampling from the Domain
210	Let us read the masks
227	Full data Analysis
44	Prepare Testing Data
546	Use machine learning model
343	Monthly Cash Data
564	SAVE DATASET TO DISK
223	Getting population for each country
292	Submitting our Predictions
348	Granted applications per number of children
97	Set up the generator
243	Bookings by month
120	Set up the folds for cross validation
316	Combined Aggregation Function
321	Aggregate Credit previous loans
249	Transpose the dataframes
113	What is a python generator
327	Testing Results on Full Data
369	load mapping dictionaries
258	y hist with defferent timestamps are similar
183	Paths to data and metadata
156	Square feet size is positively Skewed
465	Making Feature Matrices
116	FS with the Pearson correlation
588	Read and Explore
205	Gaussian Noise on Target
75	Comparison of the all feature importance diagrams
567	The method for training is borrowed from
351	Check the typical length of a comment
571	Loading libraries and data
332	Align Train and Test Sets
315	Drop Correlated Variables
110	Make a Prediction
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
209	Text Processing of text data easily
419	Import the modules
285	Machine Learning Modeling
441	Find Best Weight
20	Data is still small enough for memory so read to memory using pandas
233	Import Packages and Functions
399	Build datasets objects
357	load mapping dictionaries
320	Aggregate Cash previous loans
425	Predict with pure text models
13	Getting to Know the Data
26	Ability to Detect Face
319	Aggregate Installments Data
305	Evaluate Best Model from Random Search
269	Show Original Image
331	Remove Low Importance Features
76	Thanks to Automatic FE The main code for basic FE
6	Read data set
95	Create a Classification Report
82	Its also builds on kernel functions but is appropriate for unsupervised learning
163	Seting X and Y
36	All contraction are known
238	Random Forest Regressor
463	Loading and Visualization of Data
404	Load and preprocess data
289	Visualize Tree with No Maximum Depth
93	Set Up the Generators
349	Income distribution and target value
494	Choose the model to use
297	Create Training and Validation Set
17	Defining DataBunch for FastAI
187	Interpreting ROC Plot
389	Group and Reduce
31	Data loading and checking
270	Start by pivoting the DataFrame to explore the label distribution over slices
129	How many different cars in train dataset
123	Basic skin detection
219	China scenario since first entry
106	Thanks for the example of ensemling different models from
252	using outliers column as labels instead of target column
529	Onehot encoding for categorical data
74	Apply Logistic Regression
101	Balance the target distribution
131	Code from here and below is commented out because the kernel dies
346	Prediction for one image
340	Putting the Functions Together
549	Write a problem file
589	Replace infs and imputing missing values by mean
245	expanding the aggregate
558	If you like the content of this notebook , please consider upvoting it
483	Make a Baseline model
224	Select the models to run setting bool variables below
375	and background color definition
67	Does shipping depends of price
256	missing value statistics
500	Get variables to apply weight decay in AdamW optimizer
9	And now we embed each chunk individually
71	Is there a correlation between description length and price
479	Create dataset with look back
104	Define X and y
176	Importing The Dataset
16	Seed everything for reproducibility
32	Unique value counts
481	Using all features for model training
53	I updated importation for a faster version
394	Load text data into memory
308	Learning Rate Distribution
393	Load and process data
192	At What Day Of The Week People Order
514	Predictions class distribution
60	We can now print the results
555	What Does a Normal Image Look Like
291	Filling missing and infinite data by zeroes
64	So , some categories are expensive , but most are cheap
132	Lets validate the test files
135	The number of samples in each cluster is the following
302	Test Time Features
457	Sampling the train data since too much data
127	Thanks for the example of ensemling different models from
424	Build the original and translated test data
310	Random Search on the Full Dataset
201	Bedroom Count Vs Log Error
323	Learning Rate Domain
572	You can choose many palettes , which makes the graphs visually nice
452	Then transform to a datetime object supposing that it is an ordinal datetime
87	Code from notebook
62	Deriving individual masks for each object
402	Load and preprocess data
388	Pad and resize all the images
478	Convert an array of values into a dataset matrix
325	First , we need to put our data into a long format dataframe
34	FVC Progression by SmokingStatus
170	Create Document Vectors
122	Get the dupplicate clicks with different target values
523	Load and preprocess data
395	Build datasets objects
240	Predict on test set
490	Compare timing for MixUp
3	Detect and Correct Outliers
409	Create new labels
538	Predict all country greater than
453	Most of the dates overlap
570	Function which creates final video from list of images
408	Will need those folders later for storing our jpegs
449	They are very similar to each other
158	Encoding Categorical Variable
542	Here is a base model without parameter tuning .
372	Process test data in parallel
511	Test data preparation
213	Now we can read the masks for the specific image
22	The data is not balanced
225	Calculating the day when the number of infected individuals is max
175	Creating the Model
4	No surprises , since this is all presumably artificial data
496	Get metrics for validation dataset
373	Load Packages and Data
384	Load and freeze DenseNet
521	Remove feature with only one value
353	Predict validation and test set masks
207	Loading and preprocessing data
435	All train tasks predictions
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
337	Putting it all Together
304	Visualize Validation Predicted Target
214	For the same window we superimpose the masks above the image
234	Load and Explore Data
78	FS with SelectFromModel and LinearSVR
171	Document Vectors with TfidfVectorizer
363	Create DFs imitating public and private test subsets
298	Train with Simple Features
339	Function to Handle Categorical Variables
255	Check if valid data looks all right
184	Group signals metadata accroding to target
342	Calculate Information for Testing Data
491	Compare timing for GridMask
125	Some stats using jpg exif
248	Read the csv files on the Johns Hopkins CSSE database on github
15	Importing all Libraries
147	Fitting Logistic Regression with OneVsRest Classifier
576	We can see above the counts of higher damageDealt smoothly decrease
114	How to make a generator run infinitely
102	Train Test Split
260	Import necessary libraries
264	Remove Extreme Prices
497	Run on test dataset
61	Dealing with color
282	For example , we can divide the years of schooling by the age
406	Save model and best hyperparams
149	Variable Description and Identification
284	Next we can rename the columns to make it easier to keep track
217	Now a look at Italy
525	Check the dataset
344	Monthly Credit Data
543	Explore ip counts
141	Confusion Matrix for Test Data Predictions
352	Define helper functions
199	Create final submission DF
471	Create Image Augmentation Generator
146	Featurization of Training Data
204	No Of Storeys Vs Log Error
98	Make a prediction on the test images
28	Show and save column comparision matrix and save row sets
45	Create Testing Generator
506	Random Forest model
568	Add train leak
272	Demonstration how it works
324	Grid Search Implementation
293	Data Exploration and Data Cleaning
387	Padding process and resizing with OpenCV
438	Fast data loading
195	Visuallizing Interest Level Vs Bathroom
107	Load the pre processed data
414	Training the model
368	Gaussian Approximation of Active Cases
281	Redundant Individual Variables
265	Use Ad Image to Identify Item Category
212	Let us load one image and its masks
12	Look at the data types and some basic info about the different columns
536	Predict by Specify Province
550	Plot the obtained tour
150	Meter Reading and Meter Type
88	My upgrade of parameters
