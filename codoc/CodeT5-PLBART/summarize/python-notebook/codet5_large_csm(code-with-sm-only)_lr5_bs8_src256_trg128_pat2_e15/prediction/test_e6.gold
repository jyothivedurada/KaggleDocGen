433	train solved tasks
201	Bedroom Count Vs Log Error
249	Transpose the dataframes
466	Count game trainsition
352	Define helper functions
144	CatBoost is RAM expensive so I prefer to utilize GPU
560	The evaluation method
464	Making Vocabulary and Text Conversion
161	Encoding Street Names
480	Make prediction and apply invert scaling
163	Seting X and Y
111	Process the Predictions
125	Some stats using jpg exif
332	Align Train and Test Sets
542	Here is a base model without parameter tuning .
306	Now we can evaluate the baseline model on the testing data
177	Function for find out Numerical and categeical Variables
32	Unique value counts
545	Preparing the data
190	Lets Read In Data Files
246	a quick check if demand distribution changes week to week
469	Number of Patients and Images in Training Images Folder
171	Document Vectors with TfidfVectorizer
337	Putting it all Together
316	Combined Aggregation Function
395	Build datasets objects
333	Distribution of Scores
517	Make new features using continuous feature
334	Plots of Hyperparameters vs Score
377	OSIC training data Example
315	Drop Correlated Variables
396	Load model into the TPU
580	Label encoding Making it machine readable
143	Data load and process functions
361	Set data loading parameters
584	Save some memory
459	targets in train.csv
95	Create a Classification Report
378	Predict Test Set and Submit Result
285	Machine Learning Modeling
189	Bounded region of parameter space
58	Download rate by hour
445	make hour column from transactionDT
581	NaN imputation will be skipped in this tutorial
42	See sample image
505	Check oversampled dataset
473	process training images
387	Padding process and resizing with OpenCV
300	Explore Time Variables
590	RF for feature selection
488	Prediction for test
421	Drop the blurry image
256	missing value statistics
478	Convert an array of values into a dataset matrix
235	Create the embedding layer
21	And finally lets look at the class distribution
320	Aggregate Cash previous loans
71	Is there a correlation between description length and price
139	Using RandomForest Classifier
24	The data is not balanced
92	Balance the target distribution
106	Thanks for the example of ensemling different models from
569	Add leak to test
145	Word map for most frequent Tags
155	Meter Readings over time And Primary Use
116	FS with the Pearson correlation
549	Write a problem file
156	Square feet size is positively Skewed
74	Apply Logistic Regression
196	Visualizing Interest Level Vs Bedrooms
538	Predict all country greater than
568	Add train leak
176	Importing The Dataset
164	Loading the data
327	Testing Results on Full Data
84	Parameters and LB score visualization
202	Bathroom Count Vs Log Error
272	Demonstration how it works
60	We can now print the results
297	Create Training and Validation Set
107	Load the pre processed data
357	load mapping dictionaries
269	Show Original Image
381	Create fake filepaths dataframe
207	Loading and preprocessing data
436	Fast data loading
449	They are very similar to each other
25	Take a look at predictions
573	The competition metric relies only on the order of recods ignoring IDs
399	Build datasets objects
257	y的异常值 drop samples which have exception value in y
543	Explore ip counts
446	At first , I made Europe future
463	Loading and Visualization of Data
83	Thanks for the example of ensemling different models from
471	Create Image Augmentation Generator
30	Training on the complete Dataset now
47	Create and set up the model
583	That is the size of one test example that we ought to predict
452	Then transform to a datetime object supposing that it is an ordinal datetime
124	Apply skin segmentation on all training data and visualize the result
169	Loading the data
255	Check if valid data looks all right
268	All Zero Features
29	Preparing the training data
386	Save model and weights
329	DFS with Selected Aggregation Primitives
69	What words do people use
99	Create a submission file
401	Inference on Test Set
140	Confusion Matrix for Train Data Predictions
556	What are Lung Opacities
468	View Single Image
262	Ordinal features mapping
22	The data is not balanced
311	Bayesian Optimization on the Full Dataset
98	Make a prediction on the test images
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
310	Random Search on the Full Dataset
133	Idea is to use clustering on images of one type to group data
225	Calculating the day when the number of infected individuals is max
539	Predict all province greater than
536	Predict by Specify Province
46	Split the data into train and validation parts
100	Create Binary Targets
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
168	MERGE , MISSING VALUE , FILL NA
571	Loading libraries and data
515	Check the dataset
588	Read and Explore
61	Dealing with color
254	Non physical data augmentation
453	Most of the dates overlap
491	Compare timing for GridMask
96	MAKE A TEST SET PREDICTION
435	All train tasks predictions
120	Set up the folds for cross validation
55	Zoom on this IP
244	Interactive booking , click , and percentage of booking trends with Bokeh
131	Code from here and below is commented out because the kernel dies
160	Variable Description , Identification , and Correction
507	Data transformation and helper functions
406	Save model and best hyperparams
75	Comparison of the all feature importance diagrams
521	Remove feature with only one value
16	Seed everything for reproducibility
518	Ratio feature can have infinite values
205	Gaussian Noise on Target
510	Set Model for prediction
409	Create new labels
554	Load train and test dataframes and add length columns for Description and Name
364	Distribution of months in train and test
390	Adding mode as feature
312	Standard imports for data science work
275	Addressing Wrong Labels
232	and target vector that correspond to the test data size
0	Seems like a very wide range of values , relatively spaking
362	Perform check on randomly chosen mask and prediction
26	Ability to Detect Face
141	Confusion Matrix for Test Data Predictions
317	Merge with the main dataframe
308	Learning Rate Distribution
359	Prepare for training
236	Build the Model
53	I updated importation for a faster version
494	Choose the model to use
259	Save objects for next step
365	SHAP Interaction Values
291	Filling missing and infinite data by zeroes
9	And now we embed each chunk individually
238	Random Forest Regressor
550	Plot the obtained tour
347	Train and validate
402	Load and preprocess data
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
472	Get Tabular Data
482	These have their kitchen area larger than the total area of the house
511	Test data preparation
589	Replace infs and imputing missing values by mean
572	You can choose many palettes , which makes the graphs visually nice
576	We can see above the counts of higher damageDealt smoothly decrease
544	Conversions by Device
15	Importing all Libraries
90	How many images are in each folder
440	Fast data loading
81	Implementing the SIR model
526	Moving average is so simple
41	Prepare Traning Data
292	Submitting our Predictions
220	Spain since first recorded case
158	Encoding Categorical Variable
451	OUTPUT OF AUGMENTATED IMAGES
206	Composition of Augmentations
35	Count occurance of words
528	Predict null data based on statistical method
296	The test distribution seems to be similar to the training distribution
379	TPU Strategy and other configs
495	Run on validation dataset
339	Function to Handle Categorical Variables
86	Divide features into groups
188	Load data and fit some models
305	Evaluate Best Model from Random Search
204	No Of Storeys Vs Log Error
497	Run on test dataset
104	Define X and y
448	Model Evaluation and Validation
267	Affected Surface Object
18	Unfreeze all layers and find best learning rate
509	Best parameters are searched by GridSearchCV on my Laptop
417	Comparing various kappa scoring
215	Prediction on test set
52	Hist Graph of scores
228	Seperating the data into different data frame based on the labels
200	No Of Storey Over The Years
579	Feature primitives Basically which functions are we going to use to create features
541	Difference varialbes were created to describe the difference beween maximum and minimum value
475	process submission images
418	Relevant attributes of identified objects are stored
302	Test Time Features
34	FVC Progression by SmokingStatus
233	Import Packages and Functions
237	Imputing missing values
282	For example , we can divide the years of schooling by the age
126	Its also builds on kernel functions but is appropriate for unsupervised learning
191	When Do People Generally Order
209	Text Processing of text data easily
73	Import Required Libraries
137	Confusion Matrix for Train Data Predictions
437	Leak Data loading and concat
89	Using my notebook
356	and batch aggregations examples for the rest of the tables ..
172	Document Vectors with HashingVectorizer
500	Get variables to apply weight decay in AdamW optimizer
97	Set up the generator
355	Loading the data
13	Getting to Know the Data
94	What is the AUC Score
384	Load and freeze DenseNet
222	USA since first case
149	Variable Description and Identification
178	Types Of Features
2	Impute any values will significantly affect the RMSE score for test set
65	Prices of the first level of categories
301	We can make the same plot by day of the week
80	Ensembling the solutions and submission
423	Creating submission file
229	most important or common positive words
54	How many different values does our categorial variables take
424	Build the original and translated test data
363	Create DFs imitating public and private test subsets
442	Fast data loading
372	Process test data in parallel
253	Check Unique Label
557	Opacities That Are Not Related to Pneumonia
383	Create real file paths dataframe
87	Code from notebook
303	Try with All Time Variables
103	Set Up the Generators
429	Pick some frames to display
295	Rides on Map of NYC
286	The data has no missing values and is scaled between zero and one
115	Thanks to Automatic FE The main code for basic FE
344	Monthly Credit Data
558	If you like the content of this notebook , please consider upvoting it
193	When Do People Generally Reorder
373	Load Packages and Data
366	Get important features according to SHAP
57	Attributed time analysis
533	Logistic Regression seems to be a good classification algorithm for this dataset
487	Define dataset and model
44	Prepare Testing Data
498	Hugging Face pretrained Bert model names
367	Exponential Growth Curves
322	Hyperparameter Tuning Implementation
537	Predict by Specify Country
276	Families without Heads of Household
154	Meter Readings over time
354	Train the LGBM model
477	Split into train and test sets
121	Genetic program model , main code loop
427	Ensemble with my historical best
210	Let us read the masks
146	Featurization of Training Data
458	targets in labels.csv
461	TPU Strategy and other configs
525	Check the dataset
51	Make a simple restart of runtime at this point
307	Example of Sampling from the Domain
559	Composition of functions
108	Initialize the generators
577	Getting Prime Cities
499	Choose the model to use
231	Most important or common words in neutral data
425	Predict with pure text models
501	Check saved checkpoints
319	Aggregate Installments Data
502	An example usage
288	Recursive Feature Elimination with Random Forest
208	Preprocessing of features
241	Bookings per day of week
8	Model Validation on train data set
358	extract different column types
388	Pad and resize all the images
486	Create Inference Dataset
49	Saving the model
444	what already is known
45	Create Testing Generator
503	Get labels and their countings
492	Hugging Face pretrained Bert model names
489	Compare timing for CutMix
289	Visualize Tree with No Maximum Depth
426	Predict with mixed language models
348	Granted applications per number of children
368	Gaussian Approximation of Active Cases
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
1	Imputations and Data Transformation
439	Leak Data loading and concat
113	What is a python generator
72	Graph Representation of RNA structure
441	Find Best Weight
564	SAVE DATASET TO DISK
353	Predict validation and test set masks
506	Random Forest model
93	Set Up the Generators
587	Applying it on text
553	Disable fastai randomness
224	Select the models to run setting bool variables below
419	Import the modules
136	Using DecisionTree Classifier
59	Importation of a entire day data
350	Read the data
40	Using embedding in NN we can change dimensionality of categorical features
187	Interpreting ROC Plot
181	Merging the bureau dataset along with application train dataset to do more analysis
56	Does bots download the app
67	Does shipping depends of price
298	Train with Simple Features
77	FS with the Pearson correlation
516	Check null data
496	Get metrics for validation dataset
410	Pad and resize all the images
342	Calculate Information for Testing Data
341	Aggregated Stats of Bureau Balance by Client
404	Load and preprocess data
221	Iran since first case
548	For neutral samples , use original texts as they are
50	You can state below link to your copy of this MMDetection repo
110	Make a Prediction
36	All contraction are known
389	Group and Reduce
585	What should good EDA be capable of
11	Maybe if we used the log plot things would be better
529	Onehot encoding for categorical data
345	Split into training and validation groups
245	expanding the aggregate
340	Putting the Functions Together
385	Creating and Training the Model
470	Number of Patients and Images in Test Images Folder
4	No surprises , since this is all presumably artificial data
197	Correlation Between Price and Other Features
398	Load text data into memory
165	Librairies and data
534	You only have two areas to work on
223	Getting population for each country
530	Target , prediction process
17	Defining DataBunch for FastAI
431	This plot shows summarized information about feature impact against shap output
522	Feature selection using shap
39	Using LabelEncoding we just change string values to numbers
591	Evaluate the Model
33	FVC Progression by Sex
546	Use machine learning model
152	Time of Day and Meter Reading
153	Primary Use and Meter Reading
552	At the scale of stores
331	Remove Low Importance Features
6	Read data set
219	China scenario since first entry
415	Load Test dataframe
328	DFS with Default Primitives
586	Reading in the data , as usual
551	Import libraries and data , reduce memory usage
374	Outlier Analysis and Feature Scaling
265	Use Ad Image to Identify Item Category
266	Price Variance Within Identified Items
457	Sampling the train data since too much data
481	Using all features for model training
313	Now we want to combine the data without creating any duplicate rows
68	Can we get some informations out of the item description
14	The Shape of the Data
299	Use More Features
213	Now we can read the masks for the specific image
567	The method for training is borrowed from
371	This images from validation data seem to be really strange labeled ...
105	Its also builds on kernel functions but is appropriate for unsupervised learning
264	Remove Extreme Prices
198	Main Config Variables
462	Get Model into TPU
243	Bookings by month
519	combination using three features
134	Test on the data that is not seen by the network during training
592	Load CSV files
260	Import necessary libraries
555	What Does a Normal Image Look Like
76	Thanks to Automatic FE The main code for basic FE
455	Train Our Linear Regression Model
82	Its also builds on kernel functions but is appropriate for unsupervised learning
531	Null data check
5	Now there appears to be one feature that is not gaussian
349	Income distribution and target value
239	Feature Agglomeration Results
280	In most cases , the values are very similar
20	Data is still small enough for memory so read to memory using pandas
360	Initialize train and test DataFrames to access IDs and depth information
422	Display the dropped images
12	Look at the data types and some basic info about the different columns
248	Read the csv files on the Johns Hopkins CSSE database on github
578	NOTE Even tough it is automatic , we can incorporate some manual features
218	Comparison between Brazil and Italy
532	It seems Goblins are a little similar to Ghouls
483	Make a Baseline model
66	What are their top categories
64	So , some categories are expensive , but most are cheap
214	For the same window we superimpose the masks above the image
270	Start by pivoting the DataFrame to explore the label distribution over slices
382	First downsize all the images
273	Combinations of TTA
173	Document Vectors with hashing trick
376	Add the actors to the renderer , set the background and size
314	Identify Correlated Variables
174	Keras Tokenizer API
119	Load data files
112	Create the submission csv file
514	Predictions class distribution
247	Read the csv files from kaggle
122	Get the dupplicate clicks with different target values
375	and background color definition
547	This notebook will deal with positive , negative and neutral samples independently
430	Split Trian and Valid
447	There is a gap between them
512	Data preparation for test
574	Lib and Load data
180	Checking the Correlation Between The Features for Application Train Dataset
493	Make TF record file for test dataset
325	First , we need to put our data into a long format dataframe
252	using outliers column as labels instead of target column
438	Fast data loading
412	Reducing Image Size
227	Full data Analysis
129	How many different cars in train dataset
414	Training the model
293	Data Exploration and Data Cleaning
212	Let us load one image and its masks
148	Importing Packages and Collecting Data
192	At What Day Of The Week People Order
43	See how our generator work
593	We can safely store the two types into separate dataframes
524	Check null data
251	filtering out outliers
19	Predicting for test data
130	Define some constants for data location
279	Per Capita Features
203	Room Count Vs Log Error
465	Making Feature Matrices
195	Visuallizing Interest Level Vs Bathroom
403	Evaluate training history
394	Load text data into memory
428	This is a simple modify from
400	Load model into the TPU
182	analyzing the numerical features disturbion in previous application dataset
326	Distribution of Search Values
127	Thanks for the example of ensemling different models from
476	we add some squared features for some model flexability
278	Creating Ordinal Variables
561	Solve the task
48	Counting the metric score
166	MERGE , MISSING VALUE , FILL NA
62	Deriving individual masks for each object
183	Paths to data and metadata
128	Manager function to call the create features functions in multiple processes
485	CNN Model for multiclass classification
274	Read in Data and Look at Summary Information
304	Visualize Validation Predicted Target
413	Save results as CSV files
432	Plotting errors for one sample
490	Compare timing for MixUp
234	Load and Explore Data
343	Monthly Cash Data
284	Next we can rename the columns to make it easier to keep track
132	Lets validate the test files
290	Lets first check the Train Target Distribution
393	Load and process data
70	Can the length of the description give us some informations
159	Prediction and Submission
184	Group signals metadata accroding to target
38	Predict submission dates
380	Load Model into TPU
114	How to make a generator run infinitely
562	Ensure determinism in the results
28	Show and save column comparision matrix and save row sets
405	Unhide below to see all trials results
194	How many orders users generally made
142	Converting the Input images to plot using plt
434	evaluation solved tasks
230	Most important or common negative words
175	Creating the Model
527	Find Null data
287	Comparing Model Performance
109	Plot the Loss Curves
167	Loading the data
242	Bookings by year
147	Fitting Logistic Regression with OneVsRest Classifier
23	Apply Underbalancing Techinique
450	Importing Library Files
408	Will need those folders later for storing our jpegs
31	Data loading and checking
318	Aggregate previous loans at Home Credit
336	Properly Representing Variable Types
170	Create Document Vectors
407	Load Model into TPU
392	Plotting some random images to check how cleaning works
88	My upgrade of parameters
150	Meter Reading and Meter Type
138	Confusion Matrix for Test Data Predictions
523	Load and preprocess data
78	FS with SelectFromModel and LinearSVR
258	y hist with defferent timestamps are similar
199	Create final submission DF
135	The number of samples in each cluster is the following
566	The mean of the two is used as the final embedding matrix
117	FS with SelectFromModel and LinearSVR
27	Loading data etc
185	Apply reduction on some samples and visualize the results
565	LOAD DATASET FROM DISK
277	Redundant Household Variables
281	Redundant Individual Variables
7	Text preprosesing source
118	FS with SelectFromModel and RandomForestRegressor
102	Train Test Split
540	Age distribution of male and female patients
261	High cardinality features
91	Create a Dataframe containing all images
508	Show influence of economical factors on housing prices
513	Convert DCM to PNG
217	Now a look at Italy
79	Parameters and LB score visualization
369	load mapping dictionaries
370	inspect datagen output
563	LOAD PROCESSED TRAINING DATA FROM DISK
474	process test images
283	Feature Engineering through Aggregations
101	Balance the target distribution
330	Visualize Distribution of Correlated Variables
250	Join all dataframes
211	So a unique operator will give us the unique filenames that contain ships
391	Refit and Submit
179	Analysis based Averages values
454	Rolling monthly and yearly store means
456	Next , we will make prediction with our LR Model
338	Correlations of Aggregated Values with Target
416	Infer using trained model
467	Visualize by heatmap
294	Empirical Cumulative Distribution Function Plot
520	Mix region and education
3	Detect and Correct Outliers
321	Aggregate Credit previous loans
570	Function which creates final video from list of images
123	Basic skin detection
443	Leak Data loading and concat
575	Explore distribution of single variable
309	Applied to Full Dataset
420	Other columns are the digital value of pixels of kannada mnist
63	Convert each labeled object to Run Line Encoding
324	Grid Search Implementation
504	Define the number of repetitions for each class
397	Create fast tokenizer
335	First we need to format the data and extract the labels
226	Lets gets started
263	Predict test set and make submission
162	Encoding Cordinal Direction
479	Create dataset with look back
346	Prediction for one image
157	Imputing Missing variable
323	Learning Rate Domain
240	Predict on test set
484	Create dataset for training and Validation
582	Let us split the variables one more time
151	Weekday and Meter Reading
85	Prepare Training Data
535	Add active column
216	Replacing Mainland china with just China
460	These labels are not in train
411	Create test generator
351	Check the typical length of a comment
