438	Fast data loading
181	Merging the bureau dataset along with application train dataset to do more analysis
540	Age distribution of male and female patients
140	Confusion Matrix for Train Data Predictions
308	Learning Rate Distribution
96	MAKE A TEST SET PREDICTION
500	Get variables to apply weight decay in AdamW optimizer
553	Disable fastai randomness
343	Monthly Cash Data
136	Using DecisionTree Classifier
273	Combinations of TTA
441	Find Best Weight
483	Make a Baseline model
285	Machine Learning Modeling
323	Learning Rate Domain
171	Document Vectors with TfidfVectorizer
67	Does shipping depends of price
449	They are very similar to each other
235	Create the embedding layer
452	Then transform to a datetime object supposing that it is an ordinal datetime
255	Check if valid data looks all right
68	Can we get some informations out of the item description
583	That is the size of one test example that we ought to predict
159	Prediction and Submission
280	In most cases , the values are very similar
148	Importing Packages and Collecting Data
403	Evaluate training history
223	Getting population for each country
205	Gaussian Noise on Target
534	You only have two areas to work on
149	Variable Description and Identification
217	Now a look at Italy
350	Read the data
423	Creating submission file
1	Imputations and Data Transformation
530	Target , prediction process
354	Train the LGBM model
195	Visuallizing Interest Level Vs Bathroom
229	most important or common positive words
16	Seed everything for reproducibility
18	Unfreeze all layers and find best learning rate
371	This images from validation data seem to be really strange labeled ...
450	Importing Library Files
242	Bookings by year
11	Maybe if we used the log plot things would be better
424	Build the original and translated test data
432	Plotting errors for one sample
508	Show influence of economical factors on housing prices
431	This plot shows summarized information about feature impact against shap output
339	Function to Handle Categorical Variables
558	If you like the content of this notebook , please consider upvoting it
573	The competition metric relies only on the order of recods ignoring IDs
496	Get metrics for validation dataset
312	Standard imports for data science work
480	Make prediction and apply invert scaling
17	Defining DataBunch for FastAI
20	Data is still small enough for memory so read to memory using pandas
299	Use More Features
126	Its also builds on kernel functions but is appropriate for unsupervised learning
463	Loading and Visualization of Data
250	Join all dataframes
404	Load and preprocess data
429	Pick some frames to display
214	For the same window we superimpose the masks above the image
43	See how our generator work
582	Let us split the variables one more time
401	Inference on Test Set
114	How to make a generator run infinitely
422	Display the dropped images
182	analyzing the numerical features disturbion in previous application dataset
178	Types Of Features
74	Apply Logistic Regression
377	OSIC training data Example
174	Keras Tokenizer API
575	Explore distribution of single variable
64	So , some categories are expensive , but most are cheap
389	Group and Reduce
33	FVC Progression by Sex
130	Define some constants for data location
274	Read in Data and Look at Summary Information
513	Convert DCM to PNG
29	Preparing the training data
353	Predict validation and test set masks
260	Import necessary libraries
30	Training on the complete Dataset now
409	Create new labels
590	RF for feature selection
373	Load Packages and Data
265	Use Ad Image to Identify Item Category
9	And now we embed each chunk individually
467	Visualize by heatmap
23	Apply Underbalancing Techinique
210	Let us read the masks
484	Create dataset for training and Validation
246	a quick check if demand distribution changes week to week
15	Importing all Libraries
362	Perform check on randomly chosen mask and prediction
386	Save model and weights
147	Fitting Logistic Regression with OneVsRest Classifier
574	Lib and Load data
93	Set Up the Generators
118	FS with SelectFromModel and RandomForestRegressor
436	Fast data loading
318	Aggregate previous loans at Home Credit
533	Logistic Regression seems to be a good classification algorithm for this dataset
294	Empirical Cumulative Distribution Function Plot
31	Data loading and checking
457	Sampling the train data since too much data
150	Meter Reading and Meter Type
124	Apply skin segmentation on all training data and visualize the result
228	Seperating the data into different data frame based on the labels
234	Load and Explore Data
89	Using my notebook
134	Test on the data that is not seen by the network during training
82	Its also builds on kernel functions but is appropriate for unsupervised learning
213	Now we can read the masks for the specific image
329	DFS with Selected Aggregation Primitives
379	TPU Strategy and other configs
570	Function which creates final video from list of images
267	Affected Surface Object
486	Create Inference Dataset
4	No surprises , since this is all presumably artificial data
466	Count game trainsition
563	LOAD PROCESSED TRAINING DATA FROM DISK
427	Ensemble with my historical best
335	First we need to format the data and extract the labels
166	MERGE , MISSING VALUE , FILL NA
321	Aggregate Credit previous loans
304	Visualize Validation Predicted Target
105	Its also builds on kernel functions but is appropriate for unsupervised learning
94	What is the AUC Score
358	extract different column types
554	Load train and test dataframes and add length columns for Description and Name
334	Plots of Hyperparameters vs Score
157	Imputing Missing variable
322	Hyperparameter Tuning Implementation
378	Predict Test Set and Submit Result
310	Random Search on the Full Dataset
542	Here is a base model without parameter tuning .
504	Define the number of repetitions for each class
562	Ensure determinism in the results
83	Thanks for the example of ensemling different models from
222	USA since first case
331	Remove Low Importance Features
173	Document Vectors with hashing trick
317	Merge with the main dataframe
146	Featurization of Training Data
445	make hour column from transactionDT
48	Counting the metric score
40	Using embedding in NN we can change dimensionality of categorical features
426	Predict with mixed language models
295	Rides on Map of NYC
375	and background color definition
543	Explore ip counts
291	Filling missing and infinite data by zeroes
578	NOTE Even tough it is automatic , we can incorporate some manual features
270	Start by pivoting the DataFrame to explore the label distribution over slices
497	Run on test dataset
589	Replace infs and imputing missing values by mean
19	Predicting for test data
337	Putting it all Together
410	Pad and resize all the images
209	Text Processing of text data easily
226	Lets gets started
268	All Zero Features
493	Make TF record file for test dataset
207	Loading and preprocessing data
54	How many different values does our categorial variables take
284	Next we can rename the columns to make it easier to keep track
264	Remove Extreme Prices
169	Loading the data
333	Distribution of Scores
300	Explore Time Variables
505	Check oversampled dataset
514	Predictions class distribution
97	Set up the generator
468	View Single Image
420	Other columns are the digital value of pixels of kannada mnist
51	Make a simple restart of runtime at this point
202	Bathroom Count Vs Log Error
45	Create Testing Generator
162	Encoding Cordinal Direction
356	and batch aggregations examples for the rest of the tables ..
262	Ordinal features mapping
518	Ratio feature can have infinite values
326	Distribution of Search Values
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
328	DFS with Default Primitives
477	Split into train and test sets
560	The evaluation method
552	At the scale of stores
314	Identify Correlated Variables
499	Choose the model to use
539	Predict all province greater than
394	Load text data into memory
39	Using LabelEncoding we just change string values to numbers
32	Unique value counts
435	All train tasks predictions
230	Most important or common negative words
591	Evaluate the Model
5	Now there appears to be one feature that is not gaussian
180	Checking the Correlation Between The Features for Application Train Dataset
586	Reading in the data , as usual
303	Try with All Time Variables
399	Build datasets objects
110	Make a Prediction
55	Zoom on this IP
340	Putting the Functions Together
581	NaN imputation will be skipped in this tutorial
462	Get Model into TPU
282	For example , we can divide the years of schooling by the age
91	Create a Dataframe containing all images
293	Data Exploration and Data Cleaning
21	And finally lets look at the class distribution
584	Save some memory
257	y的异常值 drop samples which have exception value in y
344	Monthly Credit Data
296	The test distribution seems to be similar to the training distribution
204	No Of Storeys Vs Log Error
158	Encoding Categorical Variable
376	Add the actors to the renderer , set the background and size
448	Model Evaluation and Validation
461	TPU Strategy and other configs
544	Conversions by Device
381	Create fake filepaths dataframe
405	Unhide below to see all trials results
172	Document Vectors with HashingVectorizer
277	Redundant Household Variables
175	Creating the Model
108	Initialize the generators
44	Prepare Testing Data
416	Infer using trained model
587	Applying it on text
50	You can state below link to your copy of this MMDetection repo
153	Primary Use and Meter Reading
8	Model Validation on train data set
34	FVC Progression by SmokingStatus
529	Onehot encoding for categorical data
14	The Shape of the Data
152	Time of Day and Meter Reading
580	Label encoding Making it machine readable
517	Make new features using continuous feature
176	Importing The Dataset
316	Combined Aggregation Function
348	Granted applications per number of children
458	targets in labels.csv
220	Spain since first recorded case
352	Define helper functions
454	Rolling monthly and yearly store means
200	No Of Storey Over The Years
233	Import Packages and Functions
363	Create DFs imitating public and private test subsets
111	Process the Predictions
444	what already is known
523	Load and preprocess data
551	Import libraries and data , reduce memory usage
593	We can safely store the two types into separate dataframes
392	Plotting some random images to check how cleaning works
198	Main Config Variables
592	Load CSV files
446	At first , I made Europe future
498	Hugging Face pretrained Bert model names
66	What are their top categories
572	You can choose many palettes , which makes the graphs visually nice
395	Build datasets objects
183	Paths to data and metadata
546	Use machine learning model
49	Saving the model
487	Define dataset and model
476	we add some squared features for some model flexability
439	Leak Data loading and concat
81	Implementing the SIR model
567	The method for training is borrowed from
561	Solve the task
576	We can see above the counts of higher damageDealt smoothly decrease
286	The data has no missing values and is scaled between zero and one
402	Load and preprocess data
252	using outliers column as labels instead of target column
306	Now we can evaluate the baseline model on the testing data
42	See sample image
473	process training images
451	OUTPUT OF AUGMENTATED IMAGES
184	Group signals metadata accroding to target
345	Split into training and validation groups
215	Prediction on test set
161	Encoding Street Names
98	Make a prediction on the test images
366	Get important features according to SHAP
84	Parameters and LB score visualization
488	Prediction for test
117	FS with SelectFromModel and LinearSVR
216	Replacing Mainland china with just China
87	Code from notebook
221	Iran since first case
455	Train Our Linear Regression Model
71	Is there a correlation between description length and price
194	How many orders users generally made
256	missing value statistics
243	Bookings by month
465	Making Feature Matrices
197	Correlation Between Price and Other Features
156	Square feet size is positively Skewed
579	Feature primitives Basically which functions are we going to use to create features
141	Confusion Matrix for Test Data Predictions
132	Lets validate the test files
73	Import Required Libraries
406	Save model and best hyperparams
577	Getting Prime Cities
133	Idea is to use clustering on images of one type to group data
475	process submission images
127	Thanks for the example of ensemling different models from
151	Weekday and Meter Reading
85	Prepare Training Data
79	Parameters and LB score visualization
585	What should good EDA be capable of
512	Data preparation for test
511	Test data preparation
440	Fast data loading
188	Load data and fit some models
25	Take a look at predictions
370	inspect datagen output
472	Get Tabular Data
259	Save objects for next step
434	evaluation solved tasks
101	Balance the target distribution
292	Submitting our Predictions
418	Relevant attributes of identified objects are stored
442	Fast data loading
417	Comparing various kappa scoring
144	CatBoost is RAM expensive so I prefer to utilize GPU
396	Load model into the TPU
196	Visualizing Interest Level Vs Bedrooms
212	Let us load one image and its masks
139	Using RandomForest Classifier
385	Creating and Training the Model
28	Show and save column comparision matrix and save row sets
433	train solved tasks
131	Code from here and below is commented out because the kernel dies
99	Create a submission file
414	Training the model
550	Plot the obtained tour
247	Read the csv files from kaggle
80	Ensembling the solutions and submission
24	The data is not balanced
103	Set Up the Generators
425	Predict with pure text models
428	This is a simple modify from
320	Aggregate Cash previous loans
109	Plot the Loss Curves
75	Comparison of the all feature importance diagrams
536	Predict by Specify Province
501	Check saved checkpoints
241	Bookings per day of week
104	Define X and y
367	Exponential Growth Curves
72	Graph Representation of RNA structure
65	Prices of the first level of categories
524	Check null data
155	Meter Readings over time And Primary Use
411	Create test generator
116	FS with the Pearson correlation
145	Word map for most frequent Tags
382	First downsize all the images
415	Load Test dataframe
515	Check the dataset
351	Check the typical length of a comment
421	Drop the blurry image
46	Split the data into train and validation parts
332	Align Train and Test Sets
588	Read and Explore
232	and target vector that correspond to the test data size
279	Per Capita Features
470	Number of Patients and Images in Test Images Folder
263	Predict test set and make submission
478	Convert an array of values into a dataset matrix
199	Create final submission DF
516	Check null data
60	We can now print the results
224	Select the models to run setting bool variables below
77	FS with the Pearson correlation
95	Create a Classification Report
464	Making Vocabulary and Text Conversion
519	combination using three features
237	Imputing missing values
57	Attributed time analysis
494	Choose the model to use
142	Converting the Input images to plot using plt
113	What is a python generator
251	filtering out outliers
532	It seems Goblins are a little similar to Ghouls
325	First , we need to put our data into a long format dataframe
160	Variable Description , Identification , and Correction
190	Lets Read In Data Files
372	Process test data in parallel
311	Bayesian Optimization on the Full Dataset
143	Data load and process functions
327	Testing Results on Full Data
413	Save results as CSV files
249	Transpose the dataframes
115	Thanks to Automatic FE The main code for basic FE
338	Correlations of Aggregated Values with Target
70	Can the length of the description give us some informations
297	Create Training and Validation Set
502	An example usage
521	Remove feature with only one value
315	Drop Correlated Variables
346	Prediction for one image
125	Some stats using jpg exif
170	Create Document Vectors
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
12	Look at the data types and some basic info about the different columns
355	Loading the data
163	Seting X and Y
276	Families without Heads of Household
443	Leak Data loading and concat
474	process test images
453	Most of the dates overlap
261	High cardinality features
374	Outlier Analysis and Feature Scaling
568	Add train leak
391	Refit and Submit
525	Check the dataset
398	Load text data into memory
522	Feature selection using shap
219	China scenario since first entry
185	Apply reduction on some samples and visualize the results
430	Split Trian and Valid
520	Mix region and education
137	Confusion Matrix for Train Data Predictions
341	Aggregated Stats of Bureau Balance by Client
120	Set up the folds for cross validation
13	Getting to Know the Data
61	Dealing with color
495	Run on validation dataset
503	Get labels and their countings
122	Get the dupplicate clicks with different target values
100	Create Binary Targets
489	Compare timing for CutMix
541	Difference varialbes were created to describe the difference beween maximum and minimum value
412	Reducing Image Size
278	Creating Ordinal Variables
531	Null data check
407	Load Model into TPU
177	Function for find out Numerical and categeical Variables
203	Room Count Vs Log Error
460	These labels are not in train
564	SAVE DATASET TO DISK
26	Ability to Detect Face
491	Compare timing for GridMask
393	Load and process data
537	Predict by Specify Country
52	Hist Graph of scores
357	load mapping dictionaries
565	LOAD DATASET FROM DISK
309	Applied to Full Dataset
253	Check Unique Label
364	Distribution of months in train and test
244	Interactive booking , click , and percentage of booking trends with Bokeh
92	Balance the target distribution
526	Moving average is so simple
58	Download rate by hour
471	Create Image Augmentation Generator
507	Data transformation and helper functions
287	Comparing Model Performance
469	Number of Patients and Images in Training Images Folder
76	Thanks to Automatic FE The main code for basic FE
102	Train Test Split
490	Compare timing for MixUp
47	Create and set up the model
281	Redundant Individual Variables
535	Add active column
63	Convert each labeled object to Run Line Encoding
527	Find Null data
313	Now we want to combine the data without creating any duplicate rows
397	Create fast tokenizer
556	What are Lung Opacities
301	We can make the same plot by day of the week
380	Load Model into TPU
201	Bedroom Count Vs Log Error
211	So a unique operator will give us the unique filenames that contain ships
336	Properly Representing Variable Types
2	Impute any values will significantly affect the RMSE score for test set
548	For neutral samples , use original texts as they are
492	Hugging Face pretrained Bert model names
482	These have their kitchen area larger than the total area of the house
266	Price Variance Within Identified Items
138	Confusion Matrix for Test Data Predictions
189	Bounded region of parameter space
78	FS with SelectFromModel and LinearSVR
167	Loading the data
275	Addressing Wrong Labels
571	Loading libraries and data
225	Calculating the day when the number of infected individuals is max
387	Padding process and resizing with OpenCV
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
283	Feature Engineering through Aggregations
305	Evaluate Best Model from Random Search
383	Create real file paths dataframe
349	Income distribution and target value
53	I updated importation for a faster version
193	When Do People Generally Reorder
154	Meter Readings over time
90	How many images are in each folder
41	Prepare Traning Data
538	Predict all country greater than
360	Initialize train and test DataFrames to access IDs and depth information
290	Lets first check the Train Target Distribution
347	Train and validate
164	Loading the data
239	Feature Agglomeration Results
0	Seems like a very wide range of values , relatively spaking
129	How many different cars in train dataset
3	Detect and Correct Outliers
506	Random Forest model
258	y hist with defferent timestamps are similar
123	Basic skin detection
238	Random Forest Regressor
298	Train with Simple Features
384	Load and freeze DenseNet
168	MERGE , MISSING VALUE , FILL NA
324	Grid Search Implementation
121	Genetic program model , main code loop
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
240	Predict on test set
62	Deriving individual masks for each object
361	Set data loading parameters
7	Text preprosesing source
208	Preprocessing of features
112	Create the submission csv file
569	Add leak to test
269	Show Original Image
557	Opacities That Are Not Related to Pneumonia
481	Using all features for model training
119	Load data files
35	Count occurance of words
307	Example of Sampling from the Domain
236	Build the Model
289	Visualize Tree with No Maximum Depth
437	Leak Data loading and concat
106	Thanks for the example of ensemling different models from
88	My upgrade of parameters
400	Load model into the TPU
272	Demonstration how it works
368	Gaussian Approximation of Active Cases
128	Manager function to call the create features functions in multiple processes
248	Read the csv files on the Johns Hopkins CSSE database on github
319	Aggregate Installments Data
187	Interpreting ROC Plot
179	Analysis based Averages values
192	At What Day Of The Week People Order
27	Loading data etc
509	Best parameters are searched by GridSearchCV on my Laptop
479	Create dataset with look back
107	Load the pre processed data
359	Prepare for training
447	There is a gap between them
390	Adding mode as feature
566	The mean of the two is used as the final embedding matrix
135	The number of samples in each cluster is the following
59	Importation of a entire day data
555	What Does a Normal Image Look Like
86	Divide features into groups
206	Composition of Augmentations
36	All contraction are known
369	load mapping dictionaries
510	Set Model for prediction
56	Does bots download the app
547	This notebook will deal with positive , negative and neutral samples independently
227	Full data Analysis
545	Preparing the data
419	Import the modules
288	Recursive Feature Elimination with Random Forest
388	Pad and resize all the images
191	When Do People Generally Order
408	Will need those folders later for storing our jpegs
559	Composition of functions
342	Calculate Information for Testing Data
302	Test Time Features
330	Visualize Distribution of Correlated Variables
459	targets in train.csv
218	Comparison between Brazil and Italy
528	Predict null data based on statistical method
456	Next , we will make prediction with our LR Model
38	Predict submission dates
485	CNN Model for multiclass classification
69	What words do people use
254	Non physical data augmentation
165	Librairies and data
22	The data is not balanced
245	expanding the aggregate
549	Write a problem file
365	SHAP Interaction Values
6	Read data set
231	Most important or common words in neutral data
