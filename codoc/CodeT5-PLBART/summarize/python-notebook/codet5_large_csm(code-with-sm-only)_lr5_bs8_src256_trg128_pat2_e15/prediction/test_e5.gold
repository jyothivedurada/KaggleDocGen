536	Predict by Specify Province
498	Hugging Face pretrained Bert model names
300	Explore Time Variables
197	Correlation Between Price and Other Features
522	Feature selection using shap
98	Make a prediction on the test images
62	Deriving individual masks for each object
334	Plots of Hyperparameters vs Score
560	The evaluation method
391	Refit and Submit
579	Feature primitives Basically which functions are we going to use to create features
44	Prepare Testing Data
145	Word map for most frequent Tags
369	load mapping dictionaries
66	What are their top categories
286	The data has no missing values and is scaled between zero and one
168	MERGE , MISSING VALUE , FILL NA
308	Learning Rate Distribution
455	Train Our Linear Regression Model
373	Load Packages and Data
482	These have their kitchen area larger than the total area of the house
351	Check the typical length of a comment
261	High cardinality features
378	Predict Test Set and Submit Result
506	Random Forest model
358	extract different column types
550	Plot the obtained tour
28	Show and save column comparision matrix and save row sets
305	Evaluate Best Model from Random Search
105	Its also builds on kernel functions but is appropriate for unsupervised learning
562	Ensure determinism in the results
209	Text Processing of text data easily
478	Convert an array of values into a dataset matrix
192	At What Day Of The Week People Order
484	Create dataset for training and Validation
132	Lets validate the test files
89	Using my notebook
365	SHAP Interaction Values
256	missing value statistics
56	Does bots download the app
576	We can see above the counts of higher damageDealt smoothly decrease
194	How many orders users generally made
366	Get important features according to SHAP
199	Create final submission DF
40	Using embedding in NN we can change dimensionality of categorical features
505	Check oversampled dataset
139	Using RandomForest Classifier
404	Load and preprocess data
475	process submission images
296	The test distribution seems to be similar to the training distribution
238	Random Forest Regressor
548	For neutral samples , use original texts as they are
401	Inference on Test Set
592	Load CSV files
27	Loading data etc
411	Create test generator
428	This is a simple modify from
111	Process the Predictions
260	Import necessary libraries
55	Zoom on this IP
161	Encoding Street Names
588	Read and Explore
429	Pick some frames to display
332	Align Train and Test Sets
340	Putting the Functions Together
443	Leak Data loading and concat
11	Maybe if we used the log plot things would be better
573	The competition metric relies only on the order of recods ignoring IDs
585	What should good EDA be capable of
436	Fast data loading
43	See how our generator work
417	Comparing various kappa scoring
155	Meter Readings over time And Primary Use
348	Granted applications per number of children
285	Machine Learning Modeling
250	Join all dataframes
310	Random Search on the Full Dataset
447	There is a gap between them
21	And finally lets look at the class distribution
414	Training the model
253	Check Unique Label
494	Choose the model to use
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
90	How many images are in each folder
234	Load and Explore Data
449	They are very similar to each other
268	All Zero Features
97	Set up the generator
23	Apply Underbalancing Techinique
337	Putting it all Together
564	SAVE DATASET TO DISK
183	Paths to data and metadata
235	Create the embedding layer
568	Add train leak
324	Grid Search Implementation
231	Most important or common words in neutral data
530	Target , prediction process
287	Comparing Model Performance
392	Plotting some random images to check how cleaning works
158	Encoding Categorical Variable
408	Will need those folders later for storing our jpegs
114	How to make a generator run infinitely
220	Spain since first recorded case
570	Function which creates final video from list of images
481	Using all features for model training
24	The data is not balanced
127	Thanks for the example of ensemling different models from
77	FS with the Pearson correlation
552	At the scale of stores
175	Creating the Model
126	Its also builds on kernel functions but is appropriate for unsupervised learning
311	Bayesian Optimization on the Full Dataset
345	Split into training and validation groups
166	MERGE , MISSING VALUE , FILL NA
298	Train with Simple Features
350	Read the data
415	Load Test dataframe
164	Loading the data
195	Visuallizing Interest Level Vs Bathroom
538	Predict all country greater than
203	Room Count Vs Log Error
395	Build datasets objects
92	Balance the target distribution
489	Compare timing for CutMix
67	Does shipping depends of price
362	Perform check on randomly chosen mask and prediction
162	Encoding Cordinal Direction
316	Combined Aggregation Function
523	Load and preprocess data
501	Check saved checkpoints
277	Redundant Household Variables
218	Comparison between Brazil and Italy
280	In most cases , the values are very similar
38	Predict submission dates
558	If you like the content of this notebook , please consider upvoting it
133	Idea is to use clustering on images of one type to group data
460	These labels are not in train
229	most important or common positive words
546	Use machine learning model
575	Explore distribution of single variable
368	Gaussian Approximation of Active Cases
439	Leak Data loading and concat
116	FS with the Pearson correlation
527	Find Null data
160	Variable Description , Identification , and Correction
146	Featurization of Training Data
242	Bookings by year
571	Loading libraries and data
282	For example , we can divide the years of schooling by the age
208	Preprocessing of features
465	Making Feature Matrices
371	This images from validation data seem to be really strange labeled ...
294	Empirical Cumulative Distribution Function Plot
485	CNN Model for multiclass classification
511	Test data preparation
25	Take a look at predictions
273	Combinations of TTA
73	Import Required Libraries
188	Load data and fit some models
385	Creating and Training the Model
207	Loading and preprocessing data
42	See sample image
171	Document Vectors with TfidfVectorizer
556	What are Lung Opacities
313	Now we want to combine the data without creating any duplicate rows
456	Next , we will make prediction with our LR Model
213	Now we can read the masks for the specific image
60	We can now print the results
451	OUTPUT OF AUGMENTATED IMAGES
275	Addressing Wrong Labels
539	Predict all province greater than
247	Read the csv files from kaggle
79	Parameters and LB score visualization
181	Merging the bureau dataset along with application train dataset to do more analysis
473	process training images
214	For the same window we superimpose the masks above the image
406	Save model and best hyperparams
131	Code from here and below is commented out because the kernel dies
367	Exponential Growth Curves
272	Demonstration how it works
561	Solve the task
117	FS with SelectFromModel and LinearSVR
54	How many different values does our categorial variables take
578	NOTE Even tough it is automatic , we can incorporate some manual features
320	Aggregate Cash previous loans
338	Correlations of Aggregated Values with Target
476	we add some squared features for some model flexability
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
102	Train Test Split
525	Check the dataset
289	Visualize Tree with No Maximum Depth
389	Group and Reduce
202	Bathroom Count Vs Log Error
157	Imputing Missing variable
244	Interactive booking , click , and percentage of booking trends with Bokeh
422	Display the dropped images
4	No surprises , since this is all presumably artificial data
88	My upgrade of parameters
26	Ability to Detect Face
108	Initialize the generators
544	Conversions by Device
152	Time of Day and Meter Reading
196	Visualizing Interest Level Vs Bedrooms
293	Data Exploration and Data Cleaning
344	Monthly Credit Data
381	Create fake filepaths dataframe
582	Let us split the variables one more time
112	Create the submission csv file
518	Ratio feature can have infinite values
59	Importation of a entire day data
32	Unique value counts
593	We can safely store the two types into separate dataframes
0	Seems like a very wide range of values , relatively spaking
427	Ensemble with my historical best
479	Create dataset with look back
301	We can make the same plot by day of the week
323	Learning Rate Domain
22	The data is not balanced
537	Predict by Specify Country
315	Drop Correlated Variables
312	Standard imports for data science work
535	Add active column
513	Convert DCM to PNG
336	Properly Representing Variable Types
153	Primary Use and Meter Reading
448	Model Evaluation and Validation
466	Count game trainsition
57	Attributed time analysis
17	Defining DataBunch for FastAI
474	process test images
423	Creating submission file
70	Can the length of the description give us some informations
514	Predictions class distribution
269	Show Original Image
559	Composition of functions
424	Build the original and translated test data
99	Create a submission file
565	LOAD DATASET FROM DISK
252	using outliers column as labels instead of target column
386	Save model and weights
421	Drop the blurry image
302	Test Time Features
221	Iran since first case
241	Bookings per day of week
169	Loading the data
257	y的异常值 drop samples which have exception value in y
496	Get metrics for validation dataset
318	Aggregate previous loans at Home Credit
471	Create Image Augmentation Generator
64	So , some categories are expensive , but most are cheap
65	Prices of the first level of categories
342	Calculate Information for Testing Data
13	Getting to Know the Data
291	Filling missing and infinite data by zeroes
96	MAKE A TEST SET PREDICTION
399	Build datasets objects
507	Data transformation and helper functions
267	Affected Surface Object
177	Function for find out Numerical and categeical Variables
3	Detect and Correct Outliers
110	Make a Prediction
85	Prepare Training Data
292	Submitting our Predictions
467	Visualize by heatmap
472	Get Tabular Data
216	Replacing Mainland china with just China
483	Make a Baseline model
159	Prediction and Submission
239	Feature Agglomeration Results
191	When Do People Generally Order
502	An example usage
543	Explore ip counts
182	analyzing the numerical features disturbion in previous application dataset
383	Create real file paths dataframe
370	inspect datagen output
215	Prediction on test set
504	Define the number of repetitions for each class
590	RF for feature selection
206	Composition of Augmentations
437	Leak Data loading and concat
74	Apply Logistic Regression
509	Best parameters are searched by GridSearchCV on my Laptop
374	Outlier Analysis and Feature Scaling
184	Group signals metadata accroding to target
587	Applying it on text
493	Make TF record file for test dataset
468	View Single Image
255	Check if valid data looks all right
387	Padding process and resizing with OpenCV
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
150	Meter Reading and Meter Type
541	Difference varialbes were created to describe the difference beween maximum and minimum value
69	What words do people use
400	Load model into the TPU
343	Monthly Cash Data
425	Predict with pure text models
430	Split Trian and Valid
84	Parameters and LB score visualization
531	Null data check
307	Example of Sampling from the Domain
276	Families without Heads of Household
419	Import the modules
94	What is the AUC Score
462	Get Model into TPU
516	Check null data
86	Divide features into groups
390	Adding mode as feature
19	Predicting for test data
45	Create Testing Generator
174	Keras Tokenizer API
147	Fitting Logistic Regression with OneVsRest Classifier
143	Data load and process functions
87	Code from notebook
355	Loading the data
457	Sampling the train data since too much data
540	Age distribution of male and female patients
265	Use Ad Image to Identify Item Category
1	Imputations and Data Transformation
109	Plot the Loss Curves
519	combination using three features
219	China scenario since first entry
463	Loading and Visualization of Data
357	load mapping dictionaries
46	Split the data into train and validation parts
6	Read data set
557	Opacities That Are Not Related to Pneumonia
41	Prepare Traning Data
258	y hist with defferent timestamps are similar
580	Label encoding Making it machine readable
39	Using LabelEncoding we just change string values to numbers
376	Add the actors to the renderer , set the background and size
18	Unfreeze all layers and find best learning rate
433	train solved tasks
211	So a unique operator will give us the unique filenames that contain ships
259	Save objects for next step
444	what already is known
149	Variable Description and Identification
205	Gaussian Noise on Target
82	Its also builds on kernel functions but is appropriate for unsupervised learning
100	Create Binary Targets
75	Comparison of the all feature importance diagrams
148	Importing Packages and Collecting Data
405	Unhide below to see all trials results
103	Set Up the Generators
122	Get the dupplicate clicks with different target values
499	Choose the model to use
339	Function to Handle Categorical Variables
347	Train and validate
71	Is there a correlation between description length and price
402	Load and preprocess data
500	Get variables to apply weight decay in AdamW optimizer
356	and batch aggregations examples for the rest of the tables ..
113	What is a python generator
78	FS with SelectFromModel and LinearSVR
532	It seems Goblins are a little similar to Ghouls
591	Evaluate the Model
495	Run on validation dataset
393	Load and process data
225	Calculating the day when the number of infected individuals is max
309	Applied to Full Dataset
173	Document Vectors with hashing trick
574	Lib and Load data
409	Create new labels
299	Use More Features
445	make hour column from transactionDT
134	Test on the data that is not seen by the network during training
520	Mix region and education
51	Make a simple restart of runtime at this point
528	Predict null data based on statistical method
217	Now a look at Italy
29	Preparing the training data
480	Make prediction and apply invert scaling
266	Price Variance Within Identified Items
165	Librairies and data
426	Predict with mixed language models
274	Read in Data and Look at Summary Information
198	Main Config Variables
251	filtering out outliers
388	Pad and resize all the images
341	Aggregated Stats of Bureau Balance by Client
555	What Does a Normal Image Look Like
34	FVC Progression by SmokingStatus
283	Feature Engineering through Aggregations
123	Basic skin detection
263	Predict test set and make submission
80	Ensembling the solutions and submission
512	Data preparation for test
262	Ordinal features mapping
554	Load train and test dataframes and add length columns for Description and Name
151	Weekday and Meter Reading
349	Income distribution and target value
454	Rolling monthly and yearly store means
477	Split into train and test sets
317	Merge with the main dataframe
106	Thanks for the example of ensemling different models from
446	At first , I made Europe future
7	Text preprosesing source
81	Implementing the SIR model
314	Identify Correlated Variables
303	Try with All Time Variables
141	Confusion Matrix for Test Data Predictions
470	Number of Patients and Images in Test Images Folder
142	Converting the Input images to plot using plt
178	Types Of Features
246	a quick check if demand distribution changes week to week
379	TPU Strategy and other configs
284	Next we can rename the columns to make it easier to keep track
187	Interpreting ROC Plot
331	Remove Low Importance Features
170	Create Document Vectors
515	Check the dataset
333	Distribution of Scores
68	Can we get some informations out of the item description
412	Reducing Image Size
403	Evaluate training history
581	NaN imputation will be skipped in this tutorial
491	Compare timing for GridMask
359	Prepare for training
190	Lets Read In Data Files
490	Compare timing for MixUp
487	Define dataset and model
5	Now there appears to be one feature that is not gaussian
328	DFS with Default Primitives
584	Save some memory
93	Set Up the Generators
469	Number of Patients and Images in Training Images Folder
223	Getting population for each country
549	Write a problem file
510	Set Model for prediction
577	Getting Prime Cities
353	Predict validation and test set masks
20	Data is still small enough for memory so read to memory using pandas
125	Some stats using jpg exif
335	First we need to format the data and extract the labels
382	First downsize all the images
534	You only have two areas to work on
295	Rides on Map of NYC
464	Making Vocabulary and Text Conversion
95	Create a Classification Report
567	The method for training is borrowed from
83	Thanks for the example of ensemling different models from
179	Analysis based Averages values
2	Impute any values will significantly affect the RMSE score for test set
526	Moving average is so simple
15	Importing all Libraries
189	Bounded region of parameter space
16	Seed everything for reproducibility
136	Using DecisionTree Classifier
107	Load the pre processed data
441	Find Best Weight
586	Reading in the data , as usual
226	Lets gets started
264	Remove Extreme Prices
61	Dealing with color
453	Most of the dates overlap
237	Imputing missing values
413	Save results as CSV files
279	Per Capita Features
230	Most important or common negative words
583	That is the size of one test example that we ought to predict
346	Prediction for one image
172	Document Vectors with HashingVectorizer
49	Saving the model
47	Create and set up the model
517	Make new features using continuous feature
91	Create a Dataframe containing all images
193	When Do People Generally Reorder
140	Confusion Matrix for Train Data Predictions
458	targets in labels.csv
521	Remove feature with only one value
508	Show influence of economical factors on housing prices
461	TPU Strategy and other configs
407	Load Model into TPU
222	USA since first case
306	Now we can evaluate the baseline model on the testing data
270	Start by pivoting the DataFrame to explore the label distribution over slices
104	Define X and y
438	Fast data loading
14	The Shape of the Data
304	Visualize Validation Predicted Target
297	Create Training and Validation Set
63	Convert each labeled object to Run Line Encoding
121	Genetic program model , main code loop
524	Check null data
163	Seting X and Y
233	Import Packages and Functions
354	Train the LGBM model
330	Visualize Distribution of Correlated Variables
551	Import libraries and data , reduce memory usage
227	Full data Analysis
245	expanding the aggregate
128	Manager function to call the create features functions in multiple processes
52	Hist Graph of scores
431	This plot shows summarized information about feature impact against shap output
278	Creating Ordinal Variables
434	evaluation solved tasks
533	Logistic Regression seems to be a good classification algorithm for this dataset
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
236	Build the Model
232	and target vector that correspond to the test data size
420	Other columns are the digital value of pixels of kannada mnist
394	Load text data into memory
33	FVC Progression by Sex
529	Onehot encoding for categorical data
375	and background color definition
224	Select the models to run setting bool variables below
200	No Of Storey Over The Years
486	Create Inference Dataset
452	Then transform to a datetime object supposing that it is an ordinal datetime
129	How many different cars in train dataset
488	Prediction for test
553	Disable fastai randomness
53	I updated importation for a faster version
435	All train tasks predictions
138	Confusion Matrix for Test Data Predictions
352	Define helper functions
418	Relevant attributes of identified objects are stored
372	Process test data in parallel
545	Preparing the data
201	Bedroom Count Vs Log Error
380	Load Model into TPU
410	Pad and resize all the images
572	You can choose many palettes , which makes the graphs visually nice
542	Here is a base model without parameter tuning .
36	All contraction are known
547	This notebook will deal with positive , negative and neutral samples independently
281	Redundant Individual Variables
243	Bookings by month
432	Plotting errors for one sample
360	Initialize train and test DataFrames to access IDs and depth information
361	Set data loading parameters
58	Download rate by hour
364	Distribution of months in train and test
12	Look at the data types and some basic info about the different columns
50	You can state below link to your copy of this MMDetection repo
290	Lets first check the Train Target Distribution
130	Define some constants for data location
8	Model Validation on train data set
396	Load model into the TPU
416	Infer using trained model
144	CatBoost is RAM expensive so I prefer to utilize GPU
154	Meter Readings over time
35	Count occurance of words
210	Let us read the masks
124	Apply skin segmentation on all training data and visualize the result
325	First , we need to put our data into a long format dataframe
119	Load data files
492	Hugging Face pretrained Bert model names
120	Set up the folds for cross validation
398	Load text data into memory
101	Balance the target distribution
72	Graph Representation of RNA structure
248	Read the csv files on the Johns Hopkins CSSE database on github
503	Get labels and their countings
384	Load and freeze DenseNet
459	targets in train.csv
118	FS with SelectFromModel and RandomForestRegressor
135	The number of samples in each cluster is the following
569	Add leak to test
319	Aggregate Installments Data
156	Square feet size is positively Skewed
397	Create fast tokenizer
185	Apply reduction on some samples and visualize the results
326	Distribution of Search Values
329	DFS with Selected Aggregation Primitives
115	Thanks to Automatic FE The main code for basic FE
377	OSIC training data Example
204	No Of Storeys Vs Log Error
249	Transpose the dataframes
288	Recursive Feature Elimination with Random Forest
450	Importing Library Files
327	Testing Results on Full Data
180	Checking the Correlation Between The Features for Application Train Dataset
31	Data loading and checking
176	Importing The Dataset
212	Let us load one image and its masks
363	Create DFs imitating public and private test subsets
30	Training on the complete Dataset now
167	Loading the data
48	Counting the metric score
254	Non physical data augmentation
563	LOAD PROCESSED TRAINING DATA FROM DISK
322	Hyperparameter Tuning Implementation
9	And now we embed each chunk individually
228	Seperating the data into different data frame based on the labels
137	Confusion Matrix for Train Data Predictions
321	Aggregate Credit previous loans
566	The mean of the two is used as the final embedding matrix
240	Predict on test set
76	Thanks to Automatic FE The main code for basic FE
442	Fast data loading
497	Run on test dataset
440	Fast data loading
589	Replace infs and imputing missing values by mean
