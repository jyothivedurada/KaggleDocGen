16	Seed everything for reproducibility
100	Create Binary Targets
116	FS with the Pearson correlation
270	Start by pivoting the DataFrame to explore the label distribution over slices
249	Transpose the dataframes
425	Predict with pure text models
278	Creating Ordinal Variables
573	The competition metric relies only on the order of recods ignoring IDs
103	Set Up the Generators
214	For the same window we superimpose the masks above the image
21	And finally lets look at the class distribution
134	Test on the data that is not seen by the network during training
28	Show and save column comparision matrix and save row sets
444	what already is known
220	Spain since first recorded case
316	Combined Aggregation Function
41	Prepare Traning Data
533	Logistic Regression seems to be a good classification algorithm for this dataset
208	Preprocessing of features
424	Build the original and translated test data
157	Imputing Missing variable
79	Parameters and LB score visualization
95	Create a Classification Report
138	Confusion Matrix for Test Data Predictions
38	Predict submission dates
392	Plotting some random images to check how cleaning works
413	Save results as CSV files
439	Leak Data loading and concat
438	Fast data loading
255	Check if valid data looks all right
423	Creating submission file
453	Most of the dates overlap
135	The number of samples in each cluster is the following
148	Importing Packages and Collecting Data
215	Prediction on test set
264	Remove Extreme Prices
295	Rides on Map of NYC
96	MAKE A TEST SET PREDICTION
30	Training on the complete Dataset now
42	See sample image
49	Saving the model
156	Square feet size is positively Skewed
404	Load and preprocess data
590	RF for feature selection
65	Prices of the first level of categories
273	Combinations of TTA
304	Visualize Validation Predicted Target
263	Predict test set and make submission
213	Now we can read the masks for the specific image
9	And now we embed each chunk individually
531	Null data check
97	Set up the generator
225	Calculating the day when the number of infected individuals is max
82	Its also builds on kernel functions but is appropriate for unsupervised learning
61	Dealing with color
456	Next , we will make prediction with our LR Model
394	Load text data into memory
59	Importation of a entire day data
43	See how our generator work
339	Function to Handle Categorical Variables
77	FS with the Pearson correlation
171	Document Vectors with TfidfVectorizer
534	You only have two areas to work on
121	Genetic program model , main code loop
403	Evaluate training history
178	Types Of Features
203	Room Count Vs Log Error
326	Distribution of Search Values
217	Now a look at Italy
18	Unfreeze all layers and find best learning rate
106	Thanks for the example of ensemling different models from
416	Infer using trained model
527	Find Null data
340	Putting the Functions Together
577	Getting Prime Cities
12	Look at the data types and some basic info about the different columns
175	Creating the Model
129	How many different cars in train dataset
506	Random Forest model
500	Get variables to apply weight decay in AdamW optimizer
387	Padding process and resizing with OpenCV
55	Zoom on this IP
247	Read the csv files from kaggle
259	Save objects for next step
189	Bounded region of parameter space
185	Apply reduction on some samples and visualize the results
130	Define some constants for data location
60	We can now print the results
227	Full data Analysis
146	Featurization of Training Data
360	Initialize train and test DataFrames to access IDs and depth information
257	y的异常值 drop samples which have exception value in y
45	Create Testing Generator
566	The mean of the two is used as the final embedding matrix
219	China scenario since first entry
124	Apply skin segmentation on all training data and visualize the result
218	Comparison between Brazil and Italy
93	Set Up the Generators
155	Meter Readings over time And Primary Use
177	Function for find out Numerical and categeical Variables
286	The data has no missing values and is scaled between zero and one
429	Pick some frames to display
242	Bookings by year
209	Text Processing of text data easily
383	Create real file paths dataframe
309	Applied to Full Dataset
480	Make prediction and apply invert scaling
126	Its also builds on kernel functions but is appropriate for unsupervised learning
463	Loading and Visualization of Data
539	Predict all province greater than
575	Explore distribution of single variable
338	Correlations of Aggregated Values with Target
184	Group signals metadata accroding to target
167	Loading the data
546	Use machine learning model
147	Fitting Logistic Regression with OneVsRest Classifier
483	Make a Baseline model
35	Count occurance of words
201	Bedroom Count Vs Log Error
371	This images from validation data seem to be really strange labeled ...
504	Define the number of repetitions for each class
20	Data is still small enough for memory so read to memory using pandas
330	Visualize Distribution of Correlated Variables
168	MERGE , MISSING VALUE , FILL NA
85	Prepare Training Data
142	Converting the Input images to plot using plt
587	Applying it on text
357	load mapping dictionaries
398	Load text data into memory
319	Aggregate Installments Data
136	Using DecisionTree Classifier
461	TPU Strategy and other configs
114	How to make a generator run infinitely
410	Pad and resize all the images
36	All contraction are known
48	Counting the metric score
288	Recursive Feature Elimination with Random Forest
231	Most important or common words in neutral data
347	Train and validate
530	Target , prediction process
524	Check null data
324	Grid Search Implementation
514	Predictions class distribution
224	Select the models to run setting bool variables below
361	Set data loading parameters
6	Read data set
228	Seperating the data into different data frame based on the labels
430	Split Trian and Valid
467	Visualize by heatmap
24	The data is not balanced
451	OUTPUT OF AUGMENTATED IMAGES
56	Does bots download the app
233	Import Packages and Functions
543	Explore ip counts
433	train solved tasks
460	These labels are not in train
317	Merge with the main dataframe
557	Opacities That Are Not Related to Pneumonia
400	Load model into the TPU
204	No Of Storeys Vs Log Error
510	Set Model for prediction
436	Fast data loading
123	Basic skin detection
580	Label encoding Making it machine readable
343	Monthly Cash Data
92	Balance the target distribution
576	We can see above the counts of higher damageDealt smoothly decrease
251	filtering out outliers
51	Make a simple restart of runtime at this point
153	Primary Use and Meter Reading
267	Affected Surface Object
465	Making Feature Matrices
582	Let us split the variables one more time
428	This is a simple modify from
193	When Do People Generally Reorder
181	Merging the bureau dataset along with application train dataset to do more analysis
381	Create fake filepaths dataframe
333	Distribution of Scores
526	Moving average is so simple
351	Check the typical length of a comment
272	Demonstration how it works
141	Confusion Matrix for Test Data Predictions
243	Bookings by month
378	Predict Test Set and Submit Result
302	Test Time Features
226	Lets gets started
268	All Zero Features
192	At What Day Of The Week People Order
68	Can we get some informations out of the item description
223	Getting population for each country
256	missing value statistics
450	Importing Library Files
37	Convert to lower case Clean contractions Clean special charactor Convert small caps
3	Detect and Correct Outliers
390	Adding mode as feature
239	Feature Agglomeration Results
274	Read in Data and Look at Summary Information
17	Defining DataBunch for FastAI
162	Encoding Cordinal Direction
572	You can choose many palettes , which makes the graphs visually nice
536	Predict by Specify Province
437	Leak Data loading and concat
86	Divide features into groups
552	At the scale of stores
584	Save some memory
238	Random Forest Regressor
161	Encoding Street Names
127	Thanks for the example of ensemling different models from
458	targets in labels.csv
260	Import necessary libraries
548	For neutral samples , use original texts as they are
389	Group and Reduce
303	Try with All Time Variables
289	Visualize Tree with No Maximum Depth
199	Create final submission DF
507	Data transformation and helper functions
376	Add the actors to the renderer , set the background and size
395	Build datasets objects
538	Predict all country greater than
380	Load Model into TPU
31	Data loading and checking
122	Get the dupplicate clicks with different target values
494	Choose the model to use
455	Train Our Linear Regression Model
511	Test data preparation
27	Loading data etc
165	Librairies and data
80	Ensembling the solutions and submission
446	At first , I made Europe future
331	Remove Low Importance Features
75	Comparison of the all feature importance diagrams
64	So , some categories are expensive , but most are cheap
265	Use Ad Image to Identify Item Category
578	NOTE Even tough it is automatic , we can incorporate some manual features
91	Create a Dataframe containing all images
113	What is a python generator
555	What Does a Normal Image Look Like
332	Align Train and Test Sets
475	process submission images
374	Outlier Analysis and Feature Scaling
505	Check oversampled dataset
241	Bookings per day of week
292	Submitting our Predictions
493	Make TF record file for test dataset
229	most important or common positive words
415	Load Test dataframe
7	Text preprosesing source
54	How many different values does our categorial variables take
23	Apply Underbalancing Techinique
427	Ensemble with my historical best
182	analyzing the numerical features disturbion in previous application dataset
323	Learning Rate Domain
420	Other columns are the digital value of pixels of kannada mnist
284	Next we can rename the columns to make it easier to keep track
76	Thanks to Automatic FE The main code for basic FE
32	Unique value counts
253	Check Unique Label
186	Rescaling the Image Most image preprocessing functions want the image as grayscale
579	Feature primitives Basically which functions are we going to use to create features
391	Refit and Submit
512	Data preparation for test
216	Replacing Mainland china with just China
432	Plotting errors for one sample
503	Get labels and their countings
110	Make a Prediction
52	Hist Graph of scores
329	DFS with Selected Aggregation Primitives
396	Load model into the TPU
159	Prediction and Submission
382	First downsize all the images
89	Using my notebook
325	First , we need to put our data into a long format dataframe
183	Paths to data and metadata
359	Prepare for training
345	Split into training and validation groups
196	Visualizing Interest Level Vs Bedrooms
131	Code from here and below is commented out because the kernel dies
108	Initialize the generators
542	Here is a base model without parameter tuning .
508	Show influence of economical factors on housing prices
294	Empirical Cumulative Distribution Function Plot
195	Visuallizing Interest Level Vs Bathroom
191	When Do People Generally Order
549	Write a problem file
421	Drop the blurry image
279	Per Capita Features
520	Mix region and education
482	These have their kitchen area larger than the total area of the house
469	Number of Patients and Images in Training Images Folder
591	Evaluate the Model
300	Explore Time Variables
166	MERGE , MISSING VALUE , FILL NA
441	Find Best Weight
14	The Shape of the Data
287	Comparing Model Performance
298	Train with Simple Features
492	Hugging Face pretrained Bert model names
454	Rolling monthly and yearly store means
384	Load and freeze DenseNet
353	Predict validation and test set masks
474	process test images
98	Make a prediction on the test images
133	Idea is to use clustering on images of one type to group data
411	Create test generator
90	How many images are in each folder
211	So a unique operator will give us the unique filenames that contain ships
556	What are Lung Opacities
405	Unhide below to see all trials results
235	Create the embedding layer
62	Deriving individual masks for each object
513	Convert DCM to PNG
341	Aggregated Stats of Bureau Balance by Client
321	Aggregate Credit previous loans
39	Using LabelEncoding we just change string values to numbers
210	Let us read the masks
544	Conversions by Device
94	What is the AUC Score
399	Build datasets objects
25	Take a look at predictions
232	and target vector that correspond to the test data size
212	Let us load one image and its masks
105	Its also builds on kernel functions but is appropriate for unsupervised learning
34	FVC Progression by SmokingStatus
102	Train Test Split
583	That is the size of one test example that we ought to predict
525	Check the dataset
344	Monthly Credit Data
5	Now there appears to be one feature that is not gaussian
408	Will need those folders later for storing our jpegs
254	Non physical data augmentation
246	a quick check if demand distribution changes week to week
385	Creating and Training the Model
476	we add some squared features for some model flexability
202	Bathroom Count Vs Log Error
409	Create new labels
375	and background color definition
152	Time of Day and Meter Reading
180	Checking the Correlation Between The Features for Application Train Dataset
558	If you like the content of this notebook , please consider upvoting it
448	Model Evaluation and Validation
431	This plot shows summarized information about feature impact against shap output
545	Preparing the data
445	make hour column from transactionDT
472	Get Tabular Data
367	Exponential Growth Curves
150	Meter Reading and Meter Type
282	For example , we can divide the years of schooling by the age
179	Analysis based Averages values
308	Learning Rate Distribution
449	They are very similar to each other
290	Lets first check the Train Target Distribution
29	Preparing the training data
250	Join all dataframes
521	Remove feature with only one value
299	Use More Features
529	Onehot encoding for categorical data
318	Aggregate previous loans at Home Credit
230	Most important or common negative words
139	Using RandomForest Classifier
188	Load data and fit some models
550	Plot the obtained tour
570	Function which creates final video from list of images
111	Process the Predictions
84	Parameters and LB score visualization
477	Split into train and test sets
320	Aggregate Cash previous loans
301	We can make the same plot by day of the week
568	Add train leak
412	Reducing Image Size
560	The evaluation method
452	Then transform to a datetime object supposing that it is an ordinal datetime
349	Income distribution and target value
143	Data load and process functions
132	Lets validate the test files
190	Lets Read In Data Files
151	Weekday and Meter Reading
104	Define X and y
118	FS with SelectFromModel and RandomForestRegressor
388	Pad and resize all the images
315	Drop Correlated Variables
519	combination using three features
358	extract different column types
269	Show Original Image
532	It seems Goblins are a little similar to Ghouls
275	Addressing Wrong Labels
466	Count game trainsition
10	And it looks like a fairly nice distribution , albeit still fairly asymetrical
73	Import Required Libraries
128	Manager function to call the create features functions in multiple processes
553	Disable fastai randomness
248	Read the csv files on the Johns Hopkins CSSE database on github
281	Redundant Individual Variables
87	Code from notebook
501	Check saved checkpoints
372	Process test data in parallel
74	Apply Logistic Regression
149	Variable Description and Identification
71	Is there a correlation between description length and price
252	using outliers column as labels instead of target column
571	Loading libraries and data
63	Convert each labeled object to Run Line Encoding
311	Bayesian Optimization on the Full Dataset
352	Define helper functions
125	Some stats using jpg exif
481	Using all features for model training
377	OSIC training data Example
464	Making Vocabulary and Text Conversion
563	LOAD PROCESSED TRAINING DATA FROM DISK
280	In most cases , the values are very similar
502	An example usage
276	Families without Heads of Household
335	First we need to format the data and extract the labels
307	Example of Sampling from the Domain
414	Training the model
206	Composition of Augmentations
22	The data is not balanced
197	Correlation Between Price and Other Features
72	Graph Representation of RNA structure
137	Confusion Matrix for Train Data Predictions
169	Loading the data
297	Create Training and Validation Set
468	View Single Image
355	Loading the data
419	Import the modules
486	Create Inference Dataset
495	Run on validation dataset
397	Create fast tokenizer
551	Import libraries and data , reduce memory usage
417	Comparing various kappa scoring
58	Download rate by hour
8	Model Validation on train data set
581	NaN imputation will be skipped in this tutorial
322	Hyperparameter Tuning Implementation
314	Identify Correlated Variables
33	FVC Progression by Sex
473	process training images
234	Load and Explore Data
364	Distribution of months in train and test
356	and batch aggregations examples for the rest of the tables ..
443	Leak Data loading and concat
485	CNN Model for multiclass classification
245	expanding the aggregate
26	Ability to Detect Face
237	Imputing missing values
541	Difference varialbes were created to describe the difference beween maximum and minimum value
66	What are their top categories
447	There is a gap between them
240	Predict on test set
81	Implementing the SIR model
334	Plots of Hyperparameters vs Score
350	Read the data
547	This notebook will deal with positive , negative and neutral samples independently
592	Load CSV files
198	Main Config Variables
488	Prediction for test
567	The method for training is borrowed from
271	As a Neuroradiologist , this distribution looks pretty true to daily practice
109	Plot the Loss Curves
440	Fast data loading
120	Set up the folds for cross validation
173	Document Vectors with hashing trick
154	Meter Readings over time
261	High cardinality features
296	The test distribution seems to be similar to the training distribution
50	You can state below link to your copy of this MMDetection repo
574	Lib and Load data
328	DFS with Default Primitives
221	Iran since first case
497	Run on test dataset
67	Does shipping depends of price
40	Using embedding in NN we can change dimensionality of categorical features
1	Imputations and Data Transformation
435	All train tasks predictions
46	Split the data into train and validation parts
479	Create dataset with look back
515	Check the dataset
422	Display the dropped images
283	Feature Engineering through Aggregations
112	Create the submission csv file
336	Properly Representing Variable Types
78	FS with SelectFromModel and LinearSVR
236	Build the Model
313	Now we want to combine the data without creating any duplicate rows
459	targets in train.csv
99	Create a submission file
174	Keras Tokenizer API
47	Create and set up the model
164	Loading the data
418	Relevant attributes of identified objects are stored
373	Load Packages and Data
13	Getting to Know the Data
457	Sampling the train data since too much data
491	Compare timing for GridMask
470	Number of Patients and Images in Test Images Folder
562	Ensure determinism in the results
348	Granted applications per number of children
565	LOAD DATASET FROM DISK
540	Age distribution of male and female patients
588	Read and Explore
176	Importing The Dataset
244	Interactive booking , click , and percentage of booking trends with Bokeh
522	Feature selection using shap
496	Get metrics for validation dataset
11	Maybe if we used the log plot things would be better
158	Encoding Categorical Variable
478	Convert an array of values into a dataset matrix
101	Balance the target distribution
518	Ratio feature can have infinite values
291	Filling missing and infinite data by zeroes
365	SHAP Interaction Values
368	Gaussian Approximation of Active Cases
144	CatBoost is RAM expensive so I prefer to utilize GPU
593	We can safely store the two types into separate dataframes
346	Prediction for one image
53	I updated importation for a faster version
83	Thanks for the example of ensemling different models from
107	Load the pre processed data
119	Load data files
363	Create DFs imitating public and private test subsets
69	What words do people use
44	Prepare Testing Data
386	Save model and weights
57	Attributed time analysis
564	SAVE DATASET TO DISK
366	Get important features according to SHAP
0	Seems like a very wide range of values , relatively spaking
258	y hist with defferent timestamps are similar
561	Solve the task
401	Inference on Test Set
4	No surprises , since this is all presumably artificial data
305	Evaluate Best Model from Random Search
293	Data Exploration and Data Cleaning
406	Save model and best hyperparams
442	Fast data loading
517	Make new features using continuous feature
70	Can the length of the description give us some informations
312	Standard imports for data science work
207	Loading and preprocessing data
172	Document Vectors with HashingVectorizer
379	TPU Strategy and other configs
170	Create Document Vectors
586	Reading in the data , as usual
285	Machine Learning Modeling
535	Add active column
310	Random Search on the Full Dataset
145	Word map for most frequent Tags
498	Hugging Face pretrained Bert model names
362	Perform check on randomly chosen mask and prediction
277	Redundant Household Variables
194	How many orders users generally made
559	Composition of functions
163	Seting X and Y
487	Define dataset and model
426	Predict with mixed language models
499	Choose the model to use
370	inspect datagen output
402	Load and preprocess data
306	Now we can evaluate the baseline model on the testing data
337	Putting it all Together
516	Check null data
266	Price Variance Within Identified Items
537	Predict by Specify Country
407	Load Model into TPU
15	Importing all Libraries
589	Replace infs and imputing missing values by mean
434	evaluation solved tasks
342	Calculate Information for Testing Data
528	Predict null data based on statistical method
205	Gaussian Noise on Target
2	Impute any values will significantly affect the RMSE score for test set
471	Create Image Augmentation Generator
88	My upgrade of parameters
200	No Of Storey Over The Years
490	Compare timing for MixUp
117	FS with SelectFromModel and LinearSVR
354	Train the LGBM model
160	Variable Description , Identification , and Correction
585	What should good EDA be capable of
569	Add leak to test
554	Load train and test dataframes and add length columns for Description and Name
140	Confusion Matrix for Train Data Predictions
327	Testing Results on Full Data
484	Create dataset for training and Validation
262	Ordinal features mapping
187	Interpreting ROC Plot
115	Thanks to Automatic FE The main code for basic FE
19	Predicting for test data
523	Load and preprocess data
369	load mapping dictionaries
489	Compare timing for CutMix
509	Best parameters are searched by GridSearchCV on my Laptop
393	Load and process data
222	USA since first case
462	Get Model into TPU
